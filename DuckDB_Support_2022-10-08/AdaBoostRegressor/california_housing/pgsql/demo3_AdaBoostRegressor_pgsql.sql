-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : AdaBoostRegressor
-- Dataset : california_housing
-- Database : pgsql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221008175017_0JOFCV3_WE_B0 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221008175017_0JOFCV3_WE_B0" (
	"KEY" BIGINT, 
	"Estimator" FLOAT, 
	"Weight" FLOAT, 
	est_index BIGINT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221008175017_0JOFCV3_WE_B0 part 2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= 5.290800094604492) THEN CASE WHEN ("ADS"."Feature_0" <= 3.074299931526184) THEN CASE WHEN ("ADS"."Feature_2" <= 4.345592260360718) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_5" <= 2.411695718765259) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 6.825049877166748) THEN CASE WHEN ("ADS"."Feature_5" <= 2.6520029306411743) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 7.815150022506714) THEN 13 ELSE 14 END END END AS node_id_2 
FROM california_housing AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.5873715552377592 AS "E" UNION ALL SELECT 4 AS nid, 1.145084608203681 AS "E" UNION ALL SELECT 6 AS nid, 2.822740404814006 AS "E" UNION ALL SELECT 7 AS nid, 1.8927298185151173 AS "E" UNION ALL SELECT 10 AS nid, 3.617205100154086 AS "E" UNION ALL SELECT 11 AS nid, 2.693123127062709 AS "E" UNION ALL SELECT 13 AS nid, 3.8185207760532074 AS "E" UNION ALL SELECT 14 AS nid, 4.604814957264988 AS "E") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."E" AS "E" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"ADB_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."E" AS "Estimator", 0.13800139567704103 AS "Weight", 0 AS est_index 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= 4.398550033569336) THEN CASE WHEN ("ADS"."Feature_5" <= 2.139555811882019) THEN CASE WHEN ("ADS"."Feature_6" <= 37.98500061035156) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= 2.5985000133514404) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 6.29734992980957) THEN CASE WHEN ("ADS"."Feature_5" <= 2.518076539039612) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 7.706500053405762) THEN 13 ELSE 14 END END END AS node_id_2 
FROM california_housing AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 2.898023235474006 AS "E" UNION ALL SELECT 4 AS nid, 1.3925648854961847 AS "E" UNION ALL SELECT 6 AS nid, 1.2246912767186662 AS "E" UNION ALL SELECT 7 AS nid, 1.8211269260766334 AS "E" UNION ALL SELECT 10 AS nid, 3.488661481132084 AS "E" UNION ALL SELECT 11 AS nid, 2.48939641679161 AS "E" UNION ALL SELECT 13 AS nid, 3.6458017620137397 AS "E" UNION ALL SELECT 14 AS nid, 4.3813836753445905 AS "E") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."E" AS "E" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"ADB_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."E" AS "Estimator", 0.1167684955971829 AS "Weight", 1 AS est_index 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= 3.965250015258789) THEN CASE WHEN ("ADS"."Feature_5" <= 2.2554951906204224) THEN CASE WHEN ("ADS"."Feature_6" <= 37.91499900817871) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 3.226977229118347) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 5.720249891281128) THEN CASE WHEN ("ADS"."Feature_5" <= 2.2997796535491943) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_5" <= 3.024705171585083) THEN 13 ELSE 14 END END END AS node_id_2 
FROM california_housing AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 2.7902067647058857 AS "E" UNION ALL SELECT 4 AS nid, 1.3332288855421681 AS "E" UNION ALL SELECT 6 AS nid, 2.671981695652173 AS "E" UNION ALL SELECT 7 AS nid, 1.5541835018587316 AS "E" UNION ALL SELECT 10 AS nid, 3.6580454288597593 AS "E" UNION ALL SELECT 11 AS nid, 2.4598085686600197 AS "E" UNION ALL SELECT 13 AS nid, 3.9312822271856933 AS "E" UNION ALL SELECT 14 AS nid, 3.0495722370173106 AS "E") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."E" AS "E" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"ADB_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."E" AS "Estimator", 0.08641474955346254 AS "Weight", 2 AS est_index 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= 3.6626999378204346) THEN CASE WHEN ("ADS"."Feature_5" <= 2.4502079486846924) THEN CASE WHEN ("ADS"."Feature_6" <= 37.91499900817871) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_4" <= 142.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 6.127150058746338) THEN CASE WHEN ("ADS"."Feature_5" <= 2.7721890211105347) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 160.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM california_housing AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 2.7905963725490195 AS "E" UNION ALL SELECT 4 AS nid, 1.251824424131627 AS "E" UNION ALL SELECT 6 AS nid, 3.837949999999993 AS "E" UNION ALL SELECT 7 AS nid, 1.5336556606085325 AS "E" UNION ALL SELECT 10 AS nid, 3.215682370654234 AS "E" UNION ALL SELECT 11 AS nid, 2.247949735666417 AS "E" UNION ALL SELECT 13 AS nid, 1.8724963478260868 AS "E" UNION ALL SELECT 14 AS nid, 3.9214532370637736 AS "E") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."E" AS "E" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"ADB_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."E" AS "Estimator", 0.07362832681612554 AS "Weight", 3 AS est_index 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= 3.5647999048233032) THEN CASE WHEN ("ADS"."Feature_1" <= 47.5) THEN CASE WHEN ("ADS"."Feature_6" <= 34.6299991607666) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_6" <= 37.91499900817871) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_6" <= 37.96500015258789) THEN CASE WHEN ("ADS"."Feature_1" <= 20.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 6.062399864196777) THEN 13 ELSE 14 END END END AS node_id_2 
FROM california_housing AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 2.3569039707947215 AS "E" UNION ALL SELECT 4 AS nid, 1.4089594735120992 AS "E" UNION ALL SELECT 6 AS nid, 3.452820203515292 AS "E" UNION ALL SELECT 7 AS nid, 1.1005981308411212 AS "E" UNION ALL SELECT 10 AS nid, 2.5912516862586092 AS "E" UNION ALL SELECT 11 AS nid, 3.4852153299202833 AS "E" UNION ALL SELECT 13 AS nid, 1.6418990610328634 AS "E" UNION ALL SELECT 14 AS nid, 2.745402321428571 AS "E") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."E" AS "E" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"ADB_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."E" AS "Estimator", 0.06568710962957122 AS "Weight", 4 AS est_index 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= 5.0211501121521) THEN CASE WHEN ("ADS"."Feature_5" <= 2.8348827362060547) THEN CASE WHEN ("ADS"."Feature_6" <= 37.92499923706055) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.5179500132799149) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 18.5) THEN CASE WHEN ("ADS"."Feature_0" <= 7.427600145339966) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 125.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM california_housing AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 2.9995685609397644 AS "E" UNION ALL SELECT 4 AS nid, 1.582825581589962 AS "E" UNION ALL SELECT 6 AS nid, 4.917692682926822 AS "E" UNION ALL SELECT 7 AS nid, 1.7962108997698198 AS "E" UNION ALL SELECT 10 AS nid, 2.6530032717391294 AS "E" UNION ALL SELECT 11 AS nid, 3.906299461538453 AS "E" UNION ALL SELECT 13 AS nid, 1.9356156880733952 AS "E" UNION ALL SELECT 14 AS nid, 3.827464268137408 AS "E") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."E" AS "E" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"ADB_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."E" AS "Estimator", 0.05134717729467336 AS "Weight", 5 AS est_index 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= -117.15500259399414) THEN CASE WHEN ("ADS"."Feature_6" <= 37.92499923706055) THEN CASE WHEN ("ADS"."Feature_5" <= 3.096147656440735) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 137.2212142944336) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.7957983016967773) THEN CASE WHEN ("ADS"."Feature_2" <= 3.014285683631897) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 3.740299940109253) THEN 13 ELSE 14 END END END AS node_id_2 
FROM california_housing AS "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 3.259919493645084 AS "E" UNION ALL SELECT 4 AS nid, 2.2878662944312658 AS "E" UNION ALL SELECT 6 AS nid, 1.4529846285408858 AS "E" UNION ALL SELECT 7 AS nid, 5.000009999999995 AS "E" UNION ALL SELECT 10 AS nid, 1.1877142857142857 AS "E" UNION ALL SELECT 11 AS nid, 5.000010000000002 AS "E" UNION ALL SELECT 13 AS nid, 0.9738708978675645 AS "E" UNION ALL SELECT 14 AS nid, 1.7064172350230438 AS "E") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."E" AS "E" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"ADB_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."E" AS "Estimator", 0.04897890090370844 AS "Weight", 6 AS est_index 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= 3.6951500177383423) THEN CASE WHEN ("ADS"."Feature_2" <= 3.280663251876831) THEN CASE WHEN ("ADS"."Feature_6" <= 33.9950008392334) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 47.5) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 6.543400049209595) THEN CASE WHEN ("ADS"."Feature_5" <= 2.446188807487488) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 56.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM california_housing AS "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.357968503937009 AS "E" UNION ALL SELECT 4 AS nid, 4.0493171779141335 AS "E" UNION ALL SELECT 6 AS nid, 1.8885059459896345 AS "E" UNION ALL SELECT 7 AS nid, 3.2030054893617357 AS "E" UNION ALL SELECT 10 AS nid, 3.6053051344318896 AS "E" UNION ALL SELECT 11 AS nid, 2.7714789788648644 AS "E" UNION ALL SELECT 13 AS nid, 1.9931443956043986 AS "E" UNION ALL SELECT 14 AS nid, 4.244010931871576 AS "E") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."E" AS "E" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"ADB_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."E" AS "Estimator", 0.05621091755300975 AS "Weight", 7 AS est_index 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= -117.16500091552734) THEN CASE WHEN ("ADS"."Feature_6" <= 34.47500038146973) THEN CASE WHEN ("ADS"."Feature_7" <= -118.30500030517578) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_7" <= -121.71500015258789) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= -116.24499893188477) THEN CASE WHEN ("ADS"."Feature_0" <= 3.0533000230789185) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 5.386149883270264) THEN 13 ELSE 14 END END END AS node_id_2 
FROM california_housing AS "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 4.182448560287891 AS "E" UNION ALL SELECT 4 AS nid, 2.8129047054930196 AS "E" UNION ALL SELECT 6 AS nid, 3.4318973649473885 AS "E" UNION ALL SELECT 7 AS nid, 1.4008214086595494 AS "E" UNION ALL SELECT 10 AS nid, 1.117959672544082 AS "E" UNION ALL SELECT 11 AS nid, 1.9042694346978541 AS "E" UNION ALL SELECT 13 AS nid, 0.6133807692307696 AS "E" UNION ALL SELECT 14 AS nid, 1.3975 AS "E") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."E" AS "E" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"ADB_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."E" AS "Estimator", 0.07337432162331445 AS "Weight", 8 AS est_index 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= 3.71560001373291) THEN CASE WHEN ("ADS"."Feature_5" <= 2.2484461069107056) THEN CASE WHEN ("ADS"."Feature_7" <= -117.29500198364258) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 3.214371681213379) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_6" <= 37.98500061035156) THEN CASE WHEN ("ADS"."Feature_7" <= -117.24499893188477) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 5.523699998855591) THEN 13 ELSE 14 END END END AS node_id_2 
FROM california_housing AS "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 3.370451810199217 AS "E" UNION ALL SELECT 4 AS nid, 1.551768682926826 AS "E" UNION ALL SELECT 6 AS nid, 3.710824894146961 AS "E" UNION ALL SELECT 7 AS nid, 1.8294025418760305 AS "E" UNION ALL SELECT 10 AS nid, 3.5348145072597377 AS "E" UNION ALL SELECT 11 AS nid, 2.0403174010327065 AS "E" UNION ALL SELECT 13 AS nid, 1.6139156010230196 AS "E" UNION ALL SELECT 14 AS nid, 2.641137931034484 AS "E") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."E" AS "E" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"ADB_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."E" AS "Estimator", 0.03453993881894754 AS "Weight", 9 AS est_index 
FROM "DT_Output_9")
 INSERT INTO "TMP_20221008175017_0JOFCV3_WE_B0" ("KEY", "Estimator", "Weight", est_index) SELECT "T"."KEY", "T"."Estimator", "T"."Weight", "T".est_index 
FROM (SELECT "WE_B0"."KEY" AS "KEY", "WE_B0"."Estimator" AS "Estimator", "WE_B0"."Weight" AS "Weight", "WE_B0".est_index AS est_index 
FROM (SELECT "WE_esu_0"."KEY" AS "KEY", "WE_esu_0"."Estimator" AS "Estimator", "WE_esu_0"."Weight" AS "Weight", "WE_esu_0".est_index AS est_index 
FROM (SELECT "ADB_Model_0"."KEY" AS "KEY", "ADB_Model_0"."Estimator" AS "Estimator", "ADB_Model_0"."Weight" AS "Weight", "ADB_Model_0".est_index AS est_index 
FROM "ADB_Model_0" UNION ALL SELECT "ADB_Model_1"."KEY" AS "KEY", "ADB_Model_1"."Estimator" AS "Estimator", "ADB_Model_1"."Weight" AS "Weight", "ADB_Model_1".est_index AS est_index 
FROM "ADB_Model_1" UNION ALL SELECT "ADB_Model_2"."KEY" AS "KEY", "ADB_Model_2"."Estimator" AS "Estimator", "ADB_Model_2"."Weight" AS "Weight", "ADB_Model_2".est_index AS est_index 
FROM "ADB_Model_2" UNION ALL SELECT "ADB_Model_3"."KEY" AS "KEY", "ADB_Model_3"."Estimator" AS "Estimator", "ADB_Model_3"."Weight" AS "Weight", "ADB_Model_3".est_index AS est_index 
FROM "ADB_Model_3" UNION ALL SELECT "ADB_Model_4"."KEY" AS "KEY", "ADB_Model_4"."Estimator" AS "Estimator", "ADB_Model_4"."Weight" AS "Weight", "ADB_Model_4".est_index AS est_index 
FROM "ADB_Model_4" UNION ALL SELECT "ADB_Model_5"."KEY" AS "KEY", "ADB_Model_5"."Estimator" AS "Estimator", "ADB_Model_5"."Weight" AS "Weight", "ADB_Model_5".est_index AS est_index 
FROM "ADB_Model_5" UNION ALL SELECT "ADB_Model_6"."KEY" AS "KEY", "ADB_Model_6"."Estimator" AS "Estimator", "ADB_Model_6"."Weight" AS "Weight", "ADB_Model_6".est_index AS est_index 
FROM "ADB_Model_6" UNION ALL SELECT "ADB_Model_7"."KEY" AS "KEY", "ADB_Model_7"."Estimator" AS "Estimator", "ADB_Model_7"."Weight" AS "Weight", "ADB_Model_7".est_index AS est_index 
FROM "ADB_Model_7" UNION ALL SELECT "ADB_Model_8"."KEY" AS "KEY", "ADB_Model_8"."Estimator" AS "Estimator", "ADB_Model_8"."Weight" AS "Weight", "ADB_Model_8".est_index AS est_index 
FROM "ADB_Model_8" UNION ALL SELECT "ADB_Model_9"."KEY" AS "KEY", "ADB_Model_9"."Estimator" AS "Estimator", "ADB_Model_9"."Weight" AS "Weight", "ADB_Model_9".est_index AS est_index 
FROM "ADB_Model_9") AS "WE_esu_0") AS "WE_B0") AS "T"

-- Code For temporary table TMP_20221008175017_2TRH0K9_WE_B1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221008175017_2TRH0K9_WE_B1" (
	"KEY" BIGINT, 
	"Estimator" FLOAT, 
	"Weight" FLOAT, 
	est_index BIGINT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221008175017_2TRH0K9_WE_B1 part 2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 6.681199073791504) THEN CASE WHEN ("ADS"."Feature_5" <= 2.360021471977234) THEN CASE WHEN ("ADS"."Feature_1" <= 21.5) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_6" <= 37.92499923706055) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= -117.21500015258789) THEN CASE WHEN ("ADS"."Feature_6" <= 38.93499946594238) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.863351047039032) THEN 13 ELSE 14 END END END AS node_id_2 
FROM california_housing AS "ADS"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 2.3161751815384837 AS "E" UNION ALL SELECT 4 AS nid, 3.6483497099310935 AS "E" UNION ALL SELECT 6 AS nid, 2.4250224581633892 AS "E" UNION ALL SELECT 7 AS nid, 1.1987926234906705 AS "E" UNION ALL SELECT 10 AS nid, 4.0723920802620155 AS "E" UNION ALL SELECT 11 AS nid, 0.9095339436619722 AS "E" UNION ALL SELECT 13 AS nid, 2.903460060240963 AS "E" UNION ALL SELECT 14 AS nid, 1.0008983050847444 AS "E") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."E" AS "E" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"ADB_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."E" AS "Estimator", 0.04579118417305001 AS "Weight", 10 AS est_index 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= 4.197950124740601) THEN CASE WHEN ("ADS"."Feature_2" <= 3.279440760612488) THEN CASE WHEN ("ADS"."Feature_7" <= -118.27499771118164) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= 2.3844999074935913) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 56.5) THEN CASE WHEN ("ADS"."Feature_4" <= 26.5) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 18.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM california_housing AS "ADS"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 3.9026185088458556 AS "E" UNION ALL SELECT 4 AS nid, 2.3716539915966366 AS "E" UNION ALL SELECT 6 AS nid, 1.8044166825450858 AS "E" UNION ALL SELECT 7 AS nid, 2.813035429082187 AS "E" UNION ALL SELECT 10 AS nid, 4.769239230769231 AS "E" UNION ALL SELECT 11 AS nid, 0.9913507853403153 AS "E" UNION ALL SELECT 13 AS nid, 2.91482929453263 AS "E" UNION ALL SELECT 14 AS nid, 3.8589629510053065 AS "E") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."E" AS "E" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"ADB_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."E" AS "Estimator", 0.030787958225331393 AS "Weight", 11 AS est_index 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= 5.588850021362305) THEN CASE WHEN ("ADS"."Feature_6" <= 38.91499900817871) THEN CASE WHEN ("ADS"."Feature_7" <= -122.3650016784668) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= 2.921299934387207) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 109.0) THEN CASE WHEN ("ADS"."Feature_4" <= 21.0) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 26.5) THEN 13 ELSE 14 END END END AS node_id_2 
FROM california_housing AS "ADS"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 4.1328821276595855 AS "E" UNION ALL SELECT 4 AS nid, 2.6990668274876826 AS "E" UNION ALL SELECT 6 AS nid, 0.705545575221239 AS "E" UNION ALL SELECT 7 AS nid, 1.0681645569620257 AS "E" UNION ALL SELECT 10 AS nid, 4.785722142857145 AS "E" UNION ALL SELECT 11 AS nid, 1.6419291199999986 AS "E" UNION ALL SELECT 13 AS nid, 3.620331725888347 AS "E" UNION ALL SELECT 14 AS nid, 4.4897726927030215 AS "E") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."E" AS "E" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"ADB_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."E" AS "Estimator", 0.03053603018544617 AS "Weight", 12 AS est_index 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= 2.9594000577926636) THEN CASE WHEN ("ADS"."Feature_4" <= 40.0) THEN CASE WHEN ("ADS"."Feature_0" <= 1.6805499792099) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 3.3248127698898315) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_6" <= 37.96500015258789) THEN CASE WHEN ("ADS"."Feature_7" <= -122.33499908447266) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 5.527349948883057) THEN 13 ELSE 14 END END END AS node_id_2 
FROM california_housing AS "ADS"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.1950622916666667 AS "E" UNION ALL SELECT 4 AS nid, 4.73769923076923 AS "E" UNION ALL SELECT 6 AS nid, 3.3760624844290934 AS "E" UNION ALL SELECT 7 AS nid, 1.937234930462085 AS "E" UNION ALL SELECT 10 AS nid, 4.546337014778363 AS "E" UNION ALL SELECT 11 AS nid, 3.197581374984987 AS "E" UNION ALL SELECT 13 AS nid, 1.4899825479930187 AS "E" UNION ALL SELECT 14 AS nid, 2.732269104477612 AS "E") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."E" AS "E" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"ADB_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."E" AS "Estimator", 0.049946641211864484 AS "Weight", 13 AS est_index 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_6" <= 34.614999771118164) THEN CASE WHEN ("ADS"."Feature_7" <= -118.33499908447266) THEN CASE WHEN ("ADS"."Feature_5" <= 2.7495230436325073) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 6.890197515487671) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= -120.09499740600586) THEN CASE WHEN ("ADS"."Feature_6" <= 37.91499900817871) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 6.1153998374938965) THEN 13 ELSE 14 END END END AS node_id_2 
FROM california_housing AS "ADS"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 4.631388041586017 AS "E" UNION ALL SELECT 4 AS nid, 3.7324091172413985 AS "E" UNION ALL SELECT 6 AS nid, 2.525322288026465 AS "E" UNION ALL SELECT 7 AS nid, 4.0398686152325 AS "E" UNION ALL SELECT 10 AS nid, 3.4403067645569188 AS "E" UNION ALL SELECT 11 AS nid, 1.926419795918381 AS "E" UNION ALL SELECT 13 AS nid, 0.8198179591836718 AS "E" UNION ALL SELECT 14 AS nid, 2.0349125735294136 AS "E") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."E" AS "E" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"ADB_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."E" AS "Estimator", 0.06060984059182263 AS "Weight", 14 AS est_index 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= -117.15500259399414) THEN CASE WHEN ("ADS"."Feature_6" <= 33.7549991607666) THEN CASE WHEN ("ADS"."Feature_5" <= 1.5070831179618835) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 6.512556076049805) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.7957983016967773) THEN CASE WHEN ("ADS"."Feature_3" <= 0.7785714268684387) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 5.668750047683716) THEN 13 ELSE 14 END END END AS node_id_2 
FROM california_housing AS "ADS"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.4405998026315803 AS "E" UNION ALL SELECT 4 AS nid, 4.242974592098462 AS "E" UNION ALL SELECT 6 AS nid, 2.6979315323740725 AS "E" UNION ALL SELECT 7 AS nid, 3.7502212897677705 AS "E" UNION ALL SELECT 10 AS nid, 1.1878 AS "E" UNION ALL SELECT 11 AS nid, 5.000010000000002 AS "E" UNION ALL SELECT 13 AS nid, 1.1231876206896527 AS "E" UNION ALL SELECT 14 AS nid, 3.2004804166666663 AS "E") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."E" AS "E" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"ADB_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."E" AS "Estimator", 0.03737701214544874 AS "Weight", 15 AS est_index 
FROM "DT_Output_15")
 INSERT INTO "TMP_20221008175017_2TRH0K9_WE_B1" ("KEY", "Estimator", "Weight", est_index) SELECT "T"."KEY", "T"."Estimator", "T"."Weight", "T".est_index 
FROM (SELECT "WE_B1"."KEY" AS "KEY", "WE_B1"."Estimator" AS "Estimator", "WE_B1"."Weight" AS "Weight", "WE_B1".est_index AS est_index 
FROM (SELECT "WE_esu_1"."KEY" AS "KEY", "WE_esu_1"."Estimator" AS "Estimator", "WE_esu_1"."Weight" AS "Weight", "WE_esu_1".est_index AS est_index 
FROM (SELECT "ADB_Model_10"."KEY" AS "KEY", "ADB_Model_10"."Estimator" AS "Estimator", "ADB_Model_10"."Weight" AS "Weight", "ADB_Model_10".est_index AS est_index 
FROM "ADB_Model_10" UNION ALL SELECT "ADB_Model_11"."KEY" AS "KEY", "ADB_Model_11"."Estimator" AS "Estimator", "ADB_Model_11"."Weight" AS "Weight", "ADB_Model_11".est_index AS est_index 
FROM "ADB_Model_11" UNION ALL SELECT "ADB_Model_12"."KEY" AS "KEY", "ADB_Model_12"."Estimator" AS "Estimator", "ADB_Model_12"."Weight" AS "Weight", "ADB_Model_12".est_index AS est_index 
FROM "ADB_Model_12" UNION ALL SELECT "ADB_Model_13"."KEY" AS "KEY", "ADB_Model_13"."Estimator" AS "Estimator", "ADB_Model_13"."Weight" AS "Weight", "ADB_Model_13".est_index AS est_index 
FROM "ADB_Model_13" UNION ALL SELECT "ADB_Model_14"."KEY" AS "KEY", "ADB_Model_14"."Estimator" AS "Estimator", "ADB_Model_14"."Weight" AS "Weight", "ADB_Model_14".est_index AS est_index 
FROM "ADB_Model_14" UNION ALL SELECT "ADB_Model_15"."KEY" AS "KEY", "ADB_Model_15"."Estimator" AS "Estimator", "ADB_Model_15"."Weight" AS "Weight", "ADB_Model_15".est_index AS est_index 
FROM "ADB_Model_15") AS "WE_esu_1") AS "WE_B1") AS "T"

-- Code For temporary table TMP_20221008175017_DGJ30GY_Quantiles part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221008175017_DGJ30GY_Quantiles" (
	"KEY" BIGINT, 
	"Quantile" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221008175017_DGJ30GY_Quantiles part 2. Populate

WITH "WE_Union" AS 
(SELECT "WE_EnsembleUnion"."KEY" AS "KEY", "WE_EnsembleUnion"."Estimator" AS "Estimator", "WE_EnsembleUnion"."Weight" AS "Weight", "WE_EnsembleUnion".est_index AS est_index 
FROM (SELECT "WE_B0"."KEY" AS "KEY", "WE_B0"."Estimator" AS "Estimator", "WE_B0"."Weight" AS "Weight", "WE_B0".est_index AS est_index 
FROM "TMP_20221008175017_0JOFCV3_WE_B0" AS "WE_B0" UNION ALL SELECT "WE_B1"."KEY" AS "KEY", "WE_B1"."Estimator" AS "Estimator", "WE_B1"."Weight" AS "Weight", "WE_B1".est_index AS est_index 
FROM "TMP_20221008175017_2TRH0K9_WE_B1" AS "WE_B1") AS "WE_EnsembleUnion"), 
"Cumulative_Frequencies" AS 
(SELECT "CW"."KEY" AS "KEY", "CW"."Estimator" AS "Estimator", "CW"."Weight" AS "Weight", "CW".est_index AS est_index, "CW".cum_weight AS cum_weight 
FROM (SELECT u1."KEY" AS "KEY", u1."Estimator" AS "Estimator", u1."Weight" AS "Weight", u1.est_index AS est_index, sum(u2."Weight") AS cum_weight 
FROM "WE_Union" AS u1, "WE_Union" AS u2 
WHERE u1."Estimator" >= u2."Estimator" AND u1."KEY" = u2."KEY" GROUP BY u1."KEY", u1.est_index, u1."Estimator", u1."Weight") AS "CW")
 INSERT INTO "TMP_20221008175017_DGJ30GY_Quantiles" ("KEY", "Quantile") SELECT "T"."KEY", "T"."Quantile" 
FROM (SELECT "Quantiles"."KEY" AS "KEY", "Quantiles"."Quantile" AS "Quantile" 
FROM (SELECT "CW2"."KEY" AS "KEY", "CW2"."Quantile" AS "Quantile" 
FROM (SELECT "Cumulative_Frequencies"."KEY" AS "KEY", min("Cumulative_Frequencies"."Estimator") AS "Quantile" 
FROM "Cumulative_Frequencies" 
WHERE "Cumulative_Frequencies".cum_weight >= 0.5 GROUP BY "Cumulative_Frequencies"."KEY") AS "CW2") AS "Quantiles") AS "T"

-- Model deployment code

SELECT "Quantiles"."KEY" AS "KEY", "Quantiles"."Quantile" AS "Estimator" 
FROM "TMP_20221008175017_DGJ30GY_Quantiles" AS "Quantiles"