-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : GradientBoostingClassifier
-- Dataset : iris
-- Database : pgsql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221008175343_2XU1SXU_GB_B0 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221008175343_2XU1SXU_GB_B0" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221008175343_2XU1SXU_GB_B0 part 2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE 2 END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, 2.162162162162162 AS "E" UNION ALL SELECT 2 AS nid, -0.9638554216867471 AS "E") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."E" AS "E" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"GB_Model_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, -1.0000000000000002 AS "E" UNION ALL SELECT 4 AS nid, 2.0000000000000004 AS "E" UNION ALL SELECT 5 AS nid, 1.1102230246251564e-16 AS "E" UNION ALL SELECT 7 AS nid, 0.2857142857142858 AS "E" UNION ALL SELECT 8 AS nid, -1.0000000000000002 AS "E") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."E" AS "E" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"GB_Model_0_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_1"."E" AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN 2 ELSE CASE WHEN ("ADS"."Feature_1" <= 3.100000023841858) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 8 ELSE 9 END ELSE 10 END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 2 AS nid, -1.038961038961039 AS "E" UNION ALL SELECT 4 AS nid, 1.86046511627907 AS "E" UNION ALL SELECT 5 AS nid, -1.0389610389610389 AS "E" UNION ALL SELECT 8 AS nid, -0.31410450015101166 AS "E" UNION ALL SELECT 9 AS nid, 1.8604651162790697 AS "E" UNION ALL SELECT 10 AS nid, 1.8604651162790697 AS "E") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."E" AS "E" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"GB_Model_0_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_2"."E" AS "Score_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN CASE WHEN ("ADS"."Feature_2" <= 4.75) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.699999988079071) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, 1.7545400895735397 AS "E" UNION ALL SELECT 4 AS nid, -0.922021822653666 AS "E" UNION ALL SELECT 5 AS nid, -0.9284290666293139 AS "E" UNION ALL SELECT 7 AS nid, -0.9076530226418232 AS "E" UNION ALL SELECT 8 AS nid, -0.9212540465482697 AS "E") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."E" AS "E" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"GB_Model_1_0" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, -0.9515849502520088 AS "E" UNION ALL SELECT 4 AS nid, 1.6540140092558717 AS "E" UNION ALL SELECT 5 AS nid, 0.006022823777880411 AS "E" UNION ALL SELECT 7 AS nid, 0.25870878895389404 AS "E" UNION ALL SELECT 8 AS nid, -0.9492315206158808 AS "E") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."E" AS "E" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"GB_Model_1_1" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_4"."E" AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 3.100000023841858) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN CASE WHEN ("ADS"."Feature_2" <= 4.950000047683716) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -0.9812853161752704 AS "E" UNION ALL SELECT 4 AS nid, -0.9800181336639502 AS "E" UNION ALL SELECT 6 AS nid, 1.6140382986103097 AS "E" UNION ALL SELECT 7 AS nid, -1.0177228507409544 AS "E" UNION ALL SELECT 10 AS nid, -1.0382610326907835 AS "E" UNION ALL SELECT 11 AS nid, 1.1570025432866826 AS "E" UNION ALL SELECT 12 AS nid, 1.5650415208172848 AS "E") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."E" AS "E" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"GB_Model_1_2" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_5"."E" AS "Score_2" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN CASE WHEN ("ADS"."Feature_2" <= 4.75) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.699999988079071) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, 1.4953456731558405 AS "E" UNION ALL SELECT 4 AS nid, -0.8863576630296756 AS "E" UNION ALL SELECT 5 AS nid, -0.8971675215066489 AS "E" UNION ALL SELECT 7 AS nid, -0.870450481400547 AS "E" UNION ALL SELECT 8 AS nid, -0.8851955193513042 AS "E") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."E" AS "E" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"GB_Model_2_0" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, -0.9107730267835689 AS "E" UNION ALL SELECT 4 AS nid, 1.4274189096822436 AS "E" UNION ALL SELECT 5 AS nid, 0.012678841178856216 AS "E" UNION ALL SELECT 7 AS nid, 0.23650797592401873 AS "E" UNION ALL SELECT 8 AS nid, -0.9072612290685099 AS "E") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."E" AS "E" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"GB_Model_2_1" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_7"."E" AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 3.100000023841858) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 13 ELSE 14 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -0.933904498423049 AS "E" UNION ALL SELECT 4 AS nid, -0.9320127231133675 AS "E" UNION ALL SELECT 6 AS nid, 1.440571427975833 AS "E" UNION ALL SELECT 7 AS nid, -0.9970163324649591 AS "E" UNION ALL SELECT 10 AS nid, -0.3331796385364454 AS "E" UNION ALL SELECT 11 AS nid, 1.5027642576088929 AS "E" UNION ALL SELECT 13 AS nid, 1.3660242145971633 AS "E" UNION ALL SELECT 14 AS nid, 1.3662661348396024 AS "E") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."E" AS "E" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"GB_Model_2_2" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_8"."E" AS "Score_2" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN CASE WHEN ("ADS"."Feature_2" <= 4.75) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.699999988079071) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, 1.3173527122604598 AS "E" UNION ALL SELECT 4 AS nid, -0.8559270018823996 AS "E" UNION ALL SELECT 5 AS nid, -0.8722375110446696 AS "E" UNION ALL SELECT 7 AS nid, -0.8358661603008154 AS "E" UNION ALL SELECT 8 AS nid, -0.854596604182321 AS "E") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."E" AS "E" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"GB_Model_3_0" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_9")
 INSERT INTO "TMP_20221008175343_2XU1SXU_GB_B0" ("KEY", "Score_0", "Score_1", "Score_2") SELECT "T"."KEY", "T"."Score_0", "T"."Score_1", "T"."Score_2" 
FROM (SELECT "GB_B0"."KEY" AS "KEY", "GB_B0"."Score_0" AS "Score_0", "GB_B0"."Score_1" AS "Score_1", "GB_B0"."Score_2" AS "Score_2" 
FROM (SELECT "GB_esu_0"."KEY" AS "KEY", "GB_esu_0"."Score_0" AS "Score_0", "GB_esu_0"."Score_1" AS "Score_1", "GB_esu_0"."Score_2" AS "Score_2" 
FROM (SELECT "GB_Model_0_0"."KEY" AS "KEY", "GB_Model_0_0"."Score_0" AS "Score_0", "GB_Model_0_0"."Score_1" AS "Score_1", "GB_Model_0_0"."Score_2" AS "Score_2" 
FROM "GB_Model_0_0" UNION ALL SELECT "GB_Model_0_1"."KEY" AS "KEY", "GB_Model_0_1"."Score_0" AS "Score_0", "GB_Model_0_1"."Score_1" AS "Score_1", "GB_Model_0_1"."Score_2" AS "Score_2" 
FROM "GB_Model_0_1" UNION ALL SELECT "GB_Model_0_2"."KEY" AS "KEY", "GB_Model_0_2"."Score_0" AS "Score_0", "GB_Model_0_2"."Score_1" AS "Score_1", "GB_Model_0_2"."Score_2" AS "Score_2" 
FROM "GB_Model_0_2" UNION ALL SELECT "GB_Model_1_0"."KEY" AS "KEY", "GB_Model_1_0"."Score_0" AS "Score_0", "GB_Model_1_0"."Score_1" AS "Score_1", "GB_Model_1_0"."Score_2" AS "Score_2" 
FROM "GB_Model_1_0" UNION ALL SELECT "GB_Model_1_1"."KEY" AS "KEY", "GB_Model_1_1"."Score_0" AS "Score_0", "GB_Model_1_1"."Score_1" AS "Score_1", "GB_Model_1_1"."Score_2" AS "Score_2" 
FROM "GB_Model_1_1" UNION ALL SELECT "GB_Model_1_2"."KEY" AS "KEY", "GB_Model_1_2"."Score_0" AS "Score_0", "GB_Model_1_2"."Score_1" AS "Score_1", "GB_Model_1_2"."Score_2" AS "Score_2" 
FROM "GB_Model_1_2" UNION ALL SELECT "GB_Model_2_0"."KEY" AS "KEY", "GB_Model_2_0"."Score_0" AS "Score_0", "GB_Model_2_0"."Score_1" AS "Score_1", "GB_Model_2_0"."Score_2" AS "Score_2" 
FROM "GB_Model_2_0" UNION ALL SELECT "GB_Model_2_1"."KEY" AS "KEY", "GB_Model_2_1"."Score_0" AS "Score_0", "GB_Model_2_1"."Score_1" AS "Score_1", "GB_Model_2_1"."Score_2" AS "Score_2" 
FROM "GB_Model_2_1" UNION ALL SELECT "GB_Model_2_2"."KEY" AS "KEY", "GB_Model_2_2"."Score_0" AS "Score_0", "GB_Model_2_2"."Score_1" AS "Score_1", "GB_Model_2_2"."Score_2" AS "Score_2" 
FROM "GB_Model_2_2" UNION ALL SELECT "GB_Model_3_0"."KEY" AS "KEY", "GB_Model_3_0"."Score_0" AS "Score_0", "GB_Model_3_0"."Score_1" AS "Score_1", "GB_Model_3_0"."Score_2" AS "Score_2" 
FROM "GB_Model_3_0") AS "GB_esu_0") AS "GB_B0") AS "T"

-- Code For temporary table TMP_20221008175343_32PJQD2_GB_B1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221008175343_32PJQD2_GB_B1" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221008175343_32PJQD2_GB_B1 part 2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, -0.8762394351701676 AS "E" UNION ALL SELECT 4 AS nid, 1.2688005413647014 AS "E" UNION ALL SELECT 5 AS nid, 0.01952742665456747 AS "E" UNION ALL SELECT 7 AS nid, 0.2177596524391935 AS "E" UNION ALL SELECT 8 AS nid, -0.8722676781834796 AS "E") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."E" AS "E" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"GB_Model_3_1" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_10"."E" AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 3.100000023841858) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN CASE WHEN ("ADS"."Feature_2" <= 4.950000047683716) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 13 ELSE 14 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -0.8945683512814796 AS "E" UNION ALL SELECT 4 AS nid, -0.892430576623095 AS "E" UNION ALL SELECT 6 AS nid, 1.3124407576826842 AS "E" UNION ALL SELECT 7 AS nid, -0.9769877060958779 AS "E" UNION ALL SELECT 10 AS nid, -1.0066331436319824 AS "E" UNION ALL SELECT 11 AS nid, 0.9604567813721218 AS "E" UNION ALL SELECT 13 AS nid, 1.2240873187323797 AS "E" UNION ALL SELECT 14 AS nid, 1.2245889564525765 AS "E") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."E" AS "E" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"GB_Model_3_2" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_11"."E" AS "Score_2" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN CASE WHEN ("ADS"."Feature_2" <= 4.75) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.699999988079071) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, 1.1886956431316127 AS "E" UNION ALL SELECT 4 AS nid, -0.8299363557944894 AS "E" UNION ALL SELECT 5 AS nid, -0.8502236654652825 AS "E" UNION ALL SELECT 7 AS nid, -0.8121086865804282 AS "E" UNION ALL SELECT 8 AS nid, -0.828570282615768 AS "E") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."E" AS "E" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"GB_Model_4_0" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.950000047683716) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, -0.8469390053491115 AS "E" UNION ALL SELECT 4 AS nid, 1.1735596007815807 AS "E" UNION ALL SELECT 5 AS nid, -0.3524502765354757 AS "E" UNION ALL SELECT 7 AS nid, -0.1315152156243382 AS "E" UNION ALL SELECT 8 AS nid, -0.8555292605124244 AS "E") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."E" AS "E" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"GB_Model_4_1" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_13"."E" AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 3.100000023841858) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 13 ELSE 14 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -0.8616710629401289 AS "E" UNION ALL SELECT 4 AS nid, -0.859501699399161 AS "E" UNION ALL SELECT 6 AS nid, 1.2143742975935023 AS "E" UNION ALL SELECT 7 AS nid, -0.957768404836504 AS "E" UNION ALL SELECT 10 AS nid, -0.3417678498005165 AS "E" UNION ALL SELECT 11 AS nid, 1.294672766720802 AS "E" UNION ALL SELECT 13 AS nid, 1.1186684476349495 AS "E" UNION ALL SELECT 14 AS nid, 1.1194380589995352 AS "E") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."E" AS "E" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"GB_Model_4_2" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_14"."E" AS "Score_2" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN CASE WHEN ("ADS"."Feature_2" <= 4.75) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.699999988079071) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, 1.0922244446298004 AS "E" UNION ALL SELECT 4 AS nid, -0.8075193479914999 AS "E" UNION ALL SELECT 5 AS nid, -0.8305159558496427 AS "E" UNION ALL SELECT 7 AS nid, -0.7936360216194008 AS "E" UNION ALL SELECT 8 AS nid, -0.8064210025578818 AS "E") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."E" AS "E" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"GB_Model_5_0" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_15"), 
"DT_node_lookup_16" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.950000047683716) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_16" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, -0.8220160550017808 AS "E" UNION ALL SELECT 4 AS nid, 1.0830004665087696 AS "E" UNION ALL SELECT 5 AS nid, -0.31991997599213573 AS "E" UNION ALL SELECT 7 AS nid, -0.12650452011226374 AS "E" UNION ALL SELECT 8 AS nid, -0.8286665897029004 AS "E") AS "Values"), 
"DT_Output_16" AS 
(SELECT "DT_node_lookup_16"."KEY" AS "KEY", "DT_node_lookup_16".node_id_2 AS node_id_2, "DT_node_data_16".nid AS nid, "DT_node_data_16"."E" AS "E" 
FROM "DT_node_lookup_16" LEFT OUTER JOIN "DT_node_data_16" ON "DT_node_lookup_16".node_id_2 = "DT_node_data_16".nid), 
"GB_Model_5_1" AS 
(SELECT "DT_Output_16"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_16"."E" AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_16"), 
"DT_node_lookup_17" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 3.100000023841858) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN CASE WHEN ("ADS"."Feature_2" <= 4.950000047683716) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 13 ELSE 14 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_17" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -0.8339995017632273 AS "E" UNION ALL SELECT 4 AS nid, -0.8316438983268795 AS "E" UNION ALL SELECT 6 AS nid, 1.12624639708481 AS "E" UNION ALL SELECT 7 AS nid, -0.9459573152958899 AS "E" UNION ALL SELECT 10 AS nid, -0.9555308719046274 AS "E" UNION ALL SELECT 11 AS nid, 0.7970282123051207 AS "E" UNION ALL SELECT 13 AS nid, 1.0495065192294464 AS "E" UNION ALL SELECT 14 AS nid, 1.0387783163839452 AS "E") AS "Values"), 
"DT_Output_17" AS 
(SELECT "DT_node_lookup_17"."KEY" AS "KEY", "DT_node_lookup_17".node_id_2 AS node_id_2, "DT_node_data_17".nid AS nid, "DT_node_data_17"."E" AS "E" 
FROM "DT_node_lookup_17" LEFT OUTER JOIN "DT_node_data_17" ON "DT_node_lookup_17".node_id_2 = "DT_node_data_17".nid), 
"GB_Model_5_2" AS 
(SELECT "DT_Output_17"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_17"."E" AS "Score_2" 
FROM "DT_Output_17"), 
"DT_node_lookup_18" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN CASE WHEN ("ADS"."Feature_2" <= 4.75) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.699999988079071) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_18" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, 1.0178680370519833 AS "E" UNION ALL SELECT 4 AS nid, -0.788343031913403 AS "E" UNION ALL SELECT 5 AS nid, -0.8131774775818739 AS "E" UNION ALL SELECT 7 AS nid, -0.780497282226709 AS "E" UNION ALL SELECT 8 AS nid, -0.7874760892118167 AS "E") AS "Values"), 
"DT_Output_18" AS 
(SELECT "DT_node_lookup_18"."KEY" AS "KEY", "DT_node_lookup_18".node_id_2 AS node_id_2, "DT_node_data_18".nid AS nid, "DT_node_data_18"."E" AS "E" 
FROM "DT_node_lookup_18" LEFT OUTER JOIN "DT_node_data_18" ON "DT_node_lookup_18".node_id_2 = "DT_node_data_18".nid), 
"GB_Model_6_0" AS 
(SELECT "DT_Output_18"."KEY" AS "KEY", "DT_Output_18"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_18"), 
"DT_node_lookup_19" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.950000047683716) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_19" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, -0.8007638713074858 AS "E" UNION ALL SELECT 4 AS nid, 1.0114238743301527 AS "E" UNION ALL SELECT 5 AS nid, -0.28925685080842245 AS "E" UNION ALL SELECT 7 AS nid, -0.09124139690015652 AS "E" UNION ALL SELECT 8 AS nid, -0.8068665036697716 AS "E") AS "Values"), 
"DT_Output_19" AS 
(SELECT "DT_node_lookup_19"."KEY" AS "KEY", "DT_node_lookup_19".node_id_2 AS node_id_2, "DT_node_data_19".nid AS nid, "DT_node_data_19"."E" AS "E" 
FROM "DT_node_lookup_19" LEFT OUTER JOIN "DT_node_data_19" ON "DT_node_lookup_19".node_id_2 = "DT_node_data_19".nid), 
"GB_Model_6_1" AS 
(SELECT "DT_Output_19"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_19"."E" AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_19")
 INSERT INTO "TMP_20221008175343_32PJQD2_GB_B1" ("KEY", "Score_0", "Score_1", "Score_2") SELECT "T"."KEY", "T"."Score_0", "T"."Score_1", "T"."Score_2" 
FROM (SELECT "GB_B1"."KEY" AS "KEY", "GB_B1"."Score_0" AS "Score_0", "GB_B1"."Score_1" AS "Score_1", "GB_B1"."Score_2" AS "Score_2" 
FROM (SELECT "GB_esu_1"."KEY" AS "KEY", "GB_esu_1"."Score_0" AS "Score_0", "GB_esu_1"."Score_1" AS "Score_1", "GB_esu_1"."Score_2" AS "Score_2" 
FROM (SELECT "GB_Model_3_1"."KEY" AS "KEY", "GB_Model_3_1"."Score_0" AS "Score_0", "GB_Model_3_1"."Score_1" AS "Score_1", "GB_Model_3_1"."Score_2" AS "Score_2" 
FROM "GB_Model_3_1" UNION ALL SELECT "GB_Model_3_2"."KEY" AS "KEY", "GB_Model_3_2"."Score_0" AS "Score_0", "GB_Model_3_2"."Score_1" AS "Score_1", "GB_Model_3_2"."Score_2" AS "Score_2" 
FROM "GB_Model_3_2" UNION ALL SELECT "GB_Model_4_0"."KEY" AS "KEY", "GB_Model_4_0"."Score_0" AS "Score_0", "GB_Model_4_0"."Score_1" AS "Score_1", "GB_Model_4_0"."Score_2" AS "Score_2" 
FROM "GB_Model_4_0" UNION ALL SELECT "GB_Model_4_1"."KEY" AS "KEY", "GB_Model_4_1"."Score_0" AS "Score_0", "GB_Model_4_1"."Score_1" AS "Score_1", "GB_Model_4_1"."Score_2" AS "Score_2" 
FROM "GB_Model_4_1" UNION ALL SELECT "GB_Model_4_2"."KEY" AS "KEY", "GB_Model_4_2"."Score_0" AS "Score_0", "GB_Model_4_2"."Score_1" AS "Score_1", "GB_Model_4_2"."Score_2" AS "Score_2" 
FROM "GB_Model_4_2" UNION ALL SELECT "GB_Model_5_0"."KEY" AS "KEY", "GB_Model_5_0"."Score_0" AS "Score_0", "GB_Model_5_0"."Score_1" AS "Score_1", "GB_Model_5_0"."Score_2" AS "Score_2" 
FROM "GB_Model_5_0" UNION ALL SELECT "GB_Model_5_1"."KEY" AS "KEY", "GB_Model_5_1"."Score_0" AS "Score_0", "GB_Model_5_1"."Score_1" AS "Score_1", "GB_Model_5_1"."Score_2" AS "Score_2" 
FROM "GB_Model_5_1" UNION ALL SELECT "GB_Model_5_2"."KEY" AS "KEY", "GB_Model_5_2"."Score_0" AS "Score_0", "GB_Model_5_2"."Score_1" AS "Score_1", "GB_Model_5_2"."Score_2" AS "Score_2" 
FROM "GB_Model_5_2" UNION ALL SELECT "GB_Model_6_0"."KEY" AS "KEY", "GB_Model_6_0"."Score_0" AS "Score_0", "GB_Model_6_0"."Score_1" AS "Score_1", "GB_Model_6_0"."Score_2" AS "Score_2" 
FROM "GB_Model_6_0" UNION ALL SELECT "GB_Model_6_1"."KEY" AS "KEY", "GB_Model_6_1"."Score_0" AS "Score_0", "GB_Model_6_1"."Score_1" AS "Score_1", "GB_Model_6_1"."Score_2" AS "Score_2" 
FROM "GB_Model_6_1") AS "GB_esu_1") AS "GB_B1") AS "T"

-- Code For temporary table TMP_20221008175343_2UY295W_GB_B2 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221008175343_2UY295W_GB_B2" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221008175343_2UY295W_GB_B2 part 2. Populate

WITH "DT_node_lookup_20" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 3.100000023841858) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 13 ELSE 14 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_20" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -0.8106105447484607 AS "E" UNION ALL SELECT 4 AS nid, -0.8082180083042698 AS "E" UNION ALL SELECT 6 AS nid, 1.0570339832908746 AS "E" UNION ALL SELECT 7 AS nid, -0.9340406488754259 AS "E" UNION ALL SELECT 10 AS nid, -0.3269266161815813 AS "E" UNION ALL SELECT 11 AS nid, 1.0984240651216317 AS "E" UNION ALL SELECT 13 AS nid, 0.9941586614334577 AS "E" UNION ALL SELECT 14 AS nid, 0.9757238379224531 AS "E") AS "Values"), 
"DT_Output_20" AS 
(SELECT "DT_node_lookup_20"."KEY" AS "KEY", "DT_node_lookup_20".node_id_2 AS node_id_2, "DT_node_data_20".nid AS nid, "DT_node_data_20"."E" AS "E" 
FROM "DT_node_lookup_20" LEFT OUTER JOIN "DT_node_data_20" ON "DT_node_lookup_20".node_id_2 = "DT_node_data_20".nid), 
"GB_Model_6_2" AS 
(SELECT "DT_Output_20"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_20"."E" AS "Score_2" 
FROM "DT_Output_20"), 
"DT_node_lookup_21" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN CASE WHEN ("ADS"."Feature_2" <= 4.75) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.699999988079071) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_21" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, 0.9593203465517033 AS "E" UNION ALL SELECT 4 AS nid, -0.7719225307350365 AS "E" UNION ALL SELECT 5 AS nid, -0.7994123522453356 AS "E" UNION ALL SELECT 7 AS nid, -0.7659854987485536 AS "E" UNION ALL SELECT 8 AS nid, -0.7712413884003019 AS "E") AS "Values"), 
"DT_Output_21" AS 
(SELECT "DT_node_lookup_21"."KEY" AS "KEY", "DT_node_lookup_21".node_id_2 AS node_id_2, "DT_node_data_21".nid AS nid, "DT_node_data_21"."E" AS "E" 
FROM "DT_node_lookup_21" LEFT OUTER JOIN "DT_node_data_21" ON "DT_node_lookup_21".node_id_2 = "DT_node_data_21".nid), 
"GB_Model_7_0" AS 
(SELECT "DT_Output_21"."KEY" AS "KEY", "DT_Output_21"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_21"), 
"DT_node_lookup_22" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.950000047683716) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_22" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, -0.7825976234018249 AS "E" UNION ALL SELECT 4 AS nid, 0.9559186730656863 AS "E" UNION ALL SELECT 5 AS nid, -0.2603965241040151 AS "E" UNION ALL SELECT 7 AS nid, -0.9218890635623398 AS "E" UNION ALL SELECT 8 AS nid, -0.6466873235141463 AS "E") AS "Values"), 
"DT_Output_22" AS 
(SELECT "DT_node_lookup_22"."KEY" AS "KEY", "DT_node_lookup_22".node_id_2 AS node_id_2, "DT_node_data_22".nid AS nid, "DT_node_data_22"."E" AS "E" 
FROM "DT_node_lookup_22" LEFT OUTER JOIN "DT_node_data_22" ON "DT_node_lookup_22".node_id_2 = "DT_node_data_22".nid), 
"GB_Model_7_1" AS 
(SELECT "DT_Output_22"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_22"."E" AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_22"), 
"DT_node_lookup_23" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 3.100000023841858) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN CASE WHEN ("ADS"."Feature_0" <= 6.200000047683716) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 13 ELSE 14 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_23" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -0.7907583724488355 AS "E" UNION ALL SELECT 4 AS nid, -0.7884329369620098 AS "E" UNION ALL SELECT 6 AS nid, 1.0016195724755474 AS "E" UNION ALL SELECT 7 AS nid, -0.9221190613977683 AS "E" UNION ALL SELECT 10 AS nid, 1.2692484601898448 AS "E" UNION ALL SELECT 11 AS nid, -0.1599837286764977 AS "E" UNION ALL SELECT 13 AS nid, 0.9493668090579064 AS "E" UNION ALL SELECT 14 AS nid, 0.9255058288317658 AS "E") AS "Values"), 
"DT_Output_23" AS 
(SELECT "DT_node_lookup_23"."KEY" AS "KEY", "DT_node_lookup_23".node_id_2 AS node_id_2, "DT_node_data_23".nid AS nid, "DT_node_data_23"."E" AS "E" 
FROM "DT_node_lookup_23" LEFT OUTER JOIN "DT_node_data_23" ON "DT_node_lookup_23".node_id_2 = "DT_node_data_23".nid), 
"GB_Model_7_2" AS 
(SELECT "DT_Output_23"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_23"."E" AS "Score_2" 
FROM "DT_Output_23"), 
"DT_node_lookup_24" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 1 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.8499999642372131) THEN CASE WHEN ("ADS"."Feature_2" <= 4.75) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_24" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, 0.9124323118142131 AS "E" UNION ALL SELECT 4 AS nid, -0.7578256757449641 AS "E" UNION ALL SELECT 5 AS nid, -0.7789380428883199 AS "E" UNION ALL SELECT 7 AS nid, -0.7526294348831938 AS "E" UNION ALL SELECT 8 AS nid, -0.7571146881034279 AS "E") AS "Values"), 
"DT_Output_24" AS 
(SELECT "DT_node_lookup_24"."KEY" AS "KEY", "DT_node_lookup_24".node_id_2 AS node_id_2, "DT_node_data_24".nid AS nid, "DT_node_data_24"."E" AS "E" 
FROM "DT_node_lookup_24" LEFT OUTER JOIN "DT_node_data_24" ON "DT_node_lookup_24".node_id_2 = "DT_node_data_24".nid), 
"GB_Model_8_0" AS 
(SELECT "DT_Output_24"."KEY" AS "KEY", "DT_Output_24"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_24"), 
"DT_node_lookup_25" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.950000047683716) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_25" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, -0.7670328268373787 AS "E" UNION ALL SELECT 4 AS nid, 0.9115591141982983 AS "E" UNION ALL SELECT 5 AS nid, -0.23330741518713513 AS "E" UNION ALL SELECT 7 AS nid, -0.016557512926188137 AS "E" UNION ALL SELECT 8 AS nid, -0.7733559455068979 AS "E") AS "Values"), 
"DT_Output_25" AS 
(SELECT "DT_node_lookup_25"."KEY" AS "KEY", "DT_node_lookup_25".node_id_2 AS node_id_2, "DT_node_data_25".nid AS nid, "DT_node_data_25"."E" AS "E" 
FROM "DT_node_lookup_25" LEFT OUTER JOIN "DT_node_data_25" ON "DT_node_lookup_25".node_id_2 = "DT_node_data_25".nid), 
"GB_Model_8_1" AS 
(SELECT "DT_Output_25"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_25"."E" AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_25"), 
"DT_node_lookup_26" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 3.100000023841858) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 13 ELSE 14 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_26" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -0.7738461410727853 AS "E" UNION ALL SELECT 4 AS nid, -0.7716368379855784 AS "E" UNION ALL SELECT 6 AS nid, 0.9565407310383786 AS "E" UNION ALL SELECT 7 AS nid, -0.9102888161767567 AS "E" UNION ALL SELECT 10 AS nid, 0.5154856854071875 AS "E" UNION ALL SELECT 11 AS nid, -1.2328242502213331 AS "E" UNION ALL SELECT 13 AS nid, 0.9091615830595676 AS "E" UNION ALL SELECT 14 AS nid, 0.8865216647857862 AS "E") AS "Values"), 
"DT_Output_26" AS 
(SELECT "DT_node_lookup_26"."KEY" AS "KEY", "DT_node_lookup_26".node_id_2 AS node_id_2, "DT_node_data_26".nid AS nid, "DT_node_data_26"."E" AS "E" 
FROM "DT_node_lookup_26" LEFT OUTER JOIN "DT_node_data_26" ON "DT_node_lookup_26".node_id_2 = "DT_node_data_26".nid), 
"GB_Model_8_2" AS 
(SELECT "DT_Output_26"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_26"."E" AS "Score_2" 
FROM "DT_Output_26"), 
"DT_node_lookup_27" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.8499999642372131) THEN CASE WHEN ("ADS"."Feature_2" <= 4.75) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_27" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, 0.8743639435122758 AS "E" UNION ALL SELECT 4 AS nid, -0.7457005186349713 AS "E" UNION ALL SELECT 5 AS nid, -0.768884267101394 AS "E" UNION ALL SELECT 7 AS nid, -0.7406828971091737 AS "E" UNION ALL SELECT 8 AS nid, -0.7451581460995644 AS "E") AS "Values"), 
"DT_Output_27" AS 
(SELECT "DT_node_lookup_27"."KEY" AS "KEY", "DT_node_lookup_27".node_id_2 AS node_id_2, "DT_node_data_27".nid AS nid, "DT_node_data_27"."E" AS "E" 
FROM "DT_node_lookup_27" LEFT OUTER JOIN "DT_node_data_27" ON "DT_node_lookup_27".node_id_2 = "DT_node_data_27".nid), 
"GB_Model_9_0" AS 
(SELECT "DT_Output_27"."KEY" AS "KEY", "DT_Output_27"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_27"), 
"DT_node_lookup_28" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.950000047683716) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_28" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, -0.753667478631539 AS "E" UNION ALL SELECT 4 AS nid, 0.8767408517339252 AS "E" UNION ALL SELECT 5 AS nid, -0.20788932302491966 AS "E" UNION ALL SELECT 7 AS nid, -0.8785157744887149 AS "E" UNION ALL SELECT 8 AS nid, -0.5960887848313653 AS "E") AS "Values"), 
"DT_Output_28" AS 
(SELECT "DT_node_lookup_28"."KEY" AS "KEY", "DT_node_lookup_28".node_id_2 AS node_id_2, "DT_node_data_28".nid AS nid, "DT_node_data_28"."E" AS "E" 
FROM "DT_node_lookup_28" LEFT OUTER JOIN "DT_node_data_28" ON "DT_node_lookup_28".node_id_2 = "DT_node_data_28".nid), 
"GB_Model_9_1" AS 
(SELECT "DT_Output_28"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_28"."E" AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_28"), 
"DT_node_lookup_29" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.950000047683716) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 3.100000023841858) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 2.350000023841858) THEN 9 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 11 ELSE 12 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_29" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -0.7583799558673655 AS "E" UNION ALL SELECT 4 AS nid, -0.8787909848012753 AS "E" UNION ALL SELECT 6 AS nid, 0.8948904781596417 AS "E" UNION ALL SELECT 7 AS nid, -0.8985511808178168 AS "E" UNION ALL SELECT 9 AS nid, 1.2849434049405548 AS "E" UNION ALL SELECT 11 AS nid, 0.05906686902873888 AS "E" UNION ALL SELECT 12 AS nid, 0.8626153192765657 AS "E") AS "Values"), 
"DT_Output_29" AS 
(SELECT "DT_node_lookup_29"."KEY" AS "KEY", "DT_node_lookup_29".node_id_2 AS node_id_2, "DT_node_data_29".nid AS nid, "DT_node_data_29"."E" AS "E" 
FROM "DT_node_lookup_29" LEFT OUTER JOIN "DT_node_data_29" ON "DT_node_lookup_29".node_id_2 = "DT_node_data_29".nid), 
"GB_Model_9_2" AS 
(SELECT "DT_Output_29"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_29"."E" AS "Score_2" 
FROM "DT_Output_29")
 INSERT INTO "TMP_20221008175343_2UY295W_GB_B2" ("KEY", "Score_0", "Score_1", "Score_2") SELECT "T"."KEY", "T"."Score_0", "T"."Score_1", "T"."Score_2" 
FROM (SELECT "GB_B2"."KEY" AS "KEY", "GB_B2"."Score_0" AS "Score_0", "GB_B2"."Score_1" AS "Score_1", "GB_B2"."Score_2" AS "Score_2" 
FROM (SELECT "GB_esu_2"."KEY" AS "KEY", "GB_esu_2"."Score_0" AS "Score_0", "GB_esu_2"."Score_1" AS "Score_1", "GB_esu_2"."Score_2" AS "Score_2" 
FROM (SELECT "GB_Model_6_2"."KEY" AS "KEY", "GB_Model_6_2"."Score_0" AS "Score_0", "GB_Model_6_2"."Score_1" AS "Score_1", "GB_Model_6_2"."Score_2" AS "Score_2" 
FROM "GB_Model_6_2" UNION ALL SELECT "GB_Model_7_0"."KEY" AS "KEY", "GB_Model_7_0"."Score_0" AS "Score_0", "GB_Model_7_0"."Score_1" AS "Score_1", "GB_Model_7_0"."Score_2" AS "Score_2" 
FROM "GB_Model_7_0" UNION ALL SELECT "GB_Model_7_1"."KEY" AS "KEY", "GB_Model_7_1"."Score_0" AS "Score_0", "GB_Model_7_1"."Score_1" AS "Score_1", "GB_Model_7_1"."Score_2" AS "Score_2" 
FROM "GB_Model_7_1" UNION ALL SELECT "GB_Model_7_2"."KEY" AS "KEY", "GB_Model_7_2"."Score_0" AS "Score_0", "GB_Model_7_2"."Score_1" AS "Score_1", "GB_Model_7_2"."Score_2" AS "Score_2" 
FROM "GB_Model_7_2" UNION ALL SELECT "GB_Model_8_0"."KEY" AS "KEY", "GB_Model_8_0"."Score_0" AS "Score_0", "GB_Model_8_0"."Score_1" AS "Score_1", "GB_Model_8_0"."Score_2" AS "Score_2" 
FROM "GB_Model_8_0" UNION ALL SELECT "GB_Model_8_1"."KEY" AS "KEY", "GB_Model_8_1"."Score_0" AS "Score_0", "GB_Model_8_1"."Score_1" AS "Score_1", "GB_Model_8_1"."Score_2" AS "Score_2" 
FROM "GB_Model_8_1" UNION ALL SELECT "GB_Model_8_2"."KEY" AS "KEY", "GB_Model_8_2"."Score_0" AS "Score_0", "GB_Model_8_2"."Score_1" AS "Score_1", "GB_Model_8_2"."Score_2" AS "Score_2" 
FROM "GB_Model_8_2" UNION ALL SELECT "GB_Model_9_0"."KEY" AS "KEY", "GB_Model_9_0"."Score_0" AS "Score_0", "GB_Model_9_0"."Score_1" AS "Score_1", "GB_Model_9_0"."Score_2" AS "Score_2" 
FROM "GB_Model_9_0" UNION ALL SELECT "GB_Model_9_1"."KEY" AS "KEY", "GB_Model_9_1"."Score_0" AS "Score_0", "GB_Model_9_1"."Score_1" AS "Score_1", "GB_Model_9_1"."Score_2" AS "Score_2" 
FROM "GB_Model_9_1" UNION ALL SELECT "GB_Model_9_2"."KEY" AS "KEY", "GB_Model_9_2"."Score_0" AS "Score_0", "GB_Model_9_2"."Score_1" AS "Score_1", "GB_Model_9_2"."Score_2" AS "Score_2" 
FROM "GB_Model_9_2") AS "GB_esu_2") AS "GB_B2") AS "T"

-- Code For temporary table TMP_20221008175343_YO61QC2_GB_B3 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221008175343_YO61QC2_GB_B3" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221008175343_YO61QC2_GB_B3 part 2. Populate

WITH "DT_node_lookup_30" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN CASE WHEN ("ADS"."Feature_2" <= 4.75) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.699999988079071) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_30" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, 0.8431164403455775 AS "E" UNION ALL SELECT 4 AS nid, -0.7352494882131052 AS "E" UNION ALL SELECT 5 AS nid, -0.7697146914635246 AS "E" UNION ALL SELECT 7 AS nid, -0.7398268059457447 AS "E" UNION ALL SELECT 8 AS nid, -0.7346102453110489 AS "E") AS "Values"), 
"DT_Output_30" AS 
(SELECT "DT_node_lookup_30"."KEY" AS "KEY", "DT_node_lookup_30".node_id_2 AS node_id_2, "DT_node_data_30".nid AS nid, "DT_node_data_30"."E" AS "E" 
FROM "DT_node_lookup_30" LEFT OUTER JOIN "DT_node_data_30" ON "DT_node_lookup_30".node_id_2 = "DT_node_data_30".nid), 
"GB_Model_10_0" AS 
(SELECT "DT_Output_30"."KEY" AS "KEY", "DT_Output_30"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_30"), 
"DT_node_lookup_31" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 2 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.699999988079071) THEN CASE WHEN ("ADS"."Feature_0" <= 6.200000047683716) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.8499999642372131) THEN 11 ELSE 12 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_31" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 2 AS nid, -0.7421663181871212 AS "E" UNION ALL SELECT 4 AS nid, 0.7867918872235226 AS "E" UNION ALL SELECT 5 AS nid, -0.23905703143094129 AS "E" UNION ALL SELECT 8 AS nid, -0.785425427671864 AS "E" UNION ALL SELECT 9 AS nid, -0.8014325722990123 AS "E" UNION ALL SELECT 11 AS nid, -0.7415329417348151 AS "E" UNION ALL SELECT 12 AS nid, -0.7414979142884912 AS "E") AS "Values"), 
"DT_Output_31" AS 
(SELECT "DT_node_lookup_31"."KEY" AS "KEY", "DT_node_lookup_31".node_id_2 AS node_id_2, "DT_node_data_31".nid AS nid, "DT_node_data_31"."E" AS "E" 
FROM "DT_node_lookup_31" LEFT OUTER JOIN "DT_node_data_31" ON "DT_node_lookup_31".node_id_2 = "DT_node_data_31".nid), 
"GB_Model_10_1" AS 
(SELECT "DT_Output_31"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_31"."E" AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_31"), 
"DT_node_lookup_32" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 3.100000023841858) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 13 ELSE 14 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_32" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -0.747010696630771 AS "E" UNION ALL SELECT 4 AS nid, -0.7450656551377318 AS "E" UNION ALL SELECT 6 AS nid, 0.889020681396105 AS "E" UNION ALL SELECT 7 AS nid, -0.887039868566278 AS "E" UNION ALL SELECT 10 AS nid, 0.44816901676139004 AS "E" UNION ALL SELECT 11 AS nid, -1.2174538996035054 AS "E" UNION ALL SELECT 13 AS nid, 0.8578253506741158 AS "E" UNION ALL SELECT 14 AS nid, 0.8265311146462107 AS "E") AS "Values"), 
"DT_Output_32" AS 
(SELECT "DT_node_lookup_32"."KEY" AS "KEY", "DT_node_lookup_32".node_id_2 AS node_id_2, "DT_node_data_32".nid AS nid, "DT_node_data_32"."E" AS "E" 
FROM "DT_node_lookup_32" LEFT OUTER JOIN "DT_node_data_32" ON "DT_node_lookup_32".node_id_2 = "DT_node_data_32".nid), 
"GB_Model_10_2" AS 
(SELECT "DT_Output_32"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_32"."E" AS "Score_2" 
FROM "DT_Output_32"), 
"DT_node_lookup_33" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.8499999642372131) THEN CASE WHEN ("ADS"."Feature_2" <= 4.75) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_0" <= 5.6499998569488525) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_33" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, 0.8172112176116114 AS "E" UNION ALL SELECT 4 AS nid, -0.7265293625445737 AS "E" UNION ALL SELECT 5 AS nid, -0.7525633340751493 AS "E" UNION ALL SELECT 7 AS nid, -0.7220208196459258 AS "E" UNION ALL SELECT 8 AS nid, -0.7258179938988187 AS "E") AS "Values"), 
"DT_Output_33" AS 
(SELECT "DT_node_lookup_33"."KEY" AS "KEY", "DT_node_lookup_33".node_id_2 AS node_id_2, "DT_node_data_33".nid AS nid, "DT_node_data_33"."E" AS "E" 
FROM "DT_node_lookup_33" LEFT OUTER JOIN "DT_node_data_33" ON "DT_node_lookup_33".node_id_2 = "DT_node_data_33".nid), 
"GB_Model_11_0" AS 
(SELECT "DT_Output_33"."KEY" AS "KEY", "DT_Output_33"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_33"), 
"DT_node_lookup_34" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 2 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.699999988079071) THEN CASE WHEN ("ADS"."Feature_0" <= 6.200000047683716) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.8499999642372131) THEN 11 ELSE 12 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_34" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 2 AS nid, -0.7322524687059145 AS "E" UNION ALL SELECT 4 AS nid, 0.7533609686427037 AS "E" UNION ALL SELECT 5 AS nid, -0.2147306120984591 AS "E" UNION ALL SELECT 8 AS nid, -0.7729301729734604 AS "E" UNION ALL SELECT 9 AS nid, -0.7872595551263599 AS "E" UNION ALL SELECT 11 AS nid, -0.7316302989216766 AS "E" UNION ALL SELECT 12 AS nid, -0.731604132452641 AS "E") AS "Values"), 
"DT_Output_34" AS 
(SELECT "DT_node_lookup_34"."KEY" AS "KEY", "DT_node_lookup_34".node_id_2 AS node_id_2, "DT_node_data_34".nid AS nid, "DT_node_data_34"."E" AS "E" 
FROM "DT_node_lookup_34" LEFT OUTER JOIN "DT_node_data_34" ON "DT_node_lookup_34".node_id_2 = "DT_node_data_34".nid), 
"GB_Model_11_1" AS 
(SELECT "DT_Output_34"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_34"."E" AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_34"), 
"DT_node_lookup_35" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.950000047683716) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 3.100000023841858) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 2.350000023841858) THEN 9 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 11 ELSE 12 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_35" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -0.7356670903233925 AS "E" UNION ALL SELECT 4 AS nid, -0.8480420396655707 AS "E" UNION ALL SELECT 6 AS nid, 0.8460855107499597 AS "E" UNION ALL SELECT 7 AS nid, -0.8766575693293007 AS "E" UNION ALL SELECT 9 AS nid, 1.1606317419885623 AS "E" UNION ALL SELECT 11 AS nid, 0.005507615500170964 AS "E" UNION ALL SELECT 12 AS nid, 0.811168399669022 AS "E") AS "Values"), 
"DT_Output_35" AS 
(SELECT "DT_node_lookup_35"."KEY" AS "KEY", "DT_node_lookup_35".node_id_2 AS node_id_2, "DT_node_data_35".nid AS nid, "DT_node_data_35"."E" AS "E" 
FROM "DT_node_lookup_35" LEFT OUTER JOIN "DT_node_data_35" ON "DT_node_lookup_35".node_id_2 = "DT_node_data_35".nid), 
"GB_Model_11_2" AS 
(SELECT "DT_Output_35"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_35"."E" AS "Score_2" 
FROM "DT_Output_35"), 
"DT_node_lookup_36" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN CASE WHEN ("ADS"."Feature_2" <= 4.75) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.699999988079071) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_36" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, 0.7955796029394178 AS "E" UNION ALL SELECT 4 AS nid, -0.7190112843425804 AS "E" UNION ALL SELECT 5 AS nid, -0.7554040006874125 AS "E" UNION ALL SELECT 7 AS nid, -0.7248488216165397 AS "E" UNION ALL SELECT 8 AS nid, -0.7180109335237926 AS "E") AS "Values"), 
"DT_Output_36" AS 
(SELECT "DT_node_lookup_36"."KEY" AS "KEY", "DT_node_lookup_36".node_id_2 AS node_id_2, "DT_node_data_36".nid AS nid, "DT_node_data_36"."E" AS "E" 
FROM "DT_node_lookup_36" LEFT OUTER JOIN "DT_node_data_36" ON "DT_node_lookup_36".node_id_2 = "DT_node_data_36".nid), 
"GB_Model_12_0" AS 
(SELECT "DT_Output_36"."KEY" AS "KEY", "DT_Output_36"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_36"), 
"DT_node_lookup_37" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 2 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.699999988079071) THEN CASE WHEN ("ADS"."Feature_0" <= 6.200000047683716) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.8499999642372131) THEN 11 ELSE 12 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_37" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 2 AS nid, -0.723691038581047 AS "E" UNION ALL SELECT 4 AS nid, 0.7252637854918309 AS "E" UNION ALL SELECT 5 AS nid, -0.2012723307823265 AS "E" UNION ALL SELECT 8 AS nid, -0.7586569763206681 AS "E" UNION ALL SELECT 9 AS nid, -0.7711158956526661 AS "E" UNION ALL SELECT 11 AS nid, -0.7230695073921491 AS "E" UNION ALL SELECT 12 AS nid, -0.7230383026773691 AS "E") AS "Values"), 
"DT_Output_37" AS 
(SELECT "DT_node_lookup_37"."KEY" AS "KEY", "DT_node_lookup_37".node_id_2 AS node_id_2, "DT_node_data_37".nid AS nid, "DT_node_data_37"."E" AS "E" 
FROM "DT_node_lookup_37" LEFT OUTER JOIN "DT_node_data_37" ON "DT_node_lookup_37".node_id_2 = "DT_node_data_37".nid), 
"GB_Model_12_1" AS 
(SELECT "DT_Output_37"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_37"."E" AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_37"), 
"DT_node_lookup_38" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.950000047683716) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 3.100000023841858) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 2.350000023841858) THEN 9 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 11 ELSE 12 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_38" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -0.7267295149503925 AS "E" UNION ALL SELECT 4 AS nid, -0.8243708300946588 AS "E" UNION ALL SELECT 6 AS nid, 0.8286707701738473 AS "E" UNION ALL SELECT 7 AS nid, -0.866408369730438 AS "E" UNION ALL SELECT 9 AS nid, 1.122655464012336 AS "E" UNION ALL SELECT 11 AS nid, 8.614341205408366e-05 AS "E" UNION ALL SELECT 12 AS nid, 0.7905471282424646 AS "E") AS "Values"), 
"DT_Output_38" AS 
(SELECT "DT_node_lookup_38"."KEY" AS "KEY", "DT_node_lookup_38".node_id_2 AS node_id_2, "DT_node_data_38".nid AS nid, "DT_node_data_38"."E" AS "E" 
FROM "DT_node_lookup_38" LEFT OUTER JOIN "DT_node_data_38" ON "DT_node_lookup_38".node_id_2 = "DT_node_data_38".nid), 
"GB_Model_12_2" AS 
(SELECT "DT_Output_38"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_38"."E" AS "Score_2" 
FROM "DT_Output_38"), 
"DT_node_lookup_39" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN CASE WHEN ("ADS"."Feature_2" <= 4.75) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.699999988079071) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_39" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, 0.7773921617847518 AS "E" UNION ALL SELECT 4 AS nid, -0.7125073535085318 AS "E" UNION ALL SELECT 5 AS nid, -0.7495546778288082 AS "E" UNION ALL SELECT 7 AS nid, -0.7177266501403289 AS "E" UNION ALL SELECT 8 AS nid, -0.7113483344276677 AS "E") AS "Values"), 
"DT_Output_39" AS 
(SELECT "DT_node_lookup_39"."KEY" AS "KEY", "DT_node_lookup_39".node_id_2 AS node_id_2, "DT_node_data_39".nid AS nid, "DT_node_data_39"."E" AS "E" 
FROM "DT_node_lookup_39" LEFT OUTER JOIN "DT_node_data_39" ON "DT_node_lookup_39".node_id_2 = "DT_node_data_39".nid), 
"GB_Model_13_0" AS 
(SELECT "DT_Output_39"."KEY" AS "KEY", "DT_Output_39"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_39")
 INSERT INTO "TMP_20221008175343_YO61QC2_GB_B3" ("KEY", "Score_0", "Score_1", "Score_2") SELECT "T"."KEY", "T"."Score_0", "T"."Score_1", "T"."Score_2" 
FROM (SELECT "GB_B3"."KEY" AS "KEY", "GB_B3"."Score_0" AS "Score_0", "GB_B3"."Score_1" AS "Score_1", "GB_B3"."Score_2" AS "Score_2" 
FROM (SELECT "GB_esu_3"."KEY" AS "KEY", "GB_esu_3"."Score_0" AS "Score_0", "GB_esu_3"."Score_1" AS "Score_1", "GB_esu_3"."Score_2" AS "Score_2" 
FROM (SELECT "GB_Model_10_0"."KEY" AS "KEY", "GB_Model_10_0"."Score_0" AS "Score_0", "GB_Model_10_0"."Score_1" AS "Score_1", "GB_Model_10_0"."Score_2" AS "Score_2" 
FROM "GB_Model_10_0" UNION ALL SELECT "GB_Model_10_1"."KEY" AS "KEY", "GB_Model_10_1"."Score_0" AS "Score_0", "GB_Model_10_1"."Score_1" AS "Score_1", "GB_Model_10_1"."Score_2" AS "Score_2" 
FROM "GB_Model_10_1" UNION ALL SELECT "GB_Model_10_2"."KEY" AS "KEY", "GB_Model_10_2"."Score_0" AS "Score_0", "GB_Model_10_2"."Score_1" AS "Score_1", "GB_Model_10_2"."Score_2" AS "Score_2" 
FROM "GB_Model_10_2" UNION ALL SELECT "GB_Model_11_0"."KEY" AS "KEY", "GB_Model_11_0"."Score_0" AS "Score_0", "GB_Model_11_0"."Score_1" AS "Score_1", "GB_Model_11_0"."Score_2" AS "Score_2" 
FROM "GB_Model_11_0" UNION ALL SELECT "GB_Model_11_1"."KEY" AS "KEY", "GB_Model_11_1"."Score_0" AS "Score_0", "GB_Model_11_1"."Score_1" AS "Score_1", "GB_Model_11_1"."Score_2" AS "Score_2" 
FROM "GB_Model_11_1" UNION ALL SELECT "GB_Model_11_2"."KEY" AS "KEY", "GB_Model_11_2"."Score_0" AS "Score_0", "GB_Model_11_2"."Score_1" AS "Score_1", "GB_Model_11_2"."Score_2" AS "Score_2" 
FROM "GB_Model_11_2" UNION ALL SELECT "GB_Model_12_0"."KEY" AS "KEY", "GB_Model_12_0"."Score_0" AS "Score_0", "GB_Model_12_0"."Score_1" AS "Score_1", "GB_Model_12_0"."Score_2" AS "Score_2" 
FROM "GB_Model_12_0" UNION ALL SELECT "GB_Model_12_1"."KEY" AS "KEY", "GB_Model_12_1"."Score_0" AS "Score_0", "GB_Model_12_1"."Score_1" AS "Score_1", "GB_Model_12_1"."Score_2" AS "Score_2" 
FROM "GB_Model_12_1" UNION ALL SELECT "GB_Model_12_2"."KEY" AS "KEY", "GB_Model_12_2"."Score_0" AS "Score_0", "GB_Model_12_2"."Score_1" AS "Score_1", "GB_Model_12_2"."Score_2" AS "Score_2" 
FROM "GB_Model_12_2" UNION ALL SELECT "GB_Model_13_0"."KEY" AS "KEY", "GB_Model_13_0"."Score_0" AS "Score_0", "GB_Model_13_0"."Score_1" AS "Score_1", "GB_Model_13_0"."Score_2" AS "Score_2" 
FROM "GB_Model_13_0") AS "GB_esu_3") AS "GB_B3") AS "T"

-- Code For temporary table TMP_20221008175343_0TPFKRA_GB_B4 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221008175343_0TPFKRA_GB_B4" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221008175343_0TPFKRA_GB_B4 part 2. Populate

WITH "DT_node_lookup_40" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 2 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.699999988079071) THEN CASE WHEN ("ADS"."Feature_0" <= 6.200000047683716) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.8499999642372131) THEN 11 ELSE 12 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_40" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 2 AS nid, -0.7162866445573003 AS "E" UNION ALL SELECT 4 AS nid, 0.699719186119621 AS "E" UNION ALL SELECT 5 AS nid, -0.18939424617603504 AS "E" UNION ALL SELECT 8 AS nid, -0.7464002059837179 AS "E" UNION ALL SELECT 9 AS nid, -0.7572373132858845 AS "E" UNION ALL SELECT 11 AS nid, -0.7156763494782689 AS "E" UNION ALL SELECT 12 AS nid, -0.7156529674885084 AS "E") AS "Values"), 
"DT_Output_40" AS 
(SELECT "DT_node_lookup_40"."KEY" AS "KEY", "DT_node_lookup_40".node_id_2 AS node_id_2, "DT_node_data_40".nid AS nid, "DT_node_data_40"."E" AS "E" 
FROM "DT_node_lookup_40" LEFT OUTER JOIN "DT_node_data_40" ON "DT_node_lookup_40".node_id_2 = "DT_node_data_40".nid), 
"GB_Model_13_1" AS 
(SELECT "DT_Output_40"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_40"."E" AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_40"), 
"DT_node_lookup_41" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.950000047683716) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 3.100000023841858) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 2.350000023841858) THEN 9 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 11 ELSE 12 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_41" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -0.7190227107095175 AS "E" UNION ALL SELECT 4 AS nid, -0.8041179175567207 AS "E" UNION ALL SELECT 6 AS nid, 0.8138686703240579 AS "E" UNION ALL SELECT 7 AS nid, -0.856572022500698 AS "E" UNION ALL SELECT 9 AS nid, 1.0900276023187607 AS "E" UNION ALL SELECT 11 AS nid, -0.004170886091161639 AS "E" UNION ALL SELECT 12 AS nid, 0.7732055149184687 AS "E") AS "Values"), 
"DT_Output_41" AS 
(SELECT "DT_node_lookup_41"."KEY" AS "KEY", "DT_node_lookup_41".node_id_2 AS node_id_2, "DT_node_data_41".nid AS nid, "DT_node_data_41"."E" AS "E" 
FROM "DT_node_lookup_41" LEFT OUTER JOIN "DT_node_data_41" ON "DT_node_lookup_41".node_id_2 = "DT_node_data_41".nid), 
"GB_Model_13_2" AS 
(SELECT "DT_Output_41"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_41"."E" AS "Score_2" 
FROM "DT_Output_41"), 
"DT_node_lookup_42" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN CASE WHEN ("ADS"."Feature_2" <= 4.75) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.699999988079071) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_42" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, 0.762015845145475 AS "E" UNION ALL SELECT 4 AS nid, -0.7068719718300069 AS "E" UNION ALL SELECT 5 AS nid, -0.7445940372501695 AS "E" UNION ALL SELECT 7 AS nid, -0.7114515816706873 AS "E" UNION ALL SELECT 8 AS nid, -0.7055771518070871 AS "E") AS "Values"), 
"DT_Output_42" AS 
(SELECT "DT_node_lookup_42"."KEY" AS "KEY", "DT_node_lookup_42".node_id_2 AS node_id_2, "DT_node_data_42".nid AS nid, "DT_node_data_42"."E" AS "E" 
FROM "DT_node_lookup_42" LEFT OUTER JOIN "DT_node_data_42" ON "DT_node_lookup_42".node_id_2 = "DT_node_data_42".nid), 
"GB_Model_14_0" AS 
(SELECT "DT_Output_42"."KEY" AS "KEY", "DT_Output_42"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_42"), 
"DT_node_lookup_43" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 2 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.8499999642372131) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.699999988079071) THEN CASE WHEN ("ADS"."Feature_0" <= 6.200000047683716) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.8499999642372131) THEN 11 ELSE 12 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_43" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 2 AS nid, -0.7098740030069574 AS "E" UNION ALL SELECT 4 AS nid, 0.6246582323601559 AS "E" UNION ALL SELECT 5 AS nid, -0.7529508971582752 AS "E" UNION ALL SELECT 8 AS nid, -0.735862384812651 AS "E" UNION ALL SELECT 9 AS nid, -0.7452956892459615 AS "E" UNION ALL SELECT 11 AS nid, -0.7092909608810719 AS "E" UNION ALL SELECT 12 AS nid, -0.7092734167729111 AS "E") AS "Values"), 
"DT_Output_43" AS 
(SELECT "DT_node_lookup_43"."KEY" AS "KEY", "DT_node_lookup_43".node_id_2 AS node_id_2, "DT_node_data_43".nid AS nid, "DT_node_data_43"."E" AS "E" 
FROM "DT_node_lookup_43" LEFT OUTER JOIN "DT_node_data_43" ON "DT_node_lookup_43".node_id_2 = "DT_node_data_43".nid), 
"GB_Model_14_1" AS 
(SELECT "DT_Output_43"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_43"."E" AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_43"), 
"DT_node_lookup_44" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.950000047683716) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 3.100000023841858) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 2.350000023841858) THEN 9 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN 11 ELSE 12 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_44" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -0.7123646649067669 AS "E" UNION ALL SELECT 4 AS nid, -0.7867196142649929 AS "E" UNION ALL SELECT 6 AS nid, 0.8013042537009188 AS "E" UNION ALL SELECT 7 AS nid, -0.8471003004425356 AS "E" UNION ALL SELECT 9 AS nid, 1.0617381863844313 AS "E" UNION ALL SELECT 11 AS nid, -0.006877074547696382 AS "E" UNION ALL SELECT 12 AS nid, 0.7585117510866369 AS "E") AS "Values"), 
"DT_Output_44" AS 
(SELECT "DT_node_lookup_44"."KEY" AS "KEY", "DT_node_lookup_44".node_id_2 AS node_id_2, "DT_node_data_44".nid AS nid, "DT_node_data_44"."E" AS "E" 
FROM "DT_node_lookup_44" LEFT OUTER JOIN "DT_node_data_44" ON "DT_node_lookup_44".node_id_2 = "DT_node_data_44".nid), 
"GB_Model_14_2" AS 
(SELECT "DT_Output_44"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_44"."E" AS "Score_2" 
FROM "DT_Output_44"), 
"DT_node_lookup_45" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN CASE WHEN ("ADS"."Feature_2" <= 4.75) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.699999988079071) THEN 7 ELSE 8 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_45" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 1 AS nid, 0.7489549577981457 AS "E" UNION ALL SELECT 4 AS nid, -0.7021516665834513 AS "E" UNION ALL SELECT 5 AS nid, -0.7376230200306331 AS "E" UNION ALL SELECT 7 AS nid, -0.7059307383319894 AS "E" UNION ALL SELECT 8 AS nid, -0.7005720131586588 AS "E") AS "Values"), 
"DT_Output_45" AS 
(SELECT "DT_node_lookup_45"."KEY" AS "KEY", "DT_node_lookup_45".node_id_2 AS node_id_2, "DT_node_data_45".nid AS nid, "DT_node_data_45"."E" AS "E" 
FROM "DT_node_lookup_45" LEFT OUTER JOIN "DT_node_data_45" ON "DT_node_lookup_45".node_id_2 = "DT_node_data_45".nid), 
"GB_Model_15_0" AS 
(SELECT "DT_Output_45"."KEY" AS "KEY", "DT_Output_45"."E" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_45"), 
"DT_node_lookup_46" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 2 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.8499999642372131) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.699999988079071) THEN CASE WHEN ("ADS"."Feature_1" <= 2.6999999284744263) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.8499999642372131) THEN 11 ELSE 12 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_46" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 2 AS nid, -0.7043133829163896 AS "E" UNION ALL SELECT 4 AS nid, 0.5985915926738103 AS "E" UNION ALL SELECT 5 AS nid, -0.7462346903738288 AS "E" UNION ALL SELECT 8 AS nid, -0.7267819817369907 AS "E" UNION ALL SELECT 9 AS nid, -0.734998631736162 AS "E" UNION ALL SELECT 11 AS nid, -0.703766872978223 AS "E" UNION ALL SELECT 12 AS nid, -0.7037536965260538 AS "E") AS "Values"), 
"DT_Output_46" AS 
(SELECT "DT_node_lookup_46"."KEY" AS "KEY", "DT_node_lookup_46".node_id_2 AS node_id_2, "DT_node_data_46".nid AS nid, "DT_node_data_46"."E" AS "E" 
FROM "DT_node_lookup_46" LEFT OUTER JOIN "DT_node_data_46" ON "DT_node_lookup_46".node_id_2 = "DT_node_data_46".nid), 
"GB_Model_15_1" AS 
(SELECT "DT_Output_46"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_46"."E" AS "Score_1", 0.0 AS "Score_2" 
FROM "DT_Output_46"), 
"DT_node_lookup_47" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN CASE WHEN ("ADS"."Feature_2" <= 2.449999988079071) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 3.100000023841858) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 2.350000023841858) THEN 9 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN 11 ELSE 12 END END END AS node_id_2 
FROM iris AS "ADS"), 
"DT_node_data_47" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -0.7065284050475743 AS "E" UNION ALL SELECT 4 AS nid, -0.7068749489355306 AS "E" UNION ALL SELECT 6 AS nid, 0.8213289736955834 AS "E" UNION ALL SELECT 7 AS nid, -0.8280247742067749 AS "E" UNION ALL SELECT 9 AS nid, 1.035351530092815 AS "E" UNION ALL SELECT 11 AS nid, -0.17000401217206954 AS "E" UNION ALL SELECT 12 AS nid, 0.7500541893839242 AS "E") AS "Values"), 
"DT_Output_47" AS 
(SELECT "DT_node_lookup_47"."KEY" AS "KEY", "DT_node_lookup_47".node_id_2 AS node_id_2, "DT_node_data_47".nid AS nid, "DT_node_data_47"."E" AS "E" 
FROM "DT_node_lookup_47" LEFT OUTER JOIN "DT_node_data_47" ON "DT_node_lookup_47".node_id_2 = "DT_node_data_47".nid), 
"GB_Model_15_2" AS 
(SELECT "DT_Output_47"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_47"."E" AS "Score_2" 
FROM "DT_Output_47")
 INSERT INTO "TMP_20221008175343_0TPFKRA_GB_B4" ("KEY", "Score_0", "Score_1", "Score_2") SELECT "T"."KEY", "T"."Score_0", "T"."Score_1", "T"."Score_2" 
FROM (SELECT "GB_B4"."KEY" AS "KEY", "GB_B4"."Score_0" AS "Score_0", "GB_B4"."Score_1" AS "Score_1", "GB_B4"."Score_2" AS "Score_2" 
FROM (SELECT "GB_esu_4"."KEY" AS "KEY", "GB_esu_4"."Score_0" AS "Score_0", "GB_esu_4"."Score_1" AS "Score_1", "GB_esu_4"."Score_2" AS "Score_2" 
FROM (SELECT "GB_Model_13_1"."KEY" AS "KEY", "GB_Model_13_1"."Score_0" AS "Score_0", "GB_Model_13_1"."Score_1" AS "Score_1", "GB_Model_13_1"."Score_2" AS "Score_2" 
FROM "GB_Model_13_1" UNION ALL SELECT "GB_Model_13_2"."KEY" AS "KEY", "GB_Model_13_2"."Score_0" AS "Score_0", "GB_Model_13_2"."Score_1" AS "Score_1", "GB_Model_13_2"."Score_2" AS "Score_2" 
FROM "GB_Model_13_2" UNION ALL SELECT "GB_Model_14_0"."KEY" AS "KEY", "GB_Model_14_0"."Score_0" AS "Score_0", "GB_Model_14_0"."Score_1" AS "Score_1", "GB_Model_14_0"."Score_2" AS "Score_2" 
FROM "GB_Model_14_0" UNION ALL SELECT "GB_Model_14_1"."KEY" AS "KEY", "GB_Model_14_1"."Score_0" AS "Score_0", "GB_Model_14_1"."Score_1" AS "Score_1", "GB_Model_14_1"."Score_2" AS "Score_2" 
FROM "GB_Model_14_1" UNION ALL SELECT "GB_Model_14_2"."KEY" AS "KEY", "GB_Model_14_2"."Score_0" AS "Score_0", "GB_Model_14_2"."Score_1" AS "Score_1", "GB_Model_14_2"."Score_2" AS "Score_2" 
FROM "GB_Model_14_2" UNION ALL SELECT "GB_Model_15_0"."KEY" AS "KEY", "GB_Model_15_0"."Score_0" AS "Score_0", "GB_Model_15_0"."Score_1" AS "Score_1", "GB_Model_15_0"."Score_2" AS "Score_2" 
FROM "GB_Model_15_0" UNION ALL SELECT "GB_Model_15_1"."KEY" AS "KEY", "GB_Model_15_1"."Score_0" AS "Score_0", "GB_Model_15_1"."Score_1" AS "Score_1", "GB_Model_15_1"."Score_2" AS "Score_2" 
FROM "GB_Model_15_1" UNION ALL SELECT "GB_Model_15_2"."KEY" AS "KEY", "GB_Model_15_2"."Score_0" AS "Score_0", "GB_Model_15_2"."Score_1" AS "Score_1", "GB_Model_15_2"."Score_2" AS "Score_2" 
FROM "GB_Model_15_2") AS "GB_esu_4") AS "GB_B4") AS "T"

-- Code For temporary table TMP_20221008175343_SGH9RI2_GB_sum part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221008175343_SGH9RI2_GB_sum" (
	"KEY" BIGINT NOT NULL, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221008175343_SGH9RI2_GB_sum part 2. Populate

WITH "GB_Union" AS 
(SELECT "GB_EnsembleUnion"."KEY" AS "KEY", "GB_EnsembleUnion"."Score_0" AS "Score_0", "GB_EnsembleUnion"."Score_1" AS "Score_1", "GB_EnsembleUnion"."Score_2" AS "Score_2" 
FROM (SELECT "GB_B0"."KEY" AS "KEY", "GB_B0"."Score_0" AS "Score_0", "GB_B0"."Score_1" AS "Score_1", "GB_B0"."Score_2" AS "Score_2" 
FROM "TMP_20221008175343_2XU1SXU_GB_B0" AS "GB_B0" UNION ALL SELECT "GB_B1"."KEY" AS "KEY", "GB_B1"."Score_0" AS "Score_0", "GB_B1"."Score_1" AS "Score_1", "GB_B1"."Score_2" AS "Score_2" 
FROM "TMP_20221008175343_32PJQD2_GB_B1" AS "GB_B1" UNION ALL SELECT "GB_B2"."KEY" AS "KEY", "GB_B2"."Score_0" AS "Score_0", "GB_B2"."Score_1" AS "Score_1", "GB_B2"."Score_2" AS "Score_2" 
FROM "TMP_20221008175343_2UY295W_GB_B2" AS "GB_B2" UNION ALL SELECT "GB_B3"."KEY" AS "KEY", "GB_B3"."Score_0" AS "Score_0", "GB_B3"."Score_1" AS "Score_1", "GB_B3"."Score_2" AS "Score_2" 
FROM "TMP_20221008175343_YO61QC2_GB_B3" AS "GB_B3" UNION ALL SELECT "GB_B4"."KEY" AS "KEY", "GB_B4"."Score_0" AS "Score_0", "GB_B4"."Score_1" AS "Score_1", "GB_B4"."Score_2" AS "Score_2" 
FROM "TMP_20221008175343_0TPFKRA_GB_B4" AS "GB_B4") AS "GB_EnsembleUnion")
 INSERT INTO "TMP_20221008175343_SGH9RI2_GB_sum" ("KEY", "Score_0", "Score_1", "Score_2") SELECT "T"."KEY", "T"."Score_0", "T"."Score_1", "T"."Score_2" 
FROM (SELECT "GB_sum"."KEY" AS "KEY", "GB_sum"."Score_0" AS "Score_0", "GB_sum"."Score_1" AS "Score_1", "GB_sum"."Score_2" AS "Score_2" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS FLOAT) AS "Score_0", CAST("T"."Score_1" AS FLOAT) AS "Score_1", CAST("T"."Score_2" AS FLOAT) AS "Score_2" 
FROM (SELECT "GB_Union"."KEY" AS "KEY", sum("GB_Union"."Score_0") AS "Score_0", sum("GB_Union"."Score_1") AS "Score_1", sum("GB_Union"."Score_2") AS "Score_2" 
FROM "GB_Union" GROUP BY "GB_Union"."KEY") AS "T") AS "GB_sum") AS "T"

-- Code For temporary table TMP_20221008175343_SGH9RI2_GB_sum part 3. Create Index 

CREATE INDEX "ix_TMP_20221008175343_SGH9RI2_GB_sum_KEY" ON "TMP_20221008175343_SGH9RI2_GB_sum" ("KEY")

-- Model deployment code

WITH orig_cte AS 
(SELECT "GB_sum"."KEY" AS "KEY", 0.30833333333333335 + 0.1 * "GB_sum"."Score_0" AS "Score_0", 0.3333333333333333 + 0.1 * "GB_sum"."Score_1" AS "Score_1", 0.35833333333333334 + 0.1 * "GB_sum"."Score_2" AS "Score_2", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "TMP_20221008175343_SGH9RI2_GB_sum" AS "GB_sum"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(greatest(-100.0, score_max."Score_0" - score_max."max_Score")) AS "exp_delta_Score_0", exp(greatest(-100.0, score_max."Score_1" - score_max."max_Score")) AS "exp_delta_Score_1", exp(greatest(-100.0, score_max."Score_2" - score_max."max_Score")) AS "exp_delta_Score_2" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", max(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", arg_max_cte."arg_max_Score" AS "Decision", greatest(arg_max_cte."SoftProba_0", arg_max_cte."SoftProba_1", arg_max_cte."SoftProba_2") AS "DecisionProba" 
FROM arg_max_cte