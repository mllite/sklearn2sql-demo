-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : SVC_poly
-- Dataset : BreastCancer
-- Database : pgsql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Model deployment code

WITH kernel_input AS 
(SELECT "ADS"."KEY" AS "KEY", CAST("ADS"."Feature_0" AS FLOAT) AS "Feature_0", CAST("ADS"."Feature_1" AS FLOAT) AS "Feature_1", CAST("ADS"."Feature_2" AS FLOAT) AS "Feature_2", CAST("ADS"."Feature_3" AS FLOAT) AS "Feature_3", CAST("ADS"."Feature_4" AS FLOAT) AS "Feature_4", CAST("ADS"."Feature_5" AS FLOAT) AS "Feature_5", CAST("ADS"."Feature_6" AS FLOAT) AS "Feature_6", CAST("ADS"."Feature_7" AS FLOAT) AS "Feature_7", CAST("ADS"."Feature_8" AS FLOAT) AS "Feature_8", CAST("ADS"."Feature_9" AS FLOAT) AS "Feature_9", CAST("ADS"."Feature_10" AS FLOAT) AS "Feature_10", CAST("ADS"."Feature_11" AS FLOAT) AS "Feature_11", CAST("ADS"."Feature_12" AS FLOAT) AS "Feature_12", CAST("ADS"."Feature_13" AS FLOAT) AS "Feature_13", CAST("ADS"."Feature_14" AS FLOAT) AS "Feature_14", CAST("ADS"."Feature_15" AS FLOAT) AS "Feature_15", CAST("ADS"."Feature_16" AS FLOAT) AS "Feature_16", CAST("ADS"."Feature_17" AS FLOAT) AS "Feature_17", CAST("ADS"."Feature_18" AS FLOAT) AS "Feature_18", CAST("ADS"."Feature_19" AS FLOAT) AS "Feature_19", CAST("ADS"."Feature_20" AS FLOAT) AS "Feature_20", CAST("ADS"."Feature_21" AS FLOAT) AS "Feature_21", CAST("ADS"."Feature_22" AS FLOAT) AS "Feature_22", CAST("ADS"."Feature_23" AS FLOAT) AS "Feature_23", CAST("ADS"."Feature_24" AS FLOAT) AS "Feature_24", CAST("ADS"."Feature_25" AS FLOAT) AS "Feature_25", CAST("ADS"."Feature_26" AS FLOAT) AS "Feature_26", CAST("ADS"."Feature_27" AS FLOAT) AS "Feature_27", CAST("ADS"."Feature_28" AS FLOAT) AS "Feature_28", CAST("ADS"."Feature_29" AS FLOAT) AS "Feature_29", CAST("ADS"."TGT" AS FLOAT) AS "TGT" 
FROM "BreastCancer" AS "ADS"), 
"SV_data" AS 
(SELECT "Values".sv_idx AS sv_idx, "Values".dual_coeff AS dual_coeff, "Values".sv_0 AS sv_0, "Values".sv_1 AS sv_1, "Values".sv_2 AS sv_2, "Values".sv_3 AS sv_3, "Values".sv_4 AS sv_4, "Values".sv_5 AS sv_5, "Values".sv_6 AS sv_6, "Values".sv_7 AS sv_7, "Values".sv_8 AS sv_8, "Values".sv_9 AS sv_9, "Values".sv_10 AS sv_10, "Values".sv_11 AS sv_11, "Values".sv_12 AS sv_12, "Values".sv_13 AS sv_13, "Values".sv_14 AS sv_14, "Values".sv_15 AS sv_15, "Values".sv_16 AS sv_16, "Values".sv_17 AS sv_17, "Values".sv_18 AS sv_18, "Values".sv_19 AS sv_19, "Values".sv_20 AS sv_20, "Values".sv_21 AS sv_21, "Values".sv_22 AS sv_22, "Values".sv_23 AS sv_23, "Values".sv_24 AS sv_24, "Values".sv_25 AS sv_25, "Values".sv_26 AS sv_26, "Values".sv_27 AS sv_27, "Values".sv_28 AS sv_28, "Values".sv_29 AS sv_29 
FROM (SELECT 0 AS sv_idx, -1.0 AS dual_coeff, 13.77 AS sv_0, 22.29 AS sv_1, 90.63 AS sv_2, 588.9 AS sv_3, 0.12 AS sv_4, 0.1267 AS sv_5, 0.1385 AS sv_6, 0.06526 AS sv_7, 0.1834 AS sv_8, 0.06877 AS sv_9, 0.6191 AS sv_10, 2.112 AS sv_11, 4.906 AS sv_12, 49.7 AS sv_13, 0.0138 AS sv_14, 0.03348 AS sv_15, 0.04665 AS sv_16, 0.0206 AS sv_17, 0.02689 AS sv_18, 0.004306 AS sv_19, 16.39 AS sv_20, 34.01 AS sv_21, 111.6 AS sv_22, 806.9 AS sv_23, 0.1737 AS sv_24, 0.3122 AS sv_25, 0.3809 AS sv_26, 0.1673 AS sv_27, 0.308 AS sv_28, 0.09333 AS sv_29 UNION ALL SELECT 1 AS sv_idx, -1.0 AS dual_coeff, 13.82 AS sv_0, 24.49 AS sv_1, 92.33 AS sv_2, 595.9 AS sv_3, 0.1162 AS sv_4, 0.1681 AS sv_5, 0.1357 AS sv_6, 0.06759 AS sv_7, 0.2275 AS sv_8, 0.07237 AS sv_9, 0.4751 AS sv_10, 1.528 AS sv_11, 2.974 AS sv_12, 39.05 AS sv_13, 0.00968 AS sv_14, 0.03856 AS sv_15, 0.03476 AS sv_16, 0.01616 AS sv_17, 0.02434 AS sv_18, 0.006995 AS sv_19, 16.01 AS sv_20, 32.94 AS sv_21, 106.0 AS sv_22, 788.0 AS sv_23, 0.1794 AS sv_24, 0.3966 AS sv_25, 0.3381 AS sv_26, 0.1521 AS sv_27, 0.3651 AS sv_28, 0.1183 AS sv_29 UNION ALL SELECT 2 AS sv_idx, -0.5245023271593624 AS dual_coeff, 16.26 AS sv_0, 21.88 AS sv_1, 107.5 AS sv_2, 826.8 AS sv_3, 0.1165 AS sv_4, 0.1283 AS sv_5, 0.1799 AS sv_6, 0.07981 AS sv_7, 0.1869 AS sv_8, 0.06532 AS sv_9, 0.5706 AS sv_10, 1.457 AS sv_11, 2.961 AS sv_12, 57.72 AS sv_13, 0.01056 AS sv_14, 0.03756 AS sv_15, 0.05839 AS sv_16, 0.01186 AS sv_17, 0.04022 AS sv_18, 0.006187 AS sv_19, 17.73 AS sv_20, 25.21 AS sv_21, 113.7 AS sv_22, 975.2 AS sv_23, 0.1426 AS sv_24, 0.2116 AS sv_25, 0.3344 AS sv_26, 0.1047 AS sv_27, 0.2736 AS sv_28, 0.07953 AS sv_29 UNION ALL SELECT 3 AS sv_idx, -1.0 AS dual_coeff, 13.61 AS sv_0, 24.69 AS sv_1, 87.76 AS sv_2, 572.6 AS sv_3, 0.09258 AS sv_4, 0.07862 AS sv_5, 0.05285 AS sv_6, 0.03085 AS sv_7, 0.1761 AS sv_8, 0.0613 AS sv_9, 0.231 AS sv_10, 1.005 AS sv_11, 1.752 AS sv_12, 19.83 AS sv_13, 0.004088 AS sv_14, 0.01174 AS sv_15, 0.01796 AS sv_16, 0.00688 AS sv_17, 0.01323 AS sv_18, 0.001465 AS sv_19, 16.89 AS sv_20, 35.64 AS sv_21, 113.2 AS sv_22, 848.7 AS sv_23, 0.1471 AS sv_24, 0.2884 AS sv_25, 0.3796 AS sv_26, 0.1329 AS sv_27, 0.347 AS sv_28, 0.079 AS sv_29 UNION ALL SELECT 4 AS sv_idx, -1.0 AS dual_coeff, 13.98 AS sv_0, 19.62 AS sv_1, 91.12 AS sv_2, 599.5 AS sv_3, 0.106 AS sv_4, 0.1133 AS sv_5, 0.1126 AS sv_6, 0.06463 AS sv_7, 0.1669 AS sv_8, 0.06544 AS sv_9, 0.2208 AS sv_10, 0.9533 AS sv_11, 1.602 AS sv_12, 18.85 AS sv_13, 0.005314 AS sv_14, 0.01791 AS sv_15, 0.02185 AS sv_16, 0.009567 AS sv_17, 0.01223 AS sv_18, 0.002846 AS sv_19, 17.04 AS sv_20, 30.8 AS sv_21, 113.9 AS sv_22, 869.3 AS sv_23, 0.1613 AS sv_24, 0.3568 AS sv_25, 0.4069 AS sv_26, 0.1827 AS sv_27, 0.3179 AS sv_28, 0.1055 AS sv_29 UNION ALL SELECT 5 AS sv_idx, -1.0 AS dual_coeff, 14.45 AS sv_0, 20.22 AS sv_1, 94.49 AS sv_2, 642.7 AS sv_3, 0.09872 AS sv_4, 0.1206 AS sv_5, 0.118 AS sv_6, 0.0598 AS sv_7, 0.195 AS sv_8, 0.06466 AS sv_9, 0.2092 AS sv_10, 0.6509 AS sv_11, 1.446 AS sv_12, 19.42 AS sv_13, 0.004044 AS sv_14, 0.01597 AS sv_15, 0.02 AS sv_16, 0.007303 AS sv_17, 0.01522 AS sv_18, 0.001976 AS sv_19, 18.33 AS sv_20, 30.12 AS sv_21, 117.9 AS sv_22, 1044.0 AS sv_23, 0.1552 AS sv_24, 0.4056 AS sv_25, 0.4967 AS sv_26, 0.1838 AS sv_27, 0.4753 AS sv_28, 0.1013 AS sv_29 UNION ALL SELECT 6 AS sv_idx, 1.0 AS dual_coeff, 14.44 AS sv_0, 15.18 AS sv_1, 93.97 AS sv_2, 640.1 AS sv_3, 0.0997 AS sv_4, 0.1021 AS sv_5, 0.08487 AS sv_6, 0.05532 AS sv_7, 0.1724 AS sv_8, 0.06081 AS sv_9, 0.2406 AS sv_10, 0.7394 AS sv_11, 2.12 AS sv_12, 21.2 AS sv_13, 0.005706 AS sv_14, 0.02297 AS sv_15, 0.03114 AS sv_16, 0.01493 AS sv_17, 0.01454 AS sv_18, 0.002528 AS sv_19, 15.85 AS sv_20, 19.85 AS sv_21, 108.6 AS sv_22, 766.9 AS sv_23, 0.1316 AS sv_24, 0.2735 AS sv_25, 0.3103 AS sv_26, 0.1599 AS sv_27, 0.2691 AS sv_28, 0.07683 AS sv_29 UNION ALL SELECT 7 AS sv_idx, 1.0 AS dual_coeff, 14.59 AS sv_0, 22.68 AS sv_1, 96.39 AS sv_2, 657.1 AS sv_3, 0.08473 AS sv_4, 0.133 AS sv_5, 0.1029 AS sv_6, 0.03736 AS sv_7, 0.1454 AS sv_8, 0.06147 AS sv_9, 0.2254 AS sv_10, 1.108 AS sv_11, 2.224 AS sv_12, 19.54 AS sv_13, 0.004242 AS sv_14, 0.04639 AS sv_15, 0.06578 AS sv_16, 0.01606 AS sv_17, 0.01638 AS sv_18, 0.004406 AS sv_19, 15.48 AS sv_20, 27.27 AS sv_21, 105.9 AS sv_22, 733.5 AS sv_23, 0.1026 AS sv_24, 0.3171 AS sv_25, 0.3662 AS sv_26, 0.1105 AS sv_27, 0.2258 AS sv_28, 0.08004 AS sv_29 UNION ALL SELECT 8 AS sv_idx, 1.0 AS dual_coeff, 14.11 AS sv_0, 12.88 AS sv_1, 90.03 AS sv_2, 616.5 AS sv_3, 0.09309 AS sv_4, 0.05306 AS sv_5, 0.01765 AS sv_6, 0.02733 AS sv_7, 0.1373 AS sv_8, 0.057 AS sv_9, 0.2571 AS sv_10, 1.081 AS sv_11, 1.558 AS sv_12, 23.92 AS sv_13, 0.006692 AS sv_14, 0.01132 AS sv_15, 0.005717 AS sv_16, 0.006627 AS sv_17, 0.01416 AS sv_18, 0.002476 AS sv_19, 15.53 AS sv_20, 18.0 AS sv_21, 98.4 AS sv_22, 749.9 AS sv_23, 0.1281 AS sv_24, 0.1109 AS sv_25, 0.05307 AS sv_26, 0.0589 AS sv_27, 0.21 AS sv_28, 0.07083 AS sv_29 UNION ALL SELECT 9 AS sv_idx, 0.5245023271593624 AS dual_coeff, 14.03 AS sv_0, 21.25 AS sv_1, 89.79 AS sv_2, 603.4 AS sv_3, 0.0907 AS sv_4, 0.06945 AS sv_5, 0.01462 AS sv_6, 0.01896 AS sv_7, 0.1517 AS sv_8, 0.05835 AS sv_9, 0.2589 AS sv_10, 1.503 AS sv_11, 1.667 AS sv_12, 22.07 AS sv_13, 0.007389 AS sv_14, 0.01383 AS sv_15, 0.007302 AS sv_16, 0.01004 AS sv_17, 0.01263 AS sv_18, 0.002925 AS sv_19, 15.33 AS sv_20, 30.28 AS sv_21, 98.27 AS sv_22, 715.5 AS sv_23, 0.1287 AS sv_24, 0.1513 AS sv_25, 0.06231 AS sv_26, 0.07963 AS sv_27, 0.2226 AS sv_28, 0.07617 AS sv_29 UNION ALL SELECT 10 AS sv_idx, 1.0 AS dual_coeff, 13.68 AS sv_0, 16.33 AS sv_1, 87.76 AS sv_2, 575.5 AS sv_3, 0.09277 AS sv_4, 0.07255 AS sv_5, 0.01752 AS sv_6, 0.0188 AS sv_7, 0.1631 AS sv_8, 0.06155 AS sv_9, 0.2047 AS sv_10, 0.4801 AS sv_11, 1.373 AS sv_12, 17.25 AS sv_13, 0.003828 AS sv_14, 0.007228 AS sv_15, 0.007078 AS sv_16, 0.005077 AS sv_17, 0.01054 AS sv_18, 0.001697 AS sv_19, 15.85 AS sv_20, 20.2 AS sv_21, 101.6 AS sv_22, 773.4 AS sv_23, 0.1264 AS sv_24, 0.1564 AS sv_25, 0.1206 AS sv_26, 0.08704 AS sv_27, 0.2806 AS sv_28, 0.07782 AS sv_29 UNION ALL SELECT 11 AS sv_idx, 1.0 AS dual_coeff, 14.04 AS sv_0, 15.98 AS sv_1, 89.78 AS sv_2, 611.2 AS sv_3, 0.08458 AS sv_4, 0.05895 AS sv_5, 0.03534 AS sv_6, 0.02944 AS sv_7, 0.1714 AS sv_8, 0.05898 AS sv_9, 0.3892 AS sv_10, 1.046 AS sv_11, 2.644 AS sv_12, 32.74 AS sv_13, 0.007976 AS sv_14, 0.01295 AS sv_15, 0.01608 AS sv_16, 0.009046 AS sv_17, 0.02005 AS sv_18, 0.00283 AS sv_19, 15.66 AS sv_20, 21.58 AS sv_21, 101.2 AS sv_22, 750.0 AS sv_23, 0.1195 AS sv_24, 0.1252 AS sv_25, 0.1117 AS sv_26, 0.07453 AS sv_27, 0.2725 AS sv_28, 0.07234 AS sv_29) AS "Values"), 
kernel_dp AS 
(SELECT t."KEY" AS "KEY", t.dot_product AS dot_product 
FROM (SELECT full_join_data_sv."KEY" AS "KEY", sum(CAST(full_join_data_sv.dot_prod1 AS FLOAT)) + 2.309418790534432 AS dot_product 
FROM (SELECT kernel_input."KEY" AS "KEY", "SV_data".dual_coeff * power(9.17041263546023e-07 * (kernel_input."Feature_0" * "SV_data".sv_0 + kernel_input."Feature_1" * "SV_data".sv_1 + kernel_input."Feature_2" * "SV_data".sv_2 + kernel_input."Feature_3" * "SV_data".sv_3 + kernel_input."Feature_4" * "SV_data".sv_4 + kernel_input."Feature_5" * "SV_data".sv_5 + kernel_input."Feature_6" * "SV_data".sv_6 + kernel_input."Feature_7" * "SV_data".sv_7 + kernel_input."Feature_8" * "SV_data".sv_8 + kernel_input."Feature_9" * "SV_data".sv_9 + kernel_input."Feature_10" * "SV_data".sv_10 + kernel_input."Feature_11" * "SV_data".sv_11 + kernel_input."Feature_12" * "SV_data".sv_12 + kernel_input."Feature_13" * "SV_data".sv_13 + kernel_input."Feature_14" * "SV_data".sv_14 + kernel_input."Feature_15" * "SV_data".sv_15 + kernel_input."Feature_16" * "SV_data".sv_16 + kernel_input."Feature_17" * "SV_data".sv_17 + kernel_input."Feature_18" * "SV_data".sv_18 + kernel_input."Feature_19" * "SV_data".sv_19 + kernel_input."Feature_20" * "SV_data".sv_20 + kernel_input."Feature_21" * "SV_data".sv_21 + kernel_input."Feature_22" * "SV_data".sv_22 + kernel_input."Feature_23" * "SV_data".sv_23 + kernel_input."Feature_24" * "SV_data".sv_24 + kernel_input."Feature_25" * "SV_data".sv_25 + kernel_input."Feature_26" * "SV_data".sv_26 + kernel_input."Feature_27" * "SV_data".sv_27 + kernel_input."Feature_28" * "SV_data".sv_28 + kernel_input."Feature_29" * "SV_data".sv_29) + 0.0, 3) AS dot_prod1 
FROM kernel_input, "SV_data") AS full_join_data_sv GROUP BY full_join_data_sv."KEY") AS t)
 SELECT kernel_dp."KEY" AS "KEY", -kernel_dp.dot_product AS "Score_0", kernel_dp.dot_product AS "Score_1", 1.0 - 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(-(kernel_dp.dot_product * -0.9833854049090597 + 0.4375482103721258)))))) AS "Proba_0", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(-(kernel_dp.dot_product * -0.9833854049090597 + 0.4375482103721258)))))) AS "Proba_1", CASE WHEN (1.0 - 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(-(kernel_dp.dot_product * -0.9833854049090597 + 0.4375482103721258)))))) IS NULL OR 1.0 - 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(-(kernel_dp.dot_product * -0.9833854049090597 + 0.4375482103721258)))))) > 0.0) THEN ln(1.0 - 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(-(kernel_dp.dot_product * -0.9833854049090597 + 0.4375482103721258))))))) ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(-(kernel_dp.dot_product * -0.9833854049090597 + 0.4375482103721258)))))) IS NULL OR 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(-(kernel_dp.dot_product * -0.9833854049090597 + 0.4375482103721258)))))) > 0.0) THEN ln(1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(-(kernel_dp.dot_product * -0.9833854049090597 + 0.4375482103721258))))))) ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (kernel_dp.dot_product > 0.0) THEN 1 ELSE 0 END AS "Decision", greatest(1.0 - 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(-(kernel_dp.dot_product * -0.9833854049090597 + 0.4375482103721258)))))), 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(-(kernel_dp.dot_product * -0.9833854049090597 + 0.4375482103721258))))))) AS "DecisionProba" 
FROM kernel_dp