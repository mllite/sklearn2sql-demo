-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CalibratedClassifierCV_sigmoid_Pipeline
-- Dataset : digits
-- Database : duck


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018185929_FHI2AN2_ADS_imp_1_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185929_FHI2AN2_ADS_imp_1_OUT" (
	"KEY" BIGINT NOT NULL, 
	impter_2 DOUBLE, 
	impter_3 DOUBLE, 
	impter_4 DOUBLE, 
	impter_5 DOUBLE, 
	impter_6 DOUBLE, 
	impter_7 DOUBLE, 
	impter_8 DOUBLE, 
	impter_9 DOUBLE, 
	impter_10 DOUBLE, 
	impter_11 DOUBLE, 
	impter_12 DOUBLE, 
	impter_13 DOUBLE, 
	impter_14 DOUBLE, 
	impter_15 DOUBLE, 
	impter_16 DOUBLE, 
	impter_17 DOUBLE, 
	impter_18 DOUBLE, 
	impter_19 DOUBLE, 
	impter_20 DOUBLE, 
	impter_21 DOUBLE, 
	impter_22 DOUBLE, 
	impter_23 DOUBLE, 
	impter_24 DOUBLE, 
	impter_25 DOUBLE, 
	impter_26 DOUBLE, 
	impter_27 DOUBLE, 
	impter_28 DOUBLE, 
	impter_29 DOUBLE, 
	impter_30 DOUBLE, 
	impter_31 DOUBLE, 
	impter_32 DOUBLE, 
	impter_33 DOUBLE, 
	impter_34 DOUBLE, 
	impter_35 DOUBLE, 
	impter_36 DOUBLE, 
	impter_37 DOUBLE, 
	impter_38 DOUBLE, 
	impter_39 DOUBLE, 
	impter_40 DOUBLE, 
	impter_41 DOUBLE, 
	impter_42 DOUBLE, 
	impter_43 DOUBLE, 
	impter_44 DOUBLE, 
	impter_45 DOUBLE, 
	impter_46 DOUBLE, 
	impter_47 DOUBLE, 
	impter_48 DOUBLE, 
	impter_49 DOUBLE, 
	impter_50 DOUBLE, 
	impter_51 DOUBLE, 
	impter_52 DOUBLE, 
	impter_53 DOUBLE, 
	impter_54 DOUBLE, 
	impter_55 DOUBLE, 
	impter_56 DOUBLE, 
	impter_57 DOUBLE, 
	impter_58 DOUBLE, 
	impter_59 DOUBLE, 
	impter_60 DOUBLE, 
	impter_61 DOUBLE, 
	impter_62 DOUBLE, 
	impter_63 DOUBLE, 
	impter_64 DOUBLE, 
	impter_65 DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185929_FHI2AN2_ADS_imp_1_OUT part 2. Populate

INSERT INTO "TMP_20221018185929_FHI2AN2_ADS_imp_1_OUT" ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65) SELECT "T"."KEY", "T".impter_2, "T".impter_3, "T".impter_4, "T".impter_5, "T".impter_6, "T".impter_7, "T".impter_8, "T".impter_9, "T".impter_10, "T".impter_11, "T".impter_12, "T".impter_13, "T".impter_14, "T".impter_15, "T".impter_16, "T".impter_17, "T".impter_18, "T".impter_19, "T".impter_20, "T".impter_21, "T".impter_22, "T".impter_23, "T".impter_24, "T".impter_25, "T".impter_26, "T".impter_27, "T".impter_28, "T".impter_29, "T".impter_30, "T".impter_31, "T".impter_32, "T".impter_33, "T".impter_34, "T".impter_35, "T".impter_36, "T".impter_37, "T".impter_38, "T".impter_39, "T".impter_40, "T".impter_41, "T".impter_42, "T".impter_43, "T".impter_44, "T".impter_45, "T".impter_46, "T".impter_47, "T".impter_48, "T".impter_49, "T".impter_50, "T".impter_51, "T".impter_52, "T".impter_53, "T".impter_54, "T".impter_55, "T".impter_56, "T".impter_57, "T".impter_58, "T".impter_59, "T".impter_60, "T".impter_61, "T".impter_62, "T".impter_63, "T".impter_64, "T".impter_65 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impter_2 AS impter_2, "ADS_imp_1_OUT".impter_3 AS impter_3, "ADS_imp_1_OUT".impter_4 AS impter_4, "ADS_imp_1_OUT".impter_5 AS impter_5, "ADS_imp_1_OUT".impter_6 AS impter_6, "ADS_imp_1_OUT".impter_7 AS impter_7, "ADS_imp_1_OUT".impter_8 AS impter_8, "ADS_imp_1_OUT".impter_9 AS impter_9, "ADS_imp_1_OUT".impter_10 AS impter_10, "ADS_imp_1_OUT".impter_11 AS impter_11, "ADS_imp_1_OUT".impter_12 AS impter_12, "ADS_imp_1_OUT".impter_13 AS impter_13, "ADS_imp_1_OUT".impter_14 AS impter_14, "ADS_imp_1_OUT".impter_15 AS impter_15, "ADS_imp_1_OUT".impter_16 AS impter_16, "ADS_imp_1_OUT".impter_17 AS impter_17, "ADS_imp_1_OUT".impter_18 AS impter_18, "ADS_imp_1_OUT".impter_19 AS impter_19, "ADS_imp_1_OUT".impter_20 AS impter_20, "ADS_imp_1_OUT".impter_21 AS impter_21, "ADS_imp_1_OUT".impter_22 AS impter_22, "ADS_imp_1_OUT".impter_23 AS impter_23, "ADS_imp_1_OUT".impter_24 AS impter_24, "ADS_imp_1_OUT".impter_25 AS impter_25, "ADS_imp_1_OUT".impter_26 AS impter_26, "ADS_imp_1_OUT".impter_27 AS impter_27, "ADS_imp_1_OUT".impter_28 AS impter_28, "ADS_imp_1_OUT".impter_29 AS impter_29, "ADS_imp_1_OUT".impter_30 AS impter_30, "ADS_imp_1_OUT".impter_31 AS impter_31, "ADS_imp_1_OUT".impter_32 AS impter_32, "ADS_imp_1_OUT".impter_33 AS impter_33, "ADS_imp_1_OUT".impter_34 AS impter_34, "ADS_imp_1_OUT".impter_35 AS impter_35, "ADS_imp_1_OUT".impter_36 AS impter_36, "ADS_imp_1_OUT".impter_37 AS impter_37, "ADS_imp_1_OUT".impter_38 AS impter_38, "ADS_imp_1_OUT".impter_39 AS impter_39, "ADS_imp_1_OUT".impter_40 AS impter_40, "ADS_imp_1_OUT".impter_41 AS impter_41, "ADS_imp_1_OUT".impter_42 AS impter_42, "ADS_imp_1_OUT".impter_43 AS impter_43, "ADS_imp_1_OUT".impter_44 AS impter_44, "ADS_imp_1_OUT".impter_45 AS impter_45, "ADS_imp_1_OUT".impter_46 AS impter_46, "ADS_imp_1_OUT".impter_47 AS impter_47, "ADS_imp_1_OUT".impter_48 AS impter_48, "ADS_imp_1_OUT".impter_49 AS impter_49, "ADS_imp_1_OUT".impter_50 AS impter_50, "ADS_imp_1_OUT".impter_51 AS impter_51, "ADS_imp_1_OUT".impter_52 AS impter_52, "ADS_imp_1_OUT".impter_53 AS impter_53, "ADS_imp_1_OUT".impter_54 AS impter_54, "ADS_imp_1_OUT".impter_55 AS impter_55, "ADS_imp_1_OUT".impter_56 AS impter_56, "ADS_imp_1_OUT".impter_57 AS impter_57, "ADS_imp_1_OUT".impter_58 AS impter_58, "ADS_imp_1_OUT".impter_59 AS impter_59, "ADS_imp_1_OUT".impter_60 AS impter_60, "ADS_imp_1_OUT".impter_61 AS impter_61, "ADS_imp_1_OUT".impter_62 AS impter_62, "ADS_imp_1_OUT".impter_63 AS impter_63, "ADS_imp_1_OUT".impter_64 AS impter_64, "ADS_imp_1_OUT".impter_65 AS impter_65 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.2950591510090466 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 5.104384133611691 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 11.791927627000696 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 11.84829505915101 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 5.823242867084203 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 1.394572025052192 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.13430758524704245 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.0055671537926235215 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 1.977035490605428 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 10.362560890744607 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 12.03061934585943 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 10.271398747390396 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 8.121781489213639 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 1.8921363952679193 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.11760612386917188 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.0020876826722338203 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 2.5427974947807934 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 9.935281837160751 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 7.099512874043145 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 7.132915796798887 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 7.81419624217119 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 1.8434237995824634 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.05775922059846903 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.0006958942240779402 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 2.4808629088378567 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 9.143354210160055 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 8.960334029227557 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 10.03688239387613 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 7.5949895615866385 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN 2.337508698677801 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.0027835768963117608 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.0 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN 2.3319415448851775 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 7.608907446068198 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 9.028531663187195 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 10.270006958942242 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN 8.806541405706332 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 2.8754349338900487 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.0 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN 0.010438413361169102 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 1.5755045233124565 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN 6.858733472512178 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN 7.258872651356993 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN 7.710508002783577 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 8.281141266527488 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN 3.432150313152401 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.031315240083507306 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN 0.009046624913013222 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.708420320111343 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN 7.492693110647181 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN 9.529575504523313 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 9.541405706332638 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 8.754349338900488 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 3.7397355601948505 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN 0.21920668058455114 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.0006958942240779402 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.26374391092553934 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN 5.474599860821155 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 12.097425191370911 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN 11.8580375782881 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN 6.716771050800278 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN 2.0869867780097424 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.3862212943632568 ELSE "ADS"."Feature_63" END AS impter_65 
FROM digits AS "ADS") AS "ADS_imp_1_OUT") AS "T"

-- Code For temporary table TMP_20221018185929_FHI2AN2_ADS_imp_1_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185929_FHI2AN2_ADS_imp_1_OUT_KEY" ON "TMP_20221018185929_FHI2AN2_ADS_imp_1_OUT" ("KEY")

-- Code For temporary table TMP_20221018185929_TQ0QKZX_ADS_sca_2_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185929_TQ0QKZX_ADS_sca_2_OUT" (
	"KEY" BIGINT NOT NULL, 
	scaler_2 DOUBLE, 
	scaler_3 DOUBLE, 
	scaler_4 DOUBLE, 
	scaler_5 DOUBLE, 
	scaler_6 DOUBLE, 
	scaler_7 DOUBLE, 
	scaler_8 DOUBLE, 
	scaler_9 DOUBLE, 
	scaler_10 DOUBLE, 
	scaler_11 DOUBLE, 
	scaler_12 DOUBLE, 
	scaler_13 DOUBLE, 
	scaler_14 DOUBLE, 
	scaler_15 DOUBLE, 
	scaler_16 DOUBLE, 
	scaler_17 DOUBLE, 
	scaler_18 DOUBLE, 
	scaler_19 DOUBLE, 
	scaler_20 DOUBLE, 
	scaler_21 DOUBLE, 
	scaler_22 DOUBLE, 
	scaler_23 DOUBLE, 
	scaler_24 DOUBLE, 
	scaler_25 DOUBLE, 
	scaler_26 DOUBLE, 
	scaler_27 DOUBLE, 
	scaler_28 DOUBLE, 
	scaler_29 DOUBLE, 
	scaler_30 DOUBLE, 
	scaler_31 DOUBLE, 
	scaler_32 DOUBLE, 
	scaler_33 DOUBLE, 
	scaler_34 DOUBLE, 
	scaler_35 DOUBLE, 
	scaler_36 DOUBLE, 
	scaler_37 DOUBLE, 
	scaler_38 DOUBLE, 
	scaler_39 DOUBLE, 
	scaler_40 DOUBLE, 
	scaler_41 DOUBLE, 
	scaler_42 DOUBLE, 
	scaler_43 DOUBLE, 
	scaler_44 DOUBLE, 
	scaler_45 DOUBLE, 
	scaler_46 DOUBLE, 
	scaler_47 DOUBLE, 
	scaler_48 DOUBLE, 
	scaler_49 DOUBLE, 
	scaler_50 DOUBLE, 
	scaler_51 DOUBLE, 
	scaler_52 DOUBLE, 
	scaler_53 DOUBLE, 
	scaler_54 DOUBLE, 
	scaler_55 DOUBLE, 
	scaler_56 DOUBLE, 
	scaler_57 DOUBLE, 
	scaler_58 DOUBLE, 
	scaler_59 DOUBLE, 
	scaler_60 DOUBLE, 
	scaler_61 DOUBLE, 
	scaler_62 DOUBLE, 
	scaler_63 DOUBLE, 
	scaler_64 DOUBLE, 
	scaler_65 DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185929_TQ0QKZX_ADS_sca_2_OUT part 2. Populate

INSERT INTO "TMP_20221018185929_TQ0QKZX_ADS_sca_2_OUT" ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65) SELECT "T"."KEY", "T".scaler_2, "T".scaler_3, "T".scaler_4, "T".scaler_5, "T".scaler_6, "T".scaler_7, "T".scaler_8, "T".scaler_9, "T".scaler_10, "T".scaler_11, "T".scaler_12, "T".scaler_13, "T".scaler_14, "T".scaler_15, "T".scaler_16, "T".scaler_17, "T".scaler_18, "T".scaler_19, "T".scaler_20, "T".scaler_21, "T".scaler_22, "T".scaler_23, "T".scaler_24, "T".scaler_25, "T".scaler_26, "T".scaler_27, "T".scaler_28, "T".scaler_29, "T".scaler_30, "T".scaler_31, "T".scaler_32, "T".scaler_33, "T".scaler_34, "T".scaler_35, "T".scaler_36, "T".scaler_37, "T".scaler_38, "T".scaler_39, "T".scaler_40, "T".scaler_41, "T".scaler_42, "T".scaler_43, "T".scaler_44, "T".scaler_45, "T".scaler_46, "T".scaler_47, "T".scaler_48, "T".scaler_49, "T".scaler_50, "T".scaler_51, "T".scaler_52, "T".scaler_53, "T".scaler_54, "T".scaler_55, "T".scaler_56, "T".scaler_57, "T".scaler_58, "T".scaler_59, "T".scaler_60, "T".scaler_61, "T".scaler_62, "T".scaler_63, "T".scaler_64, "T".scaler_65 
FROM (SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", "ADS_sca_2_OUT".scaler_2 AS scaler_2, "ADS_sca_2_OUT".scaler_3 AS scaler_3, "ADS_sca_2_OUT".scaler_4 AS scaler_4, "ADS_sca_2_OUT".scaler_5 AS scaler_5, "ADS_sca_2_OUT".scaler_6 AS scaler_6, "ADS_sca_2_OUT".scaler_7 AS scaler_7, "ADS_sca_2_OUT".scaler_8 AS scaler_8, "ADS_sca_2_OUT".scaler_9 AS scaler_9, "ADS_sca_2_OUT".scaler_10 AS scaler_10, "ADS_sca_2_OUT".scaler_11 AS scaler_11, "ADS_sca_2_OUT".scaler_12 AS scaler_12, "ADS_sca_2_OUT".scaler_13 AS scaler_13, "ADS_sca_2_OUT".scaler_14 AS scaler_14, "ADS_sca_2_OUT".scaler_15 AS scaler_15, "ADS_sca_2_OUT".scaler_16 AS scaler_16, "ADS_sca_2_OUT".scaler_17 AS scaler_17, "ADS_sca_2_OUT".scaler_18 AS scaler_18, "ADS_sca_2_OUT".scaler_19 AS scaler_19, "ADS_sca_2_OUT".scaler_20 AS scaler_20, "ADS_sca_2_OUT".scaler_21 AS scaler_21, "ADS_sca_2_OUT".scaler_22 AS scaler_22, "ADS_sca_2_OUT".scaler_23 AS scaler_23, "ADS_sca_2_OUT".scaler_24 AS scaler_24, "ADS_sca_2_OUT".scaler_25 AS scaler_25, "ADS_sca_2_OUT".scaler_26 AS scaler_26, "ADS_sca_2_OUT".scaler_27 AS scaler_27, "ADS_sca_2_OUT".scaler_28 AS scaler_28, "ADS_sca_2_OUT".scaler_29 AS scaler_29, "ADS_sca_2_OUT".scaler_30 AS scaler_30, "ADS_sca_2_OUT".scaler_31 AS scaler_31, "ADS_sca_2_OUT".scaler_32 AS scaler_32, "ADS_sca_2_OUT".scaler_33 AS scaler_33, "ADS_sca_2_OUT".scaler_34 AS scaler_34, "ADS_sca_2_OUT".scaler_35 AS scaler_35, "ADS_sca_2_OUT".scaler_36 AS scaler_36, "ADS_sca_2_OUT".scaler_37 AS scaler_37, "ADS_sca_2_OUT".scaler_38 AS scaler_38, "ADS_sca_2_OUT".scaler_39 AS scaler_39, "ADS_sca_2_OUT".scaler_40 AS scaler_40, "ADS_sca_2_OUT".scaler_41 AS scaler_41, "ADS_sca_2_OUT".scaler_42 AS scaler_42, "ADS_sca_2_OUT".scaler_43 AS scaler_43, "ADS_sca_2_OUT".scaler_44 AS scaler_44, "ADS_sca_2_OUT".scaler_45 AS scaler_45, "ADS_sca_2_OUT".scaler_46 AS scaler_46, "ADS_sca_2_OUT".scaler_47 AS scaler_47, "ADS_sca_2_OUT".scaler_48 AS scaler_48, "ADS_sca_2_OUT".scaler_49 AS scaler_49, "ADS_sca_2_OUT".scaler_50 AS scaler_50, "ADS_sca_2_OUT".scaler_51 AS scaler_51, "ADS_sca_2_OUT".scaler_52 AS scaler_52, "ADS_sca_2_OUT".scaler_53 AS scaler_53, "ADS_sca_2_OUT".scaler_54 AS scaler_54, "ADS_sca_2_OUT".scaler_55 AS scaler_55, "ADS_sca_2_OUT".scaler_56 AS scaler_56, "ADS_sca_2_OUT".scaler_57 AS scaler_57, "ADS_sca_2_OUT".scaler_58 AS scaler_58, "ADS_sca_2_OUT".scaler_59 AS scaler_59, "ADS_sca_2_OUT".scaler_60 AS scaler_60, "ADS_sca_2_OUT".scaler_61 AS scaler_61, "ADS_sca_2_OUT".scaler_62 AS scaler_62, "ADS_sca_2_OUT".scaler_63 AS scaler_63, "ADS_sca_2_OUT".scaler_64 AS scaler_64, "ADS_sca_2_OUT".scaler_65 AS scaler_65 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS DOUBLE) - 0.0) / 1.0 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS DOUBLE) - 0.2950591510090466) / 0.886335971513945 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS DOUBLE) - 5.104384133611691) / 4.714562522364591 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS DOUBLE) - 11.791927627000696) / 4.242705177561994 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS DOUBLE) - 11.84829505915101) / 4.298607850485783 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS DOUBLE) - 5.823242867084203) / 5.664052593352563 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS DOUBLE) - 1.394572025052192) / 3.3672537498889787 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS DOUBLE) - 0.13430758524704245) / 1.0738488961060884 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS DOUBLE) - 0.0055671537926235215) / 0.09121259500521199 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS DOUBLE) - 1.977035490605428) / 3.1765759513448373 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS DOUBLE) - 10.362560890744607) / 5.427455768043861 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS DOUBLE) - 12.03061934585943) / 3.9240043126958595 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS DOUBLE) - 10.271398747390396) / 4.751306782008032 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS DOUBLE) - 8.121781489213639) / 6.055742470420089 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS DOUBLE) - 1.8921363952679193) / 3.6358496015605493 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS DOUBLE) - 0.11760612386917188) / 0.8809135848407257 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS DOUBLE) - 0.0020876826722338203) / 0.04564344699180706 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS DOUBLE) - 2.5427974947807934) / 3.535939148296097 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS DOUBLE) - 9.935281837160751) / 5.674233427535142 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS DOUBLE) - 7.099512874043145) / 5.828968622118506 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS DOUBLE) - 7.132915796798887) / 6.164166380758013 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS DOUBLE) - 7.81419624217119) / 6.237214641441282 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS DOUBLE) - 1.8434237995824634) / 3.3552968495259408 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS DOUBLE) - 0.05775922059846903) / 0.47057168084472595 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS DOUBLE) - 0.0006958942240779402) / 0.0263706267522565 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS DOUBLE) - 2.4808629088378567) / 3.1579531140532993 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS DOUBLE) - 9.143354210160055) / 6.211448620771221 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS DOUBLE) - 8.960334029227557) / 5.872499336895779 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS DOUBLE) - 10.03688239387613) / 6.131194138822921 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS DOUBLE) - 7.5949895615866385) / 5.883009512311774 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS DOUBLE) - 2.337508698677801) / 3.7555163121005397 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS DOUBLE) - 0.0027835768963117608) / 0.05268613286220741 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS DOUBLE) - 0.0) / 1.0 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS DOUBLE) - 2.3319415448851775) / 3.520361676701363 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS DOUBLE) - 7.608907446068198) / 6.337427127154217 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS DOUBLE) - 9.028531663187195) / 6.255398792908601 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS DOUBLE) - 10.270006958942242) / 5.918328236602452 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS DOUBLE) - 8.806541405706332) / 5.862505948752236 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS DOUBLE) - 2.8754349338900487) / 3.521551388880749 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS DOUBLE) - 0.0) / 1.0 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS DOUBLE) - 0.010438413361169102) / 0.16012222149778146 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS DOUBLE) - 1.5755045233124565) / 3.0148158575591246 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS DOUBLE) - 6.858733472512178) / 6.5422093407655435 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS DOUBLE) - 7.258872651356993) / 6.490917554434448 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS DOUBLE) - 7.710508002783577) / 6.292873620677289 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS DOUBLE) - 8.281141266527488) / 5.713309549149251 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS DOUBLE) - 3.432150313152401) / 4.326500259143386 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS DOUBLE) - 0.031315240083507306) / 0.33325414598330405 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS DOUBLE) - 0.009046624913013222) / 0.22827664222063312 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS DOUBLE) - 0.708420320111343) / 1.7630768232183456 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS DOUBLE) - 7.492693110647181) / 5.6747357473393345 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS DOUBLE) - 9.529575504523313) / 5.230790022511772 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS DOUBLE) - 9.541405706332638) / 5.2515555146947035 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS DOUBLE) - 8.754349338900488) / 6.0343648977583975 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS DOUBLE) - 3.7397355601948505) / 4.953834269857758 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS DOUBLE) - 0.21920668058455114) / 1.0257471420649142 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS DOUBLE) - 0.0006958942240779402) / 0.02637062675225659 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS DOUBLE) - 0.26374391092553934) / 0.893431165157604 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS DOUBLE) - 5.474599860821155) / 5.06659361292149 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS DOUBLE) - 12.097425191370911) / 4.359965306758356 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS DOUBLE) - 11.8580375782881) / 4.889242282258171 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS DOUBLE) - 6.716771050800278) / 5.87255780345831 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS DOUBLE) - 2.0869867780097424) / 4.12826085471658 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS DOUBLE) - 0.3862212943632568) / 1.915153500596726 AS scaler_65 
FROM "TMP_20221018185929_FHI2AN2_ADS_imp_1_OUT" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "T"

-- Code For temporary table TMP_20221018185929_TQ0QKZX_ADS_sca_2_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185929_TQ0QKZX_ADS_sca_2_OUT_KEY" ON "TMP_20221018185929_TQ0QKZX_ADS_sca_2_OUT" ("KEY")

-- Code For temporary table TMP_20221018185929_YQKUSE1_CalProb_B0 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185929_YQKUSE1_CalProb_B0" (
	"KEY" BIGINT, 
	"Proba_0" DOUBLE, 
	"Proba_1" DOUBLE, 
	"Proba_2" DOUBLE, 
	"Proba_3" DOUBLE, 
	"Proba_4" DOUBLE, 
	"Proba_5" DOUBLE, 
	"Proba_6" DOUBLE, 
	"Proba_7" DOUBLE, 
	"Proba_8" DOUBLE, 
	"Proba_9" DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185929_YQKUSE1_CalProb_B0 part 2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508051753044128) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.2292682528495789) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -1.172670304775238) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.7374149858951569) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= 1.3017364144325256) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= 1.3112090826034546) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -0.8798106759786606) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.2702815104275942) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.5867252796888351) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -0.20768722891807556) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -0.5768668055534363) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= -0.23632274568080902) THEN 22 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= 0.3216940313577652) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -1.172670304775238) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.250873439013958) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.5867252945899963) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.4649772346019745) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.9766302406787872) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= -0.653985470533371) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= -0.13702521286904812) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.32203370332717896) THEN 40 ELSE 41 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 0.8999241292476654) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -0.8913523256778717) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= -0.7050202339887619) THEN 45 ELSE 46 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.8872201144695282) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -0.023079030215740204) THEN 51 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.8881187438964844) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM "TMP_20221018185929_TQ0QKZX_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."P_4" AS "P_4", "Values"."P_5" AS "P_5", "Values"."P_6" AS "P_6", "Values"."P_7" AS "P_7", "Values"."P_8" AS "P_8", "Values"."P_9" AS "P_9", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 0.3333333333333333 AS "P_0", 0.0 AS "P_1", 0.3333333333333333 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.3333333333333333 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 0 AS "D", 0.3333333333333333 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 1.0 AS "P_9", 9 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.3333333333333333 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.6666666666666666 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 6 AS "D", 0.6666666666666666 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 1.0 AS "P_8", 0.0 AS "P_9", 8 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 1.0 AS "P_9", 9 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 1.0 AS "P_8", 0.0 AS "P_9", 8 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.6774193548387096 AS "P_1", 0.06451612903225806 AS "P_2", 0.03225806451612903 AS "P_3", 0.16129032258064516 AS "P_4", 0.0 AS "P_5", 0.06451612903225806 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 1 AS "D", 0.6774193548387096 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.02631578947368421 AS "P_1", 0.5789473684210527 AS "P_2", 0.18421052631578946 AS "P_3", 0.0 AS "P_4", 0.02631578947368421 AS "P_5", 0.0 AS "P_6", 0.07894736842105263 AS "P_7", 0.07894736842105263 AS "P_8", 0.02631578947368421 AS "P_9", 2 AS "D", 0.5789473684210527 AS "DP" UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.6666666666666666 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.3333333333333333 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 0.6666666666666666 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.011111111111111112 AS "P_3", 0.0 AS "P_4", 0.9888888888888889 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 0.9888888888888889 AS "DP" UNION ALL SELECT 37 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 1.0 AS "DP" UNION ALL SELECT 38 AS nid, 0.0 AS "P_0", 0.7 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.1 AS "P_5", 0.2 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 1 AS "D", 0.7 AS "DP" UNION ALL SELECT 40 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.01020408163265306 AS "P_5", 0.9897959183673469 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 6 AS "D", 0.9897959183673469 AS "DP" UNION ALL SELECT 41 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 45 AS nid, 0.0 AS "P_0", 0.018691588785046728 AS "P_1", 0.0 AS "P_2", 0.018691588785046728 AS "P_3", 0.04672897196261682 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.794392523364486 AS "P_7", 0.037383177570093455 AS "P_8", 0.08411214953271028 AS "P_9", 7 AS "D", 0.794392523364486 AS "DP" UNION ALL SELECT 46 AS nid, 0.0 AS "P_0", 0.1875 AS "P_1", 0.25 AS "P_2", 0.25 AS "P_3", 0.0 AS "P_4", 0.0625 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.125 AS "P_8", 0.125 AS "P_9", 2 AS "D", 0.25 AS "DP" UNION ALL SELECT 48 AS nid, 0.0 AS "P_0", 0.05917159763313609 AS "P_1", 0.011834319526627219 AS "P_2", 0.4970414201183432 AS "P_3", 0.011834319526627219 AS "P_4", 0.023668639053254437 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0650887573964497 AS "P_8", 0.33136094674556216 AS "P_9", 3 AS "D", 0.4970414201183432 AS "DP" UNION ALL SELECT 49 AS nid, 0.01195219123505976 AS "P_0", 0.24701195219123506 AS "P_1", 0.2868525896414343 AS "P_2", 0.0398406374501992 AS "P_3", 0.035856573705179286 AS "P_4", 0.0 AS "P_5", 0.00398406374501992 AS "P_6", 0.03187250996015936 AS "P_7", 0.3147410358565737 AS "P_8", 0.027888446215139442 AS "P_9", 8 AS "D", 0.3147410358565737 AS "DP" UNION ALL SELECT 51 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 1.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 7 AS "D", 1.0 AS "DP" UNION ALL SELECT 53 AS nid, 0.0 AS "P_0", 0.014084507042253521 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.971830985915493 AS "P_4", 0.0 AS "P_5", 0.014084507042253521 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 0.971830985915493 AS "DP" UNION ALL SELECT 54 AS nid, 0.125 AS "P_0", 0.375 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.125 AS "P_4", 0.0 AS "P_5", 0.125 AS "P_6", 0.25 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 1 AS "D", 0.375 AS "DP") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."P_0" AS "P_0", "DT_node_data"."P_1" AS "P_1", "DT_node_data"."P_2" AS "P_2", "DT_node_data"."P_3" AS "P_3", "DT_node_data"."P_4" AS "P_4", "DT_node_data"."P_5" AS "P_5", "DT_node_data"."P_6" AS "P_6", "DT_node_data"."P_7" AS "P_7", "DT_node_data"."P_8" AS "P_8", "DT_node_data"."P_9" AS "P_9", "DT_node_data"."D" AS "D", "DT_node_data"."DP" AS "DP" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"Calibrated_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", CAST(NULL AS DOUBLE) AS "Score_1", CAST(NULL AS DOUBLE) AS "Score_2", CAST(NULL AS DOUBLE) AS "Score_3", CAST(NULL AS DOUBLE) AS "Score_4", CAST(NULL AS DOUBLE) AS "Score_5", CAST(NULL AS DOUBLE) AS "Score_6", CAST(NULL AS DOUBLE) AS "Score_7", CAST(NULL AS DOUBLE) AS "Score_8", CAST(NULL AS DOUBLE) AS "Score_9", "DT_Output"."P_0" AS "Proba_0", "DT_Output"."P_1" AS "Proba_1", "DT_Output"."P_2" AS "Proba_2", "DT_Output"."P_3" AS "Proba_3", "DT_Output"."P_4" AS "Proba_4", "DT_Output"."P_5" AS "Proba_5", "DT_Output"."P_6" AS "Proba_6", "DT_Output"."P_7" AS "Proba_7", "DT_Output"."P_8" AS "Proba_8", "DT_Output"."P_9" AS "Proba_9", CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3", CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE '-Infinity'::float8 END AS "LogProba_4", CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE '-Infinity'::float8 END AS "LogProba_5", CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE '-Infinity'::float8 END AS "LogProba_6", CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE '-Infinity'::float8 END AS "LogProba_7", CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE '-Infinity'::float8 END AS "LogProba_8", CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE '-Infinity'::float8 END AS "LogProba_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS DOUBLE) AS "DecisionProba", coalesce(CAST(NULL AS DOUBLE), "DT_Output"."P_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS DOUBLE), "DT_Output"."P_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS DOUBLE), "DT_Output"."P_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS DOUBLE), "DT_Output"."P_3") AS "ScoreOrProba_3", coalesce(CAST(NULL AS DOUBLE), "DT_Output"."P_4") AS "ScoreOrProba_4", coalesce(CAST(NULL AS DOUBLE), "DT_Output"."P_5") AS "ScoreOrProba_5", coalesce(CAST(NULL AS DOUBLE), "DT_Output"."P_6") AS "ScoreOrProba_6", coalesce(CAST(NULL AS DOUBLE), "DT_Output"."P_7") AS "ScoreOrProba_7", coalesce(CAST(NULL AS DOUBLE), "DT_Output"."P_8") AS "ScoreOrProba_8", coalesce(CAST(NULL AS DOUBLE), "DT_Output"."P_9") AS "ScoreOrProba_9" 
FROM "DT_Output"), 
sigmoid_calibration_0 AS 
(SELECT "Calibrated_Model_0"."KEY" AS "KEY", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(8.726464942532786 * "Calibrated_Model_0"."ScoreOrProba_0" + -5.872720111411945))))) AS "Proba_0", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(7.045841080503326 * "Calibrated_Model_0"."ScoreOrProba_1" + -3.2655086553383144))))) AS "Proba_1", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(11.075844650366205 * "Calibrated_Model_0"."ScoreOrProba_2" + -4.138530875996826))))) AS "Proba_2", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(8.381843175730353 * "Calibrated_Model_0"."ScoreOrProba_3" + -4.082860045335469))))) AS "Proba_3", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(5.169852539633868 * "Calibrated_Model_0"."ScoreOrProba_4" + -3.5352887545441365))))) AS "Proba_4", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(7.687769649261836 * "Calibrated_Model_0"."ScoreOrProba_5" + -4.058330409906762))))) AS "Proba_5", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(8.443665150590007 * "Calibrated_Model_0"."ScoreOrProba_6" + -4.376549641944667))))) AS "Proba_6", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(7.596200342996632 * "Calibrated_Model_0"."ScoreOrProba_7" + -4.8536079641492))))) AS "Proba_7", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(9.516976847918329 * "Calibrated_Model_0"."ScoreOrProba_8" + -3.794360387476349))))) AS "Proba_8", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(6.756594781623264 * "Calibrated_Model_0"."ScoreOrProba_9" + -3.587761113099591))))) AS "Proba_9" 
FROM "Calibrated_Model_0"), 
"Normalized_Probas" AS 
(SELECT sigmoid_calibration_0."KEY" AS "KEY", sigmoid_calibration_0."Proba_0" / (sigmoid_calibration_0."Proba_0" + sigmoid_calibration_0."Proba_1" + sigmoid_calibration_0."Proba_2" + sigmoid_calibration_0."Proba_3" + sigmoid_calibration_0."Proba_4" + sigmoid_calibration_0."Proba_5" + sigmoid_calibration_0."Proba_6" + sigmoid_calibration_0."Proba_7" + sigmoid_calibration_0."Proba_8" + sigmoid_calibration_0."Proba_9") AS "Proba_0", sigmoid_calibration_0."Proba_1" / (sigmoid_calibration_0."Proba_0" + sigmoid_calibration_0."Proba_1" + sigmoid_calibration_0."Proba_2" + sigmoid_calibration_0."Proba_3" + sigmoid_calibration_0."Proba_4" + sigmoid_calibration_0."Proba_5" + sigmoid_calibration_0."Proba_6" + sigmoid_calibration_0."Proba_7" + sigmoid_calibration_0."Proba_8" + sigmoid_calibration_0."Proba_9") AS "Proba_1", sigmoid_calibration_0."Proba_2" / (sigmoid_calibration_0."Proba_0" + sigmoid_calibration_0."Proba_1" + sigmoid_calibration_0."Proba_2" + sigmoid_calibration_0."Proba_3" + sigmoid_calibration_0."Proba_4" + sigmoid_calibration_0."Proba_5" + sigmoid_calibration_0."Proba_6" + sigmoid_calibration_0."Proba_7" + sigmoid_calibration_0."Proba_8" + sigmoid_calibration_0."Proba_9") AS "Proba_2", sigmoid_calibration_0."Proba_3" / (sigmoid_calibration_0."Proba_0" + sigmoid_calibration_0."Proba_1" + sigmoid_calibration_0."Proba_2" + sigmoid_calibration_0."Proba_3" + sigmoid_calibration_0."Proba_4" + sigmoid_calibration_0."Proba_5" + sigmoid_calibration_0."Proba_6" + sigmoid_calibration_0."Proba_7" + sigmoid_calibration_0."Proba_8" + sigmoid_calibration_0."Proba_9") AS "Proba_3", sigmoid_calibration_0."Proba_4" / (sigmoid_calibration_0."Proba_0" + sigmoid_calibration_0."Proba_1" + sigmoid_calibration_0."Proba_2" + sigmoid_calibration_0."Proba_3" + sigmoid_calibration_0."Proba_4" + sigmoid_calibration_0."Proba_5" + sigmoid_calibration_0."Proba_6" + sigmoid_calibration_0."Proba_7" + sigmoid_calibration_0."Proba_8" + sigmoid_calibration_0."Proba_9") AS "Proba_4", sigmoid_calibration_0."Proba_5" / (sigmoid_calibration_0."Proba_0" + sigmoid_calibration_0."Proba_1" + sigmoid_calibration_0."Proba_2" + sigmoid_calibration_0."Proba_3" + sigmoid_calibration_0."Proba_4" + sigmoid_calibration_0."Proba_5" + sigmoid_calibration_0."Proba_6" + sigmoid_calibration_0."Proba_7" + sigmoid_calibration_0."Proba_8" + sigmoid_calibration_0."Proba_9") AS "Proba_5", sigmoid_calibration_0."Proba_6" / (sigmoid_calibration_0."Proba_0" + sigmoid_calibration_0."Proba_1" + sigmoid_calibration_0."Proba_2" + sigmoid_calibration_0."Proba_3" + sigmoid_calibration_0."Proba_4" + sigmoid_calibration_0."Proba_5" + sigmoid_calibration_0."Proba_6" + sigmoid_calibration_0."Proba_7" + sigmoid_calibration_0."Proba_8" + sigmoid_calibration_0."Proba_9") AS "Proba_6", sigmoid_calibration_0."Proba_7" / (sigmoid_calibration_0."Proba_0" + sigmoid_calibration_0."Proba_1" + sigmoid_calibration_0."Proba_2" + sigmoid_calibration_0."Proba_3" + sigmoid_calibration_0."Proba_4" + sigmoid_calibration_0."Proba_5" + sigmoid_calibration_0."Proba_6" + sigmoid_calibration_0."Proba_7" + sigmoid_calibration_0."Proba_8" + sigmoid_calibration_0."Proba_9") AS "Proba_7", sigmoid_calibration_0."Proba_8" / (sigmoid_calibration_0."Proba_0" + sigmoid_calibration_0."Proba_1" + sigmoid_calibration_0."Proba_2" + sigmoid_calibration_0."Proba_3" + sigmoid_calibration_0."Proba_4" + sigmoid_calibration_0."Proba_5" + sigmoid_calibration_0."Proba_6" + sigmoid_calibration_0."Proba_7" + sigmoid_calibration_0."Proba_8" + sigmoid_calibration_0."Proba_9") AS "Proba_8", sigmoid_calibration_0."Proba_9" / (sigmoid_calibration_0."Proba_0" + sigmoid_calibration_0."Proba_1" + sigmoid_calibration_0."Proba_2" + sigmoid_calibration_0."Proba_3" + sigmoid_calibration_0."Proba_4" + sigmoid_calibration_0."Proba_5" + sigmoid_calibration_0."Proba_6" + sigmoid_calibration_0."Proba_7" + sigmoid_calibration_0."Proba_8" + sigmoid_calibration_0."Proba_9") AS "Proba_9" 
FROM sigmoid_calibration_0), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508051753044128) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -0.1312604621052742) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -0.13053843192756176) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.6427378356456757) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -1.0934714376926422) THEN 7 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 2.3682621121406555) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -1.0934714078903198) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= -0.25025779008865356) THEN 13 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 1.9433573782444) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= -1.3316048383712769) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.2292682528495789) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -1.1500303447246552) THEN 22 ELSE 23 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -1.172670304775238) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.250873439013958) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.6750012934207916) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= 0.9264910221099854) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -0.9578883051872253) THEN 31 ELSE 32 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= 0.05253797024488449) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= -1.1869024634361267) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= 0.6958126723766327) THEN 38 ELSE 39 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 0.3318006992340088) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -1.3004136681556702) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 0.5403966009616852) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.8872201144695282) THEN 46 ELSE 47 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.2275886908173561) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.022140786051750183) THEN 50 ELSE 51 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.703299880027771) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM "TMP_20221018185929_TQ0QKZX_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."P_4" AS "P_4", "Values"."P_5" AS "P_5", "Values"."P_6" AS "P_6", "Values"."P_7" AS "P_7", "Values"."P_8" AS "P_8", "Values"."P_9" AS "P_9", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 5 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 1.0 AS "P_9", 9 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 1.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 6 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 1.0 AS "P_8", 0.0 AS "P_9", 8 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.5641025641025641 AS "P_2", 0.20512820512820512 AS "P_3", 0.0 AS "P_4", 0.05128205128205128 AS "P_5", 0.0 AS "P_6", 0.10256410256410256 AS "P_7", 0.05128205128205128 AS "P_8", 0.02564102564102564 AS "P_9", 2 AS "D", 0.5641025641025641 AS "DP" UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.7142857142857143 AS "P_1", 0.07142857142857142 AS "P_2", 0.07142857142857142 AS "P_3", 0.07142857142857142 AS "P_4", 0.0 AS "P_5", 0.07142857142857142 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 1 AS "D", 0.7142857142857143 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.3333333333333333 AS "P_3", 0.3333333333333333 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.3333333333333333 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 3 AS "D", 0.3333333333333333 AS "DP" UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.011627906976744186 AS "P_4", 0.9883720930232558 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 0.9883720930232558 AS "DP" UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 0.7777777777777778 AS "P_1", 0.2222222222222222 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 1 AS "D", 0.7777777777777778 AS "DP" UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.5882352941176471 AS "P_4", 0.11764705882352941 AS "P_5", 0.29411764705882354 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 0.5882352941176471 AS "DP" UNION ALL SELECT 38 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 1.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 6 AS "D", 1.0 AS "DP" UNION ALL SELECT 39 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 43 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.013333333333333334 AS "P_2", 0.05333333333333334 AS "P_3", 0.013333333333333334 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.88 AS "P_7", 0.04 AS "P_8", 0.0 AS "P_9", 7 AS "D", 0.88 AS "DP" UNION ALL SELECT 44 AS nid, 0.0 AS "P_0", 0.05263157894736842 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.15789473684210525 AS "P_4", 0.05263157894736842 AS "P_5", 0.0 AS "P_6", 0.2631578947368421 AS "P_7", 0.0 AS "P_8", 0.47368421052631576 AS "P_9", 9 AS "D", 0.47368421052631576 AS "DP" UNION ALL SELECT 46 AS nid, 0.0 AS "P_0", 0.07017543859649122 AS "P_1", 0.023391812865497075 AS "P_2", 0.4853801169590643 AS "P_3", 0.0 AS "P_4", 0.017543859649122806 AS "P_5", 0.0 AS "P_6", 0.011695906432748537 AS "P_7", 0.06432748538011696 AS "P_8", 0.32748538011695905 AS "P_9", 3 AS "D", 0.4853801169590643 AS "DP" UNION ALL SELECT 47 AS nid, 0.008333333333333333 AS "P_0", 0.23333333333333334 AS "P_1", 0.30416666666666664 AS "P_2", 0.041666666666666664 AS "P_3", 0.0125 AS "P_4", 0.0 AS "P_5", 0.004166666666666667 AS "P_6", 0.05 AS "P_7", 0.3333333333333333 AS "P_8", 0.0125 AS "P_9", 8 AS "D", 0.3333333333333333 AS "DP" UNION ALL SELECT 50 AS nid, 0.0 AS "P_0", 0.03571428571428571 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.9642857142857143 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 0.9642857142857143 AS "DP" UNION ALL SELECT 51 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.25 AS "P_5", 0.25 AS "P_6", 0.5 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 7 AS "D", 0.5 AS "DP" UNION ALL SELECT 53 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 1.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 7 AS "D", 1.0 AS "DP" UNION ALL SELECT 54 AS nid, 0.0 AS "P_0", 0.5238095238095238 AS "P_1", 0.047619047619047616 AS "P_2", 0.0 AS "P_3", 0.23809523809523808 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.047619047619047616 AS "P_7", 0.14285714285714285 AS "P_8", 0.0 AS "P_9", 1 AS "D", 0.5238095238095238 AS "DP") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."P_0" AS "P_0", "DT_node_data_1"."P_1" AS "P_1", "DT_node_data_1"."P_2" AS "P_2", "DT_node_data_1"."P_3" AS "P_3", "DT_node_data_1"."P_4" AS "P_4", "DT_node_data_1"."P_5" AS "P_5", "DT_node_data_1"."P_6" AS "P_6", "DT_node_data_1"."P_7" AS "P_7", "DT_node_data_1"."P_8" AS "P_8", "DT_node_data_1"."P_9" AS "P_9", "DT_node_data_1"."D" AS "D", "DT_node_data_1"."DP" AS "DP" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"Calibrated_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", CAST(NULL AS DOUBLE) AS "Score_1", CAST(NULL AS DOUBLE) AS "Score_2", CAST(NULL AS DOUBLE) AS "Score_3", CAST(NULL AS DOUBLE) AS "Score_4", CAST(NULL AS DOUBLE) AS "Score_5", CAST(NULL AS DOUBLE) AS "Score_6", CAST(NULL AS DOUBLE) AS "Score_7", CAST(NULL AS DOUBLE) AS "Score_8", CAST(NULL AS DOUBLE) AS "Score_9", "DT_Output_1"."P_0" AS "Proba_0", "DT_Output_1"."P_1" AS "Proba_1", "DT_Output_1"."P_2" AS "Proba_2", "DT_Output_1"."P_3" AS "Proba_3", "DT_Output_1"."P_4" AS "Proba_4", "DT_Output_1"."P_5" AS "Proba_5", "DT_Output_1"."P_6" AS "Proba_6", "DT_Output_1"."P_7" AS "Proba_7", "DT_Output_1"."P_8" AS "Proba_8", "DT_Output_1"."P_9" AS "Proba_9", CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3", CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE '-Infinity'::float8 END AS "LogProba_4", CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE '-Infinity'::float8 END AS "LogProba_5", CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE '-Infinity'::float8 END AS "LogProba_6", CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE '-Infinity'::float8 END AS "LogProba_7", CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE '-Infinity'::float8 END AS "LogProba_8", CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE '-Infinity'::float8 END AS "LogProba_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS DOUBLE) AS "DecisionProba", coalesce(CAST(NULL AS DOUBLE), "DT_Output_1"."P_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS DOUBLE), "DT_Output_1"."P_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS DOUBLE), "DT_Output_1"."P_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS DOUBLE), "DT_Output_1"."P_3") AS "ScoreOrProba_3", coalesce(CAST(NULL AS DOUBLE), "DT_Output_1"."P_4") AS "ScoreOrProba_4", coalesce(CAST(NULL AS DOUBLE), "DT_Output_1"."P_5") AS "ScoreOrProba_5", coalesce(CAST(NULL AS DOUBLE), "DT_Output_1"."P_6") AS "ScoreOrProba_6", coalesce(CAST(NULL AS DOUBLE), "DT_Output_1"."P_7") AS "ScoreOrProba_7", coalesce(CAST(NULL AS DOUBLE), "DT_Output_1"."P_8") AS "ScoreOrProba_8", coalesce(CAST(NULL AS DOUBLE), "DT_Output_1"."P_9") AS "ScoreOrProba_9" 
FROM "DT_Output_1"), 
sigmoid_calibration_1 AS 
(SELECT "Calibrated_Model_1"."KEY" AS "KEY", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(6.808562685099225 * "Calibrated_Model_1"."ScoreOrProba_0" + -4.423086165823934))))) AS "Proba_0", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(6.6943310895944395 * "Calibrated_Model_1"."ScoreOrProba_1" + -3.364745233834426))))) AS "Proba_1", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(9.870166456787338 * "Calibrated_Model_1"."ScoreOrProba_2" + -4.040708116572025))))) AS "Proba_2", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(8.165048199313569 * "Calibrated_Model_1"."ScoreOrProba_3" + -3.996833860780918))))) AS "Proba_3", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(7.126182874045823 * "Calibrated_Model_1"."ScoreOrProba_4" + -3.786303948595995))))) AS "Proba_4", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(7.263082572001232 * "Calibrated_Model_1"."ScoreOrProba_5" + -4.767757480418992))))) AS "Proba_5", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(8.83536951615796 * "Calibrated_Model_1"."ScoreOrProba_6" + -4.451501723262366))))) AS "Proba_6", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(6.262147485601796 * "Calibrated_Model_1"."ScoreOrProba_7" + -3.9600297020984363))))) AS "Proba_7", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(8.488601358351431 * "Calibrated_Model_1"."ScoreOrProba_8" + -3.799451304148689))))) AS "Proba_8", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(7.4069932327798975 * "Calibrated_Model_1"."ScoreOrProba_9" + -3.2468185877276947))))) AS "Proba_9" 
FROM "Calibrated_Model_1"), 
"Normalized_Probas_1" AS 
(SELECT sigmoid_calibration_1."KEY" AS "KEY", sigmoid_calibration_1."Proba_0" / (sigmoid_calibration_1."Proba_0" + sigmoid_calibration_1."Proba_1" + sigmoid_calibration_1."Proba_2" + sigmoid_calibration_1."Proba_3" + sigmoid_calibration_1."Proba_4" + sigmoid_calibration_1."Proba_5" + sigmoid_calibration_1."Proba_6" + sigmoid_calibration_1."Proba_7" + sigmoid_calibration_1."Proba_8" + sigmoid_calibration_1."Proba_9") AS "Proba_0", sigmoid_calibration_1."Proba_1" / (sigmoid_calibration_1."Proba_0" + sigmoid_calibration_1."Proba_1" + sigmoid_calibration_1."Proba_2" + sigmoid_calibration_1."Proba_3" + sigmoid_calibration_1."Proba_4" + sigmoid_calibration_1."Proba_5" + sigmoid_calibration_1."Proba_6" + sigmoid_calibration_1."Proba_7" + sigmoid_calibration_1."Proba_8" + sigmoid_calibration_1."Proba_9") AS "Proba_1", sigmoid_calibration_1."Proba_2" / (sigmoid_calibration_1."Proba_0" + sigmoid_calibration_1."Proba_1" + sigmoid_calibration_1."Proba_2" + sigmoid_calibration_1."Proba_3" + sigmoid_calibration_1."Proba_4" + sigmoid_calibration_1."Proba_5" + sigmoid_calibration_1."Proba_6" + sigmoid_calibration_1."Proba_7" + sigmoid_calibration_1."Proba_8" + sigmoid_calibration_1."Proba_9") AS "Proba_2", sigmoid_calibration_1."Proba_3" / (sigmoid_calibration_1."Proba_0" + sigmoid_calibration_1."Proba_1" + sigmoid_calibration_1."Proba_2" + sigmoid_calibration_1."Proba_3" + sigmoid_calibration_1."Proba_4" + sigmoid_calibration_1."Proba_5" + sigmoid_calibration_1."Proba_6" + sigmoid_calibration_1."Proba_7" + sigmoid_calibration_1."Proba_8" + sigmoid_calibration_1."Proba_9") AS "Proba_3", sigmoid_calibration_1."Proba_4" / (sigmoid_calibration_1."Proba_0" + sigmoid_calibration_1."Proba_1" + sigmoid_calibration_1."Proba_2" + sigmoid_calibration_1."Proba_3" + sigmoid_calibration_1."Proba_4" + sigmoid_calibration_1."Proba_5" + sigmoid_calibration_1."Proba_6" + sigmoid_calibration_1."Proba_7" + sigmoid_calibration_1."Proba_8" + sigmoid_calibration_1."Proba_9") AS "Proba_4", sigmoid_calibration_1."Proba_5" / (sigmoid_calibration_1."Proba_0" + sigmoid_calibration_1."Proba_1" + sigmoid_calibration_1."Proba_2" + sigmoid_calibration_1."Proba_3" + sigmoid_calibration_1."Proba_4" + sigmoid_calibration_1."Proba_5" + sigmoid_calibration_1."Proba_6" + sigmoid_calibration_1."Proba_7" + sigmoid_calibration_1."Proba_8" + sigmoid_calibration_1."Proba_9") AS "Proba_5", sigmoid_calibration_1."Proba_6" / (sigmoid_calibration_1."Proba_0" + sigmoid_calibration_1."Proba_1" + sigmoid_calibration_1."Proba_2" + sigmoid_calibration_1."Proba_3" + sigmoid_calibration_1."Proba_4" + sigmoid_calibration_1."Proba_5" + sigmoid_calibration_1."Proba_6" + sigmoid_calibration_1."Proba_7" + sigmoid_calibration_1."Proba_8" + sigmoid_calibration_1."Proba_9") AS "Proba_6", sigmoid_calibration_1."Proba_7" / (sigmoid_calibration_1."Proba_0" + sigmoid_calibration_1."Proba_1" + sigmoid_calibration_1."Proba_2" + sigmoid_calibration_1."Proba_3" + sigmoid_calibration_1."Proba_4" + sigmoid_calibration_1."Proba_5" + sigmoid_calibration_1."Proba_6" + sigmoid_calibration_1."Proba_7" + sigmoid_calibration_1."Proba_8" + sigmoid_calibration_1."Proba_9") AS "Proba_7", sigmoid_calibration_1."Proba_8" / (sigmoid_calibration_1."Proba_0" + sigmoid_calibration_1."Proba_1" + sigmoid_calibration_1."Proba_2" + sigmoid_calibration_1."Proba_3" + sigmoid_calibration_1."Proba_4" + sigmoid_calibration_1."Proba_5" + sigmoid_calibration_1."Proba_6" + sigmoid_calibration_1."Proba_7" + sigmoid_calibration_1."Proba_8" + sigmoid_calibration_1."Proba_9") AS "Proba_8", sigmoid_calibration_1."Proba_9" / (sigmoid_calibration_1."Proba_0" + sigmoid_calibration_1."Proba_1" + sigmoid_calibration_1."Proba_2" + sigmoid_calibration_1."Proba_3" + sigmoid_calibration_1."Proba_4" + sigmoid_calibration_1."Proba_5" + sigmoid_calibration_1."Proba_6" + sigmoid_calibration_1."Proba_7" + sigmoid_calibration_1."Proba_8" + sigmoid_calibration_1."Proba_9") AS "Proba_9" 
FROM sigmoid_calibration_1), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -1.172670304775238) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.4037269949913025) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.5867252945899963) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.32203370332717896) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= -0.13757621496915817) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= -0.2935141250491142) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -0.9578883051872253) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -0.10113698244094849) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= -0.653985470533371) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= -0.6493027955293655) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -0.49531662091612816) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 1.443623125553131) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= 0.6958126723766327) THEN 24 ELSE 25 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -1.5554689764976501) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.1439052820205688) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= 0.3422780856490135) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= -1.742542564868927) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.8937523066997528) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -1.0801673829555511) THEN 36 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.2656681351363659) THEN 38 ELSE 39 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.7331587076187134) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -1.3915199041366577) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= 0.5833771526813507) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.27028150111436844) THEN 46 ELSE 47 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -0.8913523256778717) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 0.3227207735180855) THEN 50 ELSE 51 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= -0.23632274195551872) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM "TMP_20221018185929_TQ0QKZX_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."P_4" AS "P_4", "Values"."P_5" AS "P_5", "Values"."P_6" AS "P_6", "Values"."P_7" AS "P_7", "Values"."P_8" AS "P_8", "Values"."P_9" AS "P_9", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 0.0 AS "P_0", 0.8636363636363636 AS "P_1", 0.09090909090909091 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.045454545454545456 AS "P_8", 0.0 AS "P_9", 1 AS "D", 0.8636363636363636 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.1 AS "P_3", 0.4 AS "P_4", 0.2 AS "P_5", 0.2 AS "P_6", 0.1 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 0.4 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.16666666666666666 AS "P_2", 0.3333333333333333 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.3333333333333333 AS "P_8", 0.16666666666666666 AS "P_9", 3 AS "D", 0.3333333333333333 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 1.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 7 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.2 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.2 AS "P_5", 0.6 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 6 AS "D", 0.6 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 1.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 6 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 1.0 AS "DP" UNION ALL SELECT 38 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.3333333333333333 AS "P_2", 0.3333333333333333 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.3333333333333333 AS "P_9", 2 AS "D", 0.3333333333333333 AS "DP" UNION ALL SELECT 39 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 1.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 7 AS "D", 1.0 AS "DP" UNION ALL SELECT 43 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.013888888888888888 AS "P_2", 0.9861111111111112 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 3 AS "D", 0.9861111111111112 AS "DP" UNION ALL SELECT 44 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.25 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.75 AS "P_9", 9 AS "D", 0.75 AS "DP" UNION ALL SELECT 46 AS nid, 0.0 AS "P_0", 0.044444444444444446 AS "P_1", 0.0 AS "P_2", 0.35555555555555557 AS "P_3", 0.13333333333333333 AS "P_4", 0.24444444444444444 AS "P_5", 0.022222222222222223 AS "P_6", 0.044444444444444446 AS "P_7", 0.06666666666666667 AS "P_8", 0.08888888888888889 AS "P_9", 3 AS "D", 0.35555555555555557 AS "DP" UNION ALL SELECT 47 AS nid, 0.03731343283582089 AS "P_0", 0.1044776119402985 AS "P_1", 0.0 AS "P_2", 0.03731343283582089 AS "P_3", 0.007462686567164179 AS "P_4", 0.007462686567164179 AS "P_5", 0.0 AS "P_6", 0.007462686567164179 AS "P_7", 0.08955223880597014 AS "P_8", 0.7089552238805971 AS "P_9", 9 AS "D", 0.7089552238805971 AS "DP" UNION ALL SELECT 50 AS nid, 0.0 AS "P_0", 0.01904761904761905 AS "P_1", 0.02857142857142857 AS "P_2", 0.0380952380952381 AS "P_3", 0.009523809523809525 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.8666666666666667 AS "P_7", 0.02857142857142857 AS "P_8", 0.009523809523809525 AS "P_9", 7 AS "D", 0.8666666666666667 AS "DP" UNION ALL SELECT 51 AS nid, 0.0 AS "P_0", 0.09523809523809523 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.5238095238095238 AS "P_4", 0.047619047619047616 AS "P_5", 0.0 AS "P_6", 0.19047619047619047 AS "P_7", 0.047619047619047616 AS "P_8", 0.09523809523809523 AS "P_9", 4 AS "D", 0.5238095238095238 AS "DP" UNION ALL SELECT 53 AS nid, 0.0 AS "P_0", 0.23853211009174313 AS "P_1", 0.3486238532110092 AS "P_2", 0.03669724770642202 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.013761467889908258 AS "P_7", 0.3486238532110092 AS "P_8", 0.013761467889908258 AS "P_9", 2 AS "D", 0.3486238532110092 AS "DP" UNION ALL SELECT 54 AS nid, 0.013157894736842105 AS "P_0", 0.15789473684210525 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.7631578947368421 AS "P_4", 0.0 AS "P_5", 0.013157894736842105 AS "P_6", 0.0 AS "P_7", 0.05263157894736842 AS "P_8", 0.0 AS "P_9", 4 AS "D", 0.7631578947368421 AS "DP") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."P_0" AS "P_0", "DT_node_data_2"."P_1" AS "P_1", "DT_node_data_2"."P_2" AS "P_2", "DT_node_data_2"."P_3" AS "P_3", "DT_node_data_2"."P_4" AS "P_4", "DT_node_data_2"."P_5" AS "P_5", "DT_node_data_2"."P_6" AS "P_6", "DT_node_data_2"."P_7" AS "P_7", "DT_node_data_2"."P_8" AS "P_8", "DT_node_data_2"."P_9" AS "P_9", "DT_node_data_2"."D" AS "D", "DT_node_data_2"."DP" AS "DP" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"Calibrated_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", CAST(NULL AS DOUBLE) AS "Score_1", CAST(NULL AS DOUBLE) AS "Score_2", CAST(NULL AS DOUBLE) AS "Score_3", CAST(NULL AS DOUBLE) AS "Score_4", CAST(NULL AS DOUBLE) AS "Score_5", CAST(NULL AS DOUBLE) AS "Score_6", CAST(NULL AS DOUBLE) AS "Score_7", CAST(NULL AS DOUBLE) AS "Score_8", CAST(NULL AS DOUBLE) AS "Score_9", "DT_Output_2"."P_0" AS "Proba_0", "DT_Output_2"."P_1" AS "Proba_1", "DT_Output_2"."P_2" AS "Proba_2", "DT_Output_2"."P_3" AS "Proba_3", "DT_Output_2"."P_4" AS "Proba_4", "DT_Output_2"."P_5" AS "Proba_5", "DT_Output_2"."P_6" AS "Proba_6", "DT_Output_2"."P_7" AS "Proba_7", "DT_Output_2"."P_8" AS "Proba_8", "DT_Output_2"."P_9" AS "Proba_9", CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3", CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE '-Infinity'::float8 END AS "LogProba_4", CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE '-Infinity'::float8 END AS "LogProba_5", CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE '-Infinity'::float8 END AS "LogProba_6", CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE '-Infinity'::float8 END AS "LogProba_7", CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE '-Infinity'::float8 END AS "LogProba_8", CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE '-Infinity'::float8 END AS "LogProba_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS DOUBLE) AS "DecisionProba", coalesce(CAST(NULL AS DOUBLE), "DT_Output_2"."P_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS DOUBLE), "DT_Output_2"."P_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS DOUBLE), "DT_Output_2"."P_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS DOUBLE), "DT_Output_2"."P_3") AS "ScoreOrProba_3", coalesce(CAST(NULL AS DOUBLE), "DT_Output_2"."P_4") AS "ScoreOrProba_4", coalesce(CAST(NULL AS DOUBLE), "DT_Output_2"."P_5") AS "ScoreOrProba_5", coalesce(CAST(NULL AS DOUBLE), "DT_Output_2"."P_6") AS "ScoreOrProba_6", coalesce(CAST(NULL AS DOUBLE), "DT_Output_2"."P_7") AS "ScoreOrProba_7", coalesce(CAST(NULL AS DOUBLE), "DT_Output_2"."P_8") AS "ScoreOrProba_8", coalesce(CAST(NULL AS DOUBLE), "DT_Output_2"."P_9") AS "ScoreOrProba_9" 
FROM "DT_Output_2"), 
sigmoid_calibration_2 AS 
(SELECT "Calibrated_Model_2"."KEY" AS "KEY", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(7.59874352902878 * "Calibrated_Model_2"."ScoreOrProba_0" + -3.95346405990873))))) AS "Proba_0", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(5.020694200729026 * "Calibrated_Model_2"."ScoreOrProba_1" + -3.0827959116345274))))) AS "Proba_1", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(7.465570512281537 * "Calibrated_Model_2"."ScoreOrProba_2" + -3.457296777446898))))) AS "Proba_2", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(6.964395915158884 * "Calibrated_Model_2"."ScoreOrProba_3" + -3.5482983122746403))))) AS "Proba_3", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(5.9493195136136094 * "Calibrated_Model_2"."ScoreOrProba_4" + -3.752414815443931))))) AS "Proba_4", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(7.368799281862783 * "Calibrated_Model_2"."ScoreOrProba_5" + -4.186808857713144))))) AS "Proba_5", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(7.057913930923593 * "Calibrated_Model_2"."ScoreOrProba_6" + -4.324550273611683))))) AS "Proba_6", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(4.9206893418216096 * "Calibrated_Model_2"."ScoreOrProba_7" + -3.217674450483012))))) AS "Proba_7", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(9.099626145116662 * "Calibrated_Model_2"."ScoreOrProba_8" + -3.8547054973747445))))) AS "Proba_8", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(6.630842594580366 * "Calibrated_Model_2"."ScoreOrProba_9" + -4.130860823669919))))) AS "Proba_9" 
FROM "Calibrated_Model_2"), 
"Normalized_Probas_2" AS 
(SELECT sigmoid_calibration_2."KEY" AS "KEY", sigmoid_calibration_2."Proba_0" / (sigmoid_calibration_2."Proba_0" + sigmoid_calibration_2."Proba_1" + sigmoid_calibration_2."Proba_2" + sigmoid_calibration_2."Proba_3" + sigmoid_calibration_2."Proba_4" + sigmoid_calibration_2."Proba_5" + sigmoid_calibration_2."Proba_6" + sigmoid_calibration_2."Proba_7" + sigmoid_calibration_2."Proba_8" + sigmoid_calibration_2."Proba_9") AS "Proba_0", sigmoid_calibration_2."Proba_1" / (sigmoid_calibration_2."Proba_0" + sigmoid_calibration_2."Proba_1" + sigmoid_calibration_2."Proba_2" + sigmoid_calibration_2."Proba_3" + sigmoid_calibration_2."Proba_4" + sigmoid_calibration_2."Proba_5" + sigmoid_calibration_2."Proba_6" + sigmoid_calibration_2."Proba_7" + sigmoid_calibration_2."Proba_8" + sigmoid_calibration_2."Proba_9") AS "Proba_1", sigmoid_calibration_2."Proba_2" / (sigmoid_calibration_2."Proba_0" + sigmoid_calibration_2."Proba_1" + sigmoid_calibration_2."Proba_2" + sigmoid_calibration_2."Proba_3" + sigmoid_calibration_2."Proba_4" + sigmoid_calibration_2."Proba_5" + sigmoid_calibration_2."Proba_6" + sigmoid_calibration_2."Proba_7" + sigmoid_calibration_2."Proba_8" + sigmoid_calibration_2."Proba_9") AS "Proba_2", sigmoid_calibration_2."Proba_3" / (sigmoid_calibration_2."Proba_0" + sigmoid_calibration_2."Proba_1" + sigmoid_calibration_2."Proba_2" + sigmoid_calibration_2."Proba_3" + sigmoid_calibration_2."Proba_4" + sigmoid_calibration_2."Proba_5" + sigmoid_calibration_2."Proba_6" + sigmoid_calibration_2."Proba_7" + sigmoid_calibration_2."Proba_8" + sigmoid_calibration_2."Proba_9") AS "Proba_3", sigmoid_calibration_2."Proba_4" / (sigmoid_calibration_2."Proba_0" + sigmoid_calibration_2."Proba_1" + sigmoid_calibration_2."Proba_2" + sigmoid_calibration_2."Proba_3" + sigmoid_calibration_2."Proba_4" + sigmoid_calibration_2."Proba_5" + sigmoid_calibration_2."Proba_6" + sigmoid_calibration_2."Proba_7" + sigmoid_calibration_2."Proba_8" + sigmoid_calibration_2."Proba_9") AS "Proba_4", sigmoid_calibration_2."Proba_5" / (sigmoid_calibration_2."Proba_0" + sigmoid_calibration_2."Proba_1" + sigmoid_calibration_2."Proba_2" + sigmoid_calibration_2."Proba_3" + sigmoid_calibration_2."Proba_4" + sigmoid_calibration_2."Proba_5" + sigmoid_calibration_2."Proba_6" + sigmoid_calibration_2."Proba_7" + sigmoid_calibration_2."Proba_8" + sigmoid_calibration_2."Proba_9") AS "Proba_5", sigmoid_calibration_2."Proba_6" / (sigmoid_calibration_2."Proba_0" + sigmoid_calibration_2."Proba_1" + sigmoid_calibration_2."Proba_2" + sigmoid_calibration_2."Proba_3" + sigmoid_calibration_2."Proba_4" + sigmoid_calibration_2."Proba_5" + sigmoid_calibration_2."Proba_6" + sigmoid_calibration_2."Proba_7" + sigmoid_calibration_2."Proba_8" + sigmoid_calibration_2."Proba_9") AS "Proba_6", sigmoid_calibration_2."Proba_7" / (sigmoid_calibration_2."Proba_0" + sigmoid_calibration_2."Proba_1" + sigmoid_calibration_2."Proba_2" + sigmoid_calibration_2."Proba_3" + sigmoid_calibration_2."Proba_4" + sigmoid_calibration_2."Proba_5" + sigmoid_calibration_2."Proba_6" + sigmoid_calibration_2."Proba_7" + sigmoid_calibration_2."Proba_8" + sigmoid_calibration_2."Proba_9") AS "Proba_7", sigmoid_calibration_2."Proba_8" / (sigmoid_calibration_2."Proba_0" + sigmoid_calibration_2."Proba_1" + sigmoid_calibration_2."Proba_2" + sigmoid_calibration_2."Proba_3" + sigmoid_calibration_2."Proba_4" + sigmoid_calibration_2."Proba_5" + sigmoid_calibration_2."Proba_6" + sigmoid_calibration_2."Proba_7" + sigmoid_calibration_2."Proba_8" + sigmoid_calibration_2."Proba_9") AS "Proba_8", sigmoid_calibration_2."Proba_9" / (sigmoid_calibration_2."Proba_0" + sigmoid_calibration_2."Proba_1" + sigmoid_calibration_2."Proba_2" + sigmoid_calibration_2."Proba_3" + sigmoid_calibration_2."Proba_4" + sigmoid_calibration_2."Proba_5" + sigmoid_calibration_2."Proba_6" + sigmoid_calibration_2."Proba_7" + sigmoid_calibration_2."Proba_8" + sigmoid_calibration_2."Proba_9") AS "Proba_9" 
FROM sigmoid_calibration_2), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -1.6508051753044128) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -0.9030675292015076) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -1.172670304775238) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.11717917770147324) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= 1.58335679769516) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.3651496767997742) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.19011751003563404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.7632773220539093) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= -0.6885261256247759) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -1.504944384098053) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= -0.7239397168159485) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -1.398476481437683) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= -0.08449207246303558) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -1.172670304775238) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.250873439013958) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.5867252945899963) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.4649772346019745) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.9766302406787872) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= -0.653985470533371) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 1.0345413088798523) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= 0.7944982945919037) THEN 40 ELSE 41 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -0.8913523256778717) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 0.5403966009616852) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= -0.20786768198013306) THEN 45 ELSE 46 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -0.513394370675087) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.7331587076187134) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -0.5865546762943268) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 0.3318006992340088) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM "TMP_20221018185929_TQ0QKZX_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."P_4" AS "P_4", "Values"."P_5" AS "P_5", "Values"."P_6" AS "P_6", "Values"."P_7" AS "P_7", "Values"."P_8" AS "P_8", "Values"."P_9" AS "P_9", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 0.5 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.5 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 0 AS "D", 0.5 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 1.0 AS "P_9", 9 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 1.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 6 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.3333333333333333 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.6666666666666666 AS "P_9", 9 AS "D", 0.6666666666666666 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 1.0 AS "P_8", 0.0 AS "P_9", 8 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 1.0 AS "P_9", 9 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 1.0 AS "P_8", 0.0 AS "P_9", 8 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.7058823529411765 AS "P_1", 0.0 AS "P_2", 0.029411764705882353 AS "P_3", 0.11764705882352941 AS "P_4", 0.029411764705882353 AS "P_5", 0.08823529411764706 AS "P_6", 0.029411764705882353 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 1 AS "D", 0.7058823529411765 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.6176470588235294 AS "P_2", 0.23529411764705882 AS "P_3", 0.0 AS "P_4", 0.029411764705882353 AS "P_5", 0.0 AS "P_6", 0.08823529411764706 AS "P_7", 0.029411764705882353 AS "P_8", 0.0 AS "P_9", 2 AS "D", 0.6176470588235294 AS "DP" UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.6666666666666666 AS "P_4", 0.3333333333333333 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 0.6666666666666666 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 37 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.9375 AS "P_4", 0.0 AS "P_5", 0.0625 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 0.9375 AS "DP" UNION ALL SELECT 38 AS nid, 0.0 AS "P_0", 0.6 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.4 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 1 AS "D", 0.6 AS "DP" UNION ALL SELECT 40 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.010416666666666666 AS "P_5", 0.9895833333333334 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 6 AS "D", 0.9895833333333334 AS "DP" UNION ALL SELECT 41 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 45 AS nid, 0.0 AS "P_0", 0.010416666666666666 AS "P_1", 0.0 AS "P_2", 0.03125 AS "P_3", 0.020833333333333332 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.8854166666666666 AS "P_7", 0.041666666666666664 AS "P_8", 0.010416666666666666 AS "P_9", 7 AS "D", 0.8854166666666666 AS "DP" UNION ALL SELECT 46 AS nid, 0.0 AS "P_0", 0.5 AS "P_1", 0.25 AS "P_2", 0.25 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 1 AS "D", 0.5 AS "DP" UNION ALL SELECT 48 AS nid, 0.0 AS "P_0", 0.08695652173913043 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.08695652173913043 AS "P_4", 0.08695652173913043 AS "P_5", 0.0 AS "P_6", 0.34782608695652173 AS "P_7", 0.0 AS "P_8", 0.391304347826087 AS "P_9", 9 AS "D", 0.391304347826087 AS "DP" UNION ALL SELECT 49 AS nid, 0.0 AS "P_0", 0.125 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.875 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 0.875 AS "DP" UNION ALL SELECT 52 AS nid, 0.0 AS "P_0", 0.009900990099009901 AS "P_1", 0.0297029702970297 AS "P_2", 0.8415841584158416 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.039603960396039604 AS "P_8", 0.07920792079207921 AS "P_9", 3 AS "D", 0.8415841584158416 AS "DP" UNION ALL SELECT 53 AS nid, 0.0 AS "P_0", 0.0963855421686747 AS "P_1", 0.0 AS "P_2", 0.03614457831325301 AS "P_3", 0.08433734939759036 AS "P_4", 0.03614457831325301 AS "P_5", 0.0 AS "P_6", 0.024096385542168676 AS "P_7", 0.08433734939759036 AS "P_8", 0.6385542168674698 AS "P_9", 9 AS "D", 0.6385542168674698 AS "DP" UNION ALL SELECT 55 AS nid, 0.0 AS "P_0", 0.22807017543859648 AS "P_1", 0.34210526315789475 AS "P_2", 0.021929824561403508 AS "P_3", 0.013157894736842105 AS "P_4", 0.0 AS "P_5", 0.0043859649122807015 AS "P_6", 0.02631578947368421 AS "P_7", 0.3508771929824561 AS "P_8", 0.013157894736842105 AS "P_9", 8 AS "D", 0.3508771929824561 AS "DP" UNION ALL SELECT 56 AS nid, 0.024096385542168676 AS "P_0", 0.1686746987951807 AS "P_1", 0.012048192771084338 AS "P_2", 0.0 AS "P_3", 0.7590361445783133 AS "P_4", 0.0 AS "P_5", 0.012048192771084338 AS "P_6", 0.0 AS "P_7", 0.024096385542168676 AS "P_8", 0.0 AS "P_9", 4 AS "D", 0.7590361445783133 AS "DP") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."P_0" AS "P_0", "DT_node_data_3"."P_1" AS "P_1", "DT_node_data_3"."P_2" AS "P_2", "DT_node_data_3"."P_3" AS "P_3", "DT_node_data_3"."P_4" AS "P_4", "DT_node_data_3"."P_5" AS "P_5", "DT_node_data_3"."P_6" AS "P_6", "DT_node_data_3"."P_7" AS "P_7", "DT_node_data_3"."P_8" AS "P_8", "DT_node_data_3"."P_9" AS "P_9", "DT_node_data_3"."D" AS "D", "DT_node_data_3"."DP" AS "DP" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"Calibrated_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", CAST(NULL AS DOUBLE) AS "Score_1", CAST(NULL AS DOUBLE) AS "Score_2", CAST(NULL AS DOUBLE) AS "Score_3", CAST(NULL AS DOUBLE) AS "Score_4", CAST(NULL AS DOUBLE) AS "Score_5", CAST(NULL AS DOUBLE) AS "Score_6", CAST(NULL AS DOUBLE) AS "Score_7", CAST(NULL AS DOUBLE) AS "Score_8", CAST(NULL AS DOUBLE) AS "Score_9", "DT_Output_3"."P_0" AS "Proba_0", "DT_Output_3"."P_1" AS "Proba_1", "DT_Output_3"."P_2" AS "Proba_2", "DT_Output_3"."P_3" AS "Proba_3", "DT_Output_3"."P_4" AS "Proba_4", "DT_Output_3"."P_5" AS "Proba_5", "DT_Output_3"."P_6" AS "Proba_6", "DT_Output_3"."P_7" AS "Proba_7", "DT_Output_3"."P_8" AS "Proba_8", "DT_Output_3"."P_9" AS "Proba_9", CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3", CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE '-Infinity'::float8 END AS "LogProba_4", CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE '-Infinity'::float8 END AS "LogProba_5", CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE '-Infinity'::float8 END AS "LogProba_6", CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE '-Infinity'::float8 END AS "LogProba_7", CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE '-Infinity'::float8 END AS "LogProba_8", CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE '-Infinity'::float8 END AS "LogProba_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS DOUBLE) AS "DecisionProba", coalesce(CAST(NULL AS DOUBLE), "DT_Output_3"."P_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS DOUBLE), "DT_Output_3"."P_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS DOUBLE), "DT_Output_3"."P_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS DOUBLE), "DT_Output_3"."P_3") AS "ScoreOrProba_3", coalesce(CAST(NULL AS DOUBLE), "DT_Output_3"."P_4") AS "ScoreOrProba_4", coalesce(CAST(NULL AS DOUBLE), "DT_Output_3"."P_5") AS "ScoreOrProba_5", coalesce(CAST(NULL AS DOUBLE), "DT_Output_3"."P_6") AS "ScoreOrProba_6", coalesce(CAST(NULL AS DOUBLE), "DT_Output_3"."P_7") AS "ScoreOrProba_7", coalesce(CAST(NULL AS DOUBLE), "DT_Output_3"."P_8") AS "ScoreOrProba_8", coalesce(CAST(NULL AS DOUBLE), "DT_Output_3"."P_9") AS "ScoreOrProba_9" 
FROM "DT_Output_3"), 
sigmoid_calibration_3 AS 
(SELECT "Calibrated_Model_3"."KEY" AS "KEY", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(7.08337132841732 * "Calibrated_Model_3"."ScoreOrProba_0" + -4.821728550358341))))) AS "Proba_0", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(6.154179989513363 * "Calibrated_Model_3"."ScoreOrProba_1" + -3.1231904145208977))))) AS "Proba_1", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(6.907632997255113 * "Calibrated_Model_3"."ScoreOrProba_2" + -3.4779668552824847))))) AS "Proba_2", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(5.470990765510384 * "Calibrated_Model_3"."ScoreOrProba_3" + -3.396644343817108))))) AS "Proba_3", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(5.9621376551174885 * "Calibrated_Model_3"."ScoreOrProba_4" + -3.4581974420557855))))) AS "Proba_4", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(7.6443133243931864 * "Calibrated_Model_3"."ScoreOrProba_5" + -4.793293989813116))))) AS "Proba_5", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(8.325092138099029 * "Calibrated_Model_3"."ScoreOrProba_6" + -4.986375082413949))))) AS "Proba_6", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(6.664396003080854 * "Calibrated_Model_3"."ScoreOrProba_7" + -4.119614318596288))))) AS "Proba_7", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(8.063873925050803 * "Calibrated_Model_3"."ScoreOrProba_8" + -3.5199265041464156))))) AS "Proba_8", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(6.292213988416166 * "Calibrated_Model_3"."ScoreOrProba_9" + -3.9087727924679676))))) AS "Proba_9" 
FROM "Calibrated_Model_3"), 
"Normalized_Probas_3" AS 
(SELECT sigmoid_calibration_3."KEY" AS "KEY", sigmoid_calibration_3."Proba_0" / (sigmoid_calibration_3."Proba_0" + sigmoid_calibration_3."Proba_1" + sigmoid_calibration_3."Proba_2" + sigmoid_calibration_3."Proba_3" + sigmoid_calibration_3."Proba_4" + sigmoid_calibration_3."Proba_5" + sigmoid_calibration_3."Proba_6" + sigmoid_calibration_3."Proba_7" + sigmoid_calibration_3."Proba_8" + sigmoid_calibration_3."Proba_9") AS "Proba_0", sigmoid_calibration_3."Proba_1" / (sigmoid_calibration_3."Proba_0" + sigmoid_calibration_3."Proba_1" + sigmoid_calibration_3."Proba_2" + sigmoid_calibration_3."Proba_3" + sigmoid_calibration_3."Proba_4" + sigmoid_calibration_3."Proba_5" + sigmoid_calibration_3."Proba_6" + sigmoid_calibration_3."Proba_7" + sigmoid_calibration_3."Proba_8" + sigmoid_calibration_3."Proba_9") AS "Proba_1", sigmoid_calibration_3."Proba_2" / (sigmoid_calibration_3."Proba_0" + sigmoid_calibration_3."Proba_1" + sigmoid_calibration_3."Proba_2" + sigmoid_calibration_3."Proba_3" + sigmoid_calibration_3."Proba_4" + sigmoid_calibration_3."Proba_5" + sigmoid_calibration_3."Proba_6" + sigmoid_calibration_3."Proba_7" + sigmoid_calibration_3."Proba_8" + sigmoid_calibration_3."Proba_9") AS "Proba_2", sigmoid_calibration_3."Proba_3" / (sigmoid_calibration_3."Proba_0" + sigmoid_calibration_3."Proba_1" + sigmoid_calibration_3."Proba_2" + sigmoid_calibration_3."Proba_3" + sigmoid_calibration_3."Proba_4" + sigmoid_calibration_3."Proba_5" + sigmoid_calibration_3."Proba_6" + sigmoid_calibration_3."Proba_7" + sigmoid_calibration_3."Proba_8" + sigmoid_calibration_3."Proba_9") AS "Proba_3", sigmoid_calibration_3."Proba_4" / (sigmoid_calibration_3."Proba_0" + sigmoid_calibration_3."Proba_1" + sigmoid_calibration_3."Proba_2" + sigmoid_calibration_3."Proba_3" + sigmoid_calibration_3."Proba_4" + sigmoid_calibration_3."Proba_5" + sigmoid_calibration_3."Proba_6" + sigmoid_calibration_3."Proba_7" + sigmoid_calibration_3."Proba_8" + sigmoid_calibration_3."Proba_9") AS "Proba_4", sigmoid_calibration_3."Proba_5" / (sigmoid_calibration_3."Proba_0" + sigmoid_calibration_3."Proba_1" + sigmoid_calibration_3."Proba_2" + sigmoid_calibration_3."Proba_3" + sigmoid_calibration_3."Proba_4" + sigmoid_calibration_3."Proba_5" + sigmoid_calibration_3."Proba_6" + sigmoid_calibration_3."Proba_7" + sigmoid_calibration_3."Proba_8" + sigmoid_calibration_3."Proba_9") AS "Proba_5", sigmoid_calibration_3."Proba_6" / (sigmoid_calibration_3."Proba_0" + sigmoid_calibration_3."Proba_1" + sigmoid_calibration_3."Proba_2" + sigmoid_calibration_3."Proba_3" + sigmoid_calibration_3."Proba_4" + sigmoid_calibration_3."Proba_5" + sigmoid_calibration_3."Proba_6" + sigmoid_calibration_3."Proba_7" + sigmoid_calibration_3."Proba_8" + sigmoid_calibration_3."Proba_9") AS "Proba_6", sigmoid_calibration_3."Proba_7" / (sigmoid_calibration_3."Proba_0" + sigmoid_calibration_3."Proba_1" + sigmoid_calibration_3."Proba_2" + sigmoid_calibration_3."Proba_3" + sigmoid_calibration_3."Proba_4" + sigmoid_calibration_3."Proba_5" + sigmoid_calibration_3."Proba_6" + sigmoid_calibration_3."Proba_7" + sigmoid_calibration_3."Proba_8" + sigmoid_calibration_3."Proba_9") AS "Proba_7", sigmoid_calibration_3."Proba_8" / (sigmoid_calibration_3."Proba_0" + sigmoid_calibration_3."Proba_1" + sigmoid_calibration_3."Proba_2" + sigmoid_calibration_3."Proba_3" + sigmoid_calibration_3."Proba_4" + sigmoid_calibration_3."Proba_5" + sigmoid_calibration_3."Proba_6" + sigmoid_calibration_3."Proba_7" + sigmoid_calibration_3."Proba_8" + sigmoid_calibration_3."Proba_9") AS "Proba_8", sigmoid_calibration_3."Proba_9" / (sigmoid_calibration_3."Proba_0" + sigmoid_calibration_3."Proba_1" + sigmoid_calibration_3."Proba_2" + sigmoid_calibration_3."Proba_3" + sigmoid_calibration_3."Proba_4" + sigmoid_calibration_3."Proba_5" + sigmoid_calibration_3."Proba_6" + sigmoid_calibration_3."Proba_7" + sigmoid_calibration_3."Proba_8" + sigmoid_calibration_3."Proba_9") AS "Proba_9" 
FROM sigmoid_calibration_3)
 INSERT INTO "TMP_20221018185929_YQKUSE1_CalProb_B0" ("KEY", "Proba_0", "Proba_1", "Proba_2", "Proba_3", "Proba_4", "Proba_5", "Proba_6", "Proba_7", "Proba_8", "Proba_9") SELECT "T"."KEY", "T"."Proba_0", "T"."Proba_1", "T"."Proba_2", "T"."Proba_3", "T"."Proba_4", "T"."Proba_5", "T"."Proba_6", "T"."Proba_7", "T"."Proba_8", "T"."Proba_9" 
FROM (SELECT "CalProb_B0"."KEY" AS "KEY", "CalProb_B0"."Proba_0" AS "Proba_0", "CalProb_B0"."Proba_1" AS "Proba_1", "CalProb_B0"."Proba_2" AS "Proba_2", "CalProb_B0"."Proba_3" AS "Proba_3", "CalProb_B0"."Proba_4" AS "Proba_4", "CalProb_B0"."Proba_5" AS "Proba_5", "CalProb_B0"."Proba_6" AS "Proba_6", "CalProb_B0"."Proba_7" AS "Proba_7", "CalProb_B0"."Proba_8" AS "Proba_8", "CalProb_B0"."Proba_9" AS "Proba_9" 
FROM (SELECT "CalProb_esu_0"."KEY" AS "KEY", "CalProb_esu_0"."Proba_0" AS "Proba_0", "CalProb_esu_0"."Proba_1" AS "Proba_1", "CalProb_esu_0"."Proba_2" AS "Proba_2", "CalProb_esu_0"."Proba_3" AS "Proba_3", "CalProb_esu_0"."Proba_4" AS "Proba_4", "CalProb_esu_0"."Proba_5" AS "Proba_5", "CalProb_esu_0"."Proba_6" AS "Proba_6", "CalProb_esu_0"."Proba_7" AS "Proba_7", "CalProb_esu_0"."Proba_8" AS "Proba_8", "CalProb_esu_0"."Proba_9" AS "Proba_9" 
FROM (SELECT "Normalized_Probas"."KEY" AS "KEY", "Normalized_Probas"."Proba_0" AS "Proba_0", "Normalized_Probas"."Proba_1" AS "Proba_1", "Normalized_Probas"."Proba_2" AS "Proba_2", "Normalized_Probas"."Proba_3" AS "Proba_3", "Normalized_Probas"."Proba_4" AS "Proba_4", "Normalized_Probas"."Proba_5" AS "Proba_5", "Normalized_Probas"."Proba_6" AS "Proba_6", "Normalized_Probas"."Proba_7" AS "Proba_7", "Normalized_Probas"."Proba_8" AS "Proba_8", "Normalized_Probas"."Proba_9" AS "Proba_9" 
FROM "Normalized_Probas" UNION ALL SELECT "Normalized_Probas_1"."KEY" AS "KEY", "Normalized_Probas_1"."Proba_0" AS "Proba_0", "Normalized_Probas_1"."Proba_1" AS "Proba_1", "Normalized_Probas_1"."Proba_2" AS "Proba_2", "Normalized_Probas_1"."Proba_3" AS "Proba_3", "Normalized_Probas_1"."Proba_4" AS "Proba_4", "Normalized_Probas_1"."Proba_5" AS "Proba_5", "Normalized_Probas_1"."Proba_6" AS "Proba_6", "Normalized_Probas_1"."Proba_7" AS "Proba_7", "Normalized_Probas_1"."Proba_8" AS "Proba_8", "Normalized_Probas_1"."Proba_9" AS "Proba_9" 
FROM "Normalized_Probas_1" UNION ALL SELECT "Normalized_Probas_2"."KEY" AS "KEY", "Normalized_Probas_2"."Proba_0" AS "Proba_0", "Normalized_Probas_2"."Proba_1" AS "Proba_1", "Normalized_Probas_2"."Proba_2" AS "Proba_2", "Normalized_Probas_2"."Proba_3" AS "Proba_3", "Normalized_Probas_2"."Proba_4" AS "Proba_4", "Normalized_Probas_2"."Proba_5" AS "Proba_5", "Normalized_Probas_2"."Proba_6" AS "Proba_6", "Normalized_Probas_2"."Proba_7" AS "Proba_7", "Normalized_Probas_2"."Proba_8" AS "Proba_8", "Normalized_Probas_2"."Proba_9" AS "Proba_9" 
FROM "Normalized_Probas_2" UNION ALL SELECT "Normalized_Probas_3"."KEY" AS "KEY", "Normalized_Probas_3"."Proba_0" AS "Proba_0", "Normalized_Probas_3"."Proba_1" AS "Proba_1", "Normalized_Probas_3"."Proba_2" AS "Proba_2", "Normalized_Probas_3"."Proba_3" AS "Proba_3", "Normalized_Probas_3"."Proba_4" AS "Proba_4", "Normalized_Probas_3"."Proba_5" AS "Proba_5", "Normalized_Probas_3"."Proba_6" AS "Proba_6", "Normalized_Probas_3"."Proba_7" AS "Proba_7", "Normalized_Probas_3"."Proba_8" AS "Proba_8", "Normalized_Probas_3"."Proba_9" AS "Proba_9" 
FROM "Normalized_Probas_3") AS "CalProb_esu_0") AS "CalProb_B0") AS "T"

-- Code For temporary table TMP_20221018185929_LQH2PZH_CalProb_avg part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185929_LQH2PZH_CalProb_avg" (
	"KEY" BIGINT NOT NULL, 
	"Proba_0" DOUBLE, 
	"Proba_1" DOUBLE, 
	"Proba_2" DOUBLE, 
	"Proba_3" DOUBLE, 
	"Proba_4" DOUBLE, 
	"Proba_5" DOUBLE, 
	"Proba_6" DOUBLE, 
	"Proba_7" DOUBLE, 
	"Proba_8" DOUBLE, 
	"Proba_9" DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185929_LQH2PZH_CalProb_avg part 2. Populate

WITH "CalProb_Union" AS 
(SELECT "CalProb_EnsembleUnion"."KEY" AS "KEY", "CalProb_EnsembleUnion"."Proba_0" AS "Proba_0", "CalProb_EnsembleUnion"."Proba_1" AS "Proba_1", "CalProb_EnsembleUnion"."Proba_2" AS "Proba_2", "CalProb_EnsembleUnion"."Proba_3" AS "Proba_3", "CalProb_EnsembleUnion"."Proba_4" AS "Proba_4", "CalProb_EnsembleUnion"."Proba_5" AS "Proba_5", "CalProb_EnsembleUnion"."Proba_6" AS "Proba_6", "CalProb_EnsembleUnion"."Proba_7" AS "Proba_7", "CalProb_EnsembleUnion"."Proba_8" AS "Proba_8", "CalProb_EnsembleUnion"."Proba_9" AS "Proba_9" 
FROM (SELECT "CalProb_B0"."KEY" AS "KEY", "CalProb_B0"."Proba_0" AS "Proba_0", "CalProb_B0"."Proba_1" AS "Proba_1", "CalProb_B0"."Proba_2" AS "Proba_2", "CalProb_B0"."Proba_3" AS "Proba_3", "CalProb_B0"."Proba_4" AS "Proba_4", "CalProb_B0"."Proba_5" AS "Proba_5", "CalProb_B0"."Proba_6" AS "Proba_6", "CalProb_B0"."Proba_7" AS "Proba_7", "CalProb_B0"."Proba_8" AS "Proba_8", "CalProb_B0"."Proba_9" AS "Proba_9" 
FROM "TMP_20221018185929_YQKUSE1_CalProb_B0" AS "CalProb_B0") AS "CalProb_EnsembleUnion")
 INSERT INTO "TMP_20221018185929_LQH2PZH_CalProb_avg" ("KEY", "Proba_0", "Proba_1", "Proba_2", "Proba_3", "Proba_4", "Proba_5", "Proba_6", "Proba_7", "Proba_8", "Proba_9") SELECT "T"."KEY", "T"."Proba_0", "T"."Proba_1", "T"."Proba_2", "T"."Proba_3", "T"."Proba_4", "T"."Proba_5", "T"."Proba_6", "T"."Proba_7", "T"."Proba_8", "T"."Proba_9" 
FROM (SELECT "CalProb_avg"."KEY" AS "KEY", "CalProb_avg"."Proba_0" AS "Proba_0", "CalProb_avg"."Proba_1" AS "Proba_1", "CalProb_avg"."Proba_2" AS "Proba_2", "CalProb_avg"."Proba_3" AS "Proba_3", "CalProb_avg"."Proba_4" AS "Proba_4", "CalProb_avg"."Proba_5" AS "Proba_5", "CalProb_avg"."Proba_6" AS "Proba_6", "CalProb_avg"."Proba_7" AS "Proba_7", "CalProb_avg"."Proba_8" AS "Proba_8", "CalProb_avg"."Proba_9" AS "Proba_9" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Proba_0" AS DOUBLE) AS "Proba_0", CAST("T"."Proba_1" AS DOUBLE) AS "Proba_1", CAST("T"."Proba_2" AS DOUBLE) AS "Proba_2", CAST("T"."Proba_3" AS DOUBLE) AS "Proba_3", CAST("T"."Proba_4" AS DOUBLE) AS "Proba_4", CAST("T"."Proba_5" AS DOUBLE) AS "Proba_5", CAST("T"."Proba_6" AS DOUBLE) AS "Proba_6", CAST("T"."Proba_7" AS DOUBLE) AS "Proba_7", CAST("T"."Proba_8" AS DOUBLE) AS "Proba_8", CAST("T"."Proba_9" AS DOUBLE) AS "Proba_9" 
FROM (SELECT "CalProb_Union"."KEY" AS "KEY", avg(CAST("CalProb_Union"."Proba_0" AS DOUBLE)) AS "Proba_0", avg(CAST("CalProb_Union"."Proba_1" AS DOUBLE)) AS "Proba_1", avg(CAST("CalProb_Union"."Proba_2" AS DOUBLE)) AS "Proba_2", avg(CAST("CalProb_Union"."Proba_3" AS DOUBLE)) AS "Proba_3", avg(CAST("CalProb_Union"."Proba_4" AS DOUBLE)) AS "Proba_4", avg(CAST("CalProb_Union"."Proba_5" AS DOUBLE)) AS "Proba_5", avg(CAST("CalProb_Union"."Proba_6" AS DOUBLE)) AS "Proba_6", avg(CAST("CalProb_Union"."Proba_7" AS DOUBLE)) AS "Proba_7", avg(CAST("CalProb_Union"."Proba_8" AS DOUBLE)) AS "Proba_8", avg(CAST("CalProb_Union"."Proba_9" AS DOUBLE)) AS "Proba_9" 
FROM "CalProb_Union" GROUP BY "CalProb_Union"."KEY") AS "T") AS "CalProb_avg") AS "T"

-- Code For temporary table TMP_20221018185929_LQH2PZH_CalProb_avg part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185929_LQH2PZH_CalProb_avg_KEY" ON "TMP_20221018185929_LQH2PZH_CalProb_avg" ("KEY")

-- Model deployment code

WITH orig_cte AS 
(SELECT "CalProb_avg"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", CAST(NULL AS DOUBLE) AS "Score_1", CAST(NULL AS DOUBLE) AS "Score_2", CAST(NULL AS DOUBLE) AS "Score_3", CAST(NULL AS DOUBLE) AS "Score_4", CAST(NULL AS DOUBLE) AS "Score_5", CAST(NULL AS DOUBLE) AS "Score_6", CAST(NULL AS DOUBLE) AS "Score_7", CAST(NULL AS DOUBLE) AS "Score_8", CAST(NULL AS DOUBLE) AS "Score_9", "CalProb_avg"."Proba_0" AS "Proba_0", "CalProb_avg"."Proba_1" AS "Proba_1", "CalProb_avg"."Proba_2" AS "Proba_2", "CalProb_avg"."Proba_3" AS "Proba_3", "CalProb_avg"."Proba_4" AS "Proba_4", "CalProb_avg"."Proba_5" AS "Proba_5", "CalProb_avg"."Proba_6" AS "Proba_6", "CalProb_avg"."Proba_7" AS "Proba_7", "CalProb_avg"."Proba_8" AS "Proba_8", "CalProb_avg"."Proba_9" AS "Proba_9", CAST(NULL AS DOUBLE) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "LogProba_3", CAST(NULL AS DOUBLE) AS "LogProba_4", CAST(NULL AS DOUBLE) AS "LogProba_5", CAST(NULL AS DOUBLE) AS "LogProba_6", CAST(NULL AS DOUBLE) AS "LogProba_7", CAST(NULL AS DOUBLE) AS "LogProba_8", CAST(NULL AS DOUBLE) AS "LogProba_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS DOUBLE) AS "DecisionProba" 
FROM "TMP_20221018185929_LQH2PZH_CalProb_avg" AS "CalProb_avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 4 AS class, orig_cte."LogProba_4" AS "LogProba", orig_cte."Proba_4" AS "Proba", orig_cte."Score_4" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 5 AS class, orig_cte."LogProba_5" AS "LogProba", orig_cte."Proba_5" AS "Proba", orig_cte."Score_5" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 6 AS class, orig_cte."LogProba_6" AS "LogProba", orig_cte."Proba_6" AS "Proba", orig_cte."Score_6" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 7 AS class, orig_cte."LogProba_7" AS "LogProba", orig_cte."Proba_7" AS "Proba", orig_cte."Score_7" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 8 AS class, orig_cte."LogProba_8" AS "LogProba", orig_cte."Proba_8" AS "Proba", orig_cte."Score_8" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 9 AS class, orig_cte."LogProba_9" AS "LogProba", orig_cte."Proba_9" AS "Proba", orig_cte."Score_9" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Score_4" AS "Score_4", orig_cte."Score_5" AS "Score_5", orig_cte."Score_6" AS "Score_6", orig_cte."Score_7" AS "Score_7", orig_cte."Score_8" AS "Score_8", orig_cte."Score_9" AS "Score_9", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."Proba_4" AS "Proba_4", orig_cte."Proba_5" AS "Proba_5", orig_cte."Proba_6" AS "Proba_6", orig_cte."Proba_7" AS "Proba_7", orig_cte."Proba_8" AS "Proba_8", orig_cte."Proba_9" AS "Proba_9", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."LogProba_4" AS "LogProba_4", orig_cte."LogProba_5" AS "LogProba_5", orig_cte."LogProba_6" AS "LogProba_6", orig_cte."LogProba_7" AS "LogProba_7", orig_cte."LogProba_8" AS "LogProba_8", orig_cte."LogProba_9" AS "LogProba_9", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", max(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."Proba" >= union_with_max."max_Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Score_4" AS "Score_4", arg_max_cte."Score_5" AS "Score_5", arg_max_cte."Score_6" AS "Score_6", arg_max_cte."Score_7" AS "Score_7", arg_max_cte."Score_8" AS "Score_8", arg_max_cte."Score_9" AS "Score_9", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", arg_max_cte."Proba_4" AS "Proba_4", arg_max_cte."Proba_5" AS "Proba_5", arg_max_cte."Proba_6" AS "Proba_6", arg_max_cte."Proba_7" AS "Proba_7", arg_max_cte."Proba_8" AS "Proba_8", arg_max_cte."Proba_9" AS "Proba_9", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE '-Infinity'::float8 END AS "LogProba_3", CASE WHEN (arg_max_cte."Proba_4" IS NULL OR arg_max_cte."Proba_4" > 0.0) THEN ln(arg_max_cte."Proba_4") ELSE '-Infinity'::float8 END AS "LogProba_4", CASE WHEN (arg_max_cte."Proba_5" IS NULL OR arg_max_cte."Proba_5" > 0.0) THEN ln(arg_max_cte."Proba_5") ELSE '-Infinity'::float8 END AS "LogProba_5", CASE WHEN (arg_max_cte."Proba_6" IS NULL OR arg_max_cte."Proba_6" > 0.0) THEN ln(arg_max_cte."Proba_6") ELSE '-Infinity'::float8 END AS "LogProba_6", CASE WHEN (arg_max_cte."Proba_7" IS NULL OR arg_max_cte."Proba_7" > 0.0) THEN ln(arg_max_cte."Proba_7") ELSE '-Infinity'::float8 END AS "LogProba_7", CASE WHEN (arg_max_cte."Proba_8" IS NULL OR arg_max_cte."Proba_8" > 0.0) THEN ln(arg_max_cte."Proba_8") ELSE '-Infinity'::float8 END AS "LogProba_8", CASE WHEN (arg_max_cte."Proba_9" IS NULL OR arg_max_cte."Proba_9" > 0.0) THEN ln(arg_max_cte."Proba_9") ELSE '-Infinity'::float8 END AS "LogProba_9", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte