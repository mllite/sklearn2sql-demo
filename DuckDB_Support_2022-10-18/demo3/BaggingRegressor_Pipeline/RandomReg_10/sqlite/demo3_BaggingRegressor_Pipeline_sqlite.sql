-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : BaggingRegressor_Pipeline
-- Dataset : RandomReg_10
-- Database : sqlite


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018185408_0QFDRX3_ADS_imp_1_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185408_0QFDRX3_ADS_imp_1_OUT" (
	"KEY" BIGINT NOT NULL, 
	imputer_output_2 FLOAT, 
	imputer_output_3 FLOAT, 
	imputer_output_4 FLOAT, 
	imputer_output_5 FLOAT, 
	imputer_output_6 FLOAT, 
	imputer_output_7 FLOAT, 
	imputer_output_8 FLOAT, 
	imputer_output_9 FLOAT, 
	imputer_output_10 FLOAT, 
	imputer_output_11 FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20221018185408_0QFDRX3_ADS_imp_1_OUT part 2. Populate

INSERT INTO "TMP_20221018185408_0QFDRX3_ADS_imp_1_OUT" ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5, imputer_output_6, imputer_output_7, imputer_output_8, imputer_output_9, imputer_output_10, imputer_output_11) SELECT "T"."KEY", "T".imputer_output_2, "T".imputer_output_3, "T".imputer_output_4, "T".imputer_output_5, "T".imputer_output_6, "T".imputer_output_7, "T".imputer_output_8, "T".imputer_output_9, "T".imputer_output_10, "T".imputer_output_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".imputer_output_2 AS imputer_output_2, "ADS_imp_1_OUT".imputer_output_3 AS imputer_output_3, "ADS_imp_1_OUT".imputer_output_4 AS imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 AS imputer_output_5, "ADS_imp_1_OUT".imputer_output_6 AS imputer_output_6, "ADS_imp_1_OUT".imputer_output_7 AS imputer_output_7, "ADS_imp_1_OUT".imputer_output_8 AS imputer_output_8, "ADS_imp_1_OUT".imputer_output_9 AS imputer_output_9, "ADS_imp_1_OUT".imputer_output_10 AS imputer_output_10, "ADS_imp_1_OUT".imputer_output_11 AS imputer_output_11 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.16680947298137394 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.16351271994443456 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.19149292241003152 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.058384844753055345 ELSE "ADS"."Feature_3" END AS imputer_output_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN -0.09933205162122274 ELSE "ADS"."Feature_4" END AS imputer_output_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.21293121660488037 ELSE "ADS"."Feature_5" END AS imputer_output_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.047865568690029614 ELSE "ADS"."Feature_6" END AS imputer_output_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.05078698959084227 ELSE "ADS"."Feature_7" END AS imputer_output_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.1913199225908187 ELSE "ADS"."Feature_8" END AS imputer_output_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.19940405677473352 ELSE "ADS"."Feature_9" END AS imputer_output_11 
FROM "RandomReg_10" AS "ADS") AS "ADS_imp_1_OUT") AS "T"

-- Code For temporary table TMP_20221018185408_0QFDRX3_ADS_imp_1_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185408_0QFDRX3_ADS_imp_1_OUT_KEY" ON "TMP_20221018185408_0QFDRX3_ADS_imp_1_OUT" ("KEY")

-- Code For temporary table TMP_20221018185408_H05TKAM_ADS_sca_2_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185408_H05TKAM_ADS_sca_2_OUT" (
	"KEY" BIGINT NOT NULL, 
	scaler_output_2 FLOAT, 
	scaler_output_3 FLOAT, 
	scaler_output_4 FLOAT, 
	scaler_output_5 FLOAT, 
	scaler_output_6 FLOAT, 
	scaler_output_7 FLOAT, 
	scaler_output_8 FLOAT, 
	scaler_output_9 FLOAT, 
	scaler_output_10 FLOAT, 
	scaler_output_11 FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20221018185408_H05TKAM_ADS_sca_2_OUT part 2. Populate

INSERT INTO "TMP_20221018185408_H05TKAM_ADS_sca_2_OUT" ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11) SELECT "T"."KEY", "T".scaler_output_2, "T".scaler_output_3, "T".scaler_output_4, "T".scaler_output_5, "T".scaler_output_6, "T".scaler_output_7, "T".scaler_output_8, "T".scaler_output_9, "T".scaler_output_10, "T".scaler_output_11 
FROM (SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", "ADS_sca_2_OUT".scaler_output_2 AS scaler_output_2, "ADS_sca_2_OUT".scaler_output_3 AS scaler_output_3, "ADS_sca_2_OUT".scaler_output_4 AS scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 AS scaler_output_5, "ADS_sca_2_OUT".scaler_output_6 AS scaler_output_6, "ADS_sca_2_OUT".scaler_output_7 AS scaler_output_7, "ADS_sca_2_OUT".scaler_output_8 AS scaler_output_8, "ADS_sca_2_OUT".scaler_output_9 AS scaler_output_9, "ADS_sca_2_OUT".scaler_output_10 AS scaler_output_10, "ADS_sca_2_OUT".scaler_output_11 AS scaler_output_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS FLOAT) - 0.16680947298137394) / 1.0289835997047314 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS FLOAT) - -0.16351271994443456) / 0.9915812535046814 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS FLOAT) - 0.19149292241003152) / 0.9321147629147756 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS FLOAT) - 0.058384844753055345) / 1.0855729329506805 AS scaler_output_5, (CAST("ADS_imp_1_OUT".imputer_output_6 AS FLOAT) - -0.09933205162122274) / 1.0743904412882828 AS scaler_output_6, (CAST("ADS_imp_1_OUT".imputer_output_7 AS FLOAT) - 0.21293121660488037) / 0.9358074381886248 AS scaler_output_7, (CAST("ADS_imp_1_OUT".imputer_output_8 AS FLOAT) - 0.047865568690029614) / 1.1363574090613386 AS scaler_output_8, (CAST("ADS_imp_1_OUT".imputer_output_9 AS FLOAT) - 0.05078698959084227) / 0.9725457460098452 AS scaler_output_9, (CAST("ADS_imp_1_OUT".imputer_output_10 AS FLOAT) - -0.1913199225908187) / 1.1415974677936562 AS scaler_output_10, (CAST("ADS_imp_1_OUT".imputer_output_11 AS FLOAT) - 0.19940405677473352) / 0.882245682091319 AS scaler_output_11 
FROM "TMP_20221018185408_0QFDRX3_ADS_imp_1_OUT" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "T"

-- Code For temporary table TMP_20221018185408_H05TKAM_ADS_sca_2_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185408_H05TKAM_ADS_sca_2_OUT_KEY" ON "TMP_20221018185408_H05TKAM_ADS_sca_2_OUT" ("KEY")

-- Code For temporary table TMP_20221018185408_T662SQI_BAG_B0 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185408_T662SQI_BAG_B0" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)



-- Code For temporary table TMP_20221018185408_T662SQI_BAG_B0 part 2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.5968423783779144) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.3798469603061676) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.5122901797294617) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.4780315011739731) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.0161686539649963) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.761682391166687) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.5166343376040459) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.3954513967037201) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -1.4288303852081299) THEN 15 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.8729816824197769) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.0448696315288544) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.12294390052556992) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.12812240421772003) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.4683295339345932) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 1.5136516094207764) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 1.2387386560440063) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.1715525984764099) THEN 30 ELSE 31 END ELSE 32 END ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.5281001180410385) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.8354119956493378) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 1.361190915107727) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.06756183505058289) THEN 40 ELSE 41 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.9063424170017242) THEN 43 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 1.2210365533828735) THEN 45 ELSE 46 END END END END END AS node_id_2 
FROM "TMP_20221018185408_H05TKAM_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -405.2074819205236 AS "E" UNION ALL SELECT 6 AS nid, -242.07063404110843 AS "E" UNION ALL SELECT 8 AS nid, -268.1904323885528 AS "E" UNION ALL SELECT 9 AS nid, -98.62910020709616 AS "E" UNION ALL SELECT 11 AS nid, -1.7789086303776003 AS "E" UNION ALL SELECT 12 AS nid, 133.8707138905623 AS "E" UNION ALL SELECT 15 AS nid, -9.185160907179679 AS "E" UNION ALL SELECT 17 AS nid, -154.40083699334056 AS "E" UNION ALL SELECT 18 AS nid, -257.81327335251797 AS "E" UNION ALL SELECT 21 AS nid, 41.46822647392525 AS "E" UNION ALL SELECT 22 AS nid, 172.11640989037147 AS "E" UNION ALL SELECT 24 AS nid, 199.53096616939501 AS "E" UNION ALL SELECT 25 AS nid, 323.5464879669397 AS "E" UNION ALL SELECT 30 AS nid, 60.83005801950535 AS "E" UNION ALL SELECT 31 AS nid, 58.56592202346141 AS "E" UNION ALL SELECT 32 AS nid, 23.511748777975313 AS "E" UNION ALL SELECT 33 AS nid, 116.8891961793557 AS "E" UNION ALL SELECT 37 AS nid, 259.87552025822583 AS "E" UNION ALL SELECT 38 AS nid, 325.0738816201826 AS "E" UNION ALL SELECT 40 AS nid, 194.4087167101487 AS "E" UNION ALL SELECT 41 AS nid, 228.58868551702315 AS "E" UNION ALL SELECT 43 AS nid, 447.6909835452225 AS "E" UNION ALL SELECT 45 AS nid, 393.261092787257 AS "E" UNION ALL SELECT 46 AS nid, 355.99351619859897 AS "E") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."E" AS "E" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"BAG_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."E" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.9428369104862213) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.2679385542869568) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.4619877189397812) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.6295563727617264) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.39995260536670685) THEN 6 ELSE 7 END END ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.4116946458816528) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.4546668976545334) THEN 12 ELSE 13 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.17482367157936096) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.245400108397007) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -1.3417943716049194) THEN 17 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -2.183635890483856) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.8959313333034515) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -1.1340858489274979) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.2944139130413532) THEN 26 ELSE 27 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7398846447467804) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 1.213316410779953) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.9330978095531464) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.5038837790489197) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.7899761199951172) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.5092946738004684) THEN 38 ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.6652275621891022) THEN 41 ELSE 42 END END END END END AS node_id_2 
FROM "TMP_20221018185408_H05TKAM_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 4 AS nid, -284.890410429711 AS "E" UNION ALL SELECT 6 AS nid, -165.64587304935068 AS "E" UNION ALL SELECT 7 AS nid, -210.35491750133752 AS "E" UNION ALL SELECT 8 AS nid, -53.55855810403281 AS "E" UNION ALL SELECT 10 AS nid, -351.3842930876292 AS "E" UNION ALL SELECT 12 AS nid, -459.030670753418 AS "E" UNION ALL SELECT 13 AS nid, -422.39029400237723 AS "E" UNION ALL SELECT 17 AS nid, -9.185160907179679 AS "E" UNION ALL SELECT 19 AS nid, -251.2683418956458 AS "E" UNION ALL SELECT 20 AS nid, -155.5341988547945 AS "E" UNION ALL SELECT 23 AS nid, -223.26828856161853 AS "E" UNION ALL SELECT 24 AS nid, -3.641500408055029 AS "E" UNION ALL SELECT 26 AS nid, 144.424454256417 AS "E" UNION ALL SELECT 27 AS nid, 156.85798347147366 AS "E" UNION ALL SELECT 31 AS nid, 11.979848483268036 AS "E" UNION ALL SELECT 32 AS nid, 23.511748777975313 AS "E" UNION ALL SELECT 34 AS nid, -27.42654029072463 AS "E" UNION ALL SELECT 35 AS nid, -32.3700606387813 AS "E" UNION ALL SELECT 38 AS nid, -14.482521662072362 AS "E" UNION ALL SELECT 39 AS nid, -33.337014733450744 AS "E" UNION ALL SELECT 41 AS nid, 210.19737687026083 AS "E" UNION ALL SELECT 42 AS nid, 373.2958762353178 AS "E") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."E" AS "E" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"BAG_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."E" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.8095761239528656) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.9782909452915192) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.014573076623491943) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.04512178339064121) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.4225664883852005) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.44942520558834076) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 1.399146854877472) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.27082373201847076) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.05861467123031616) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.9898144602775574) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.601702518761158) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.12937448173761368) THEN 20 ELSE 21 END ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.6308369636535645) THEN 24 ELSE 25 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.262357197701931) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.6946527063846588) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6101153790950775) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.8141590803861618) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.8622722029685974) THEN 33 ELSE 34 END ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.23263979703187943) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.060503359884023666) THEN 38 ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.2787798047065735) THEN 41 ELSE 42 END END END END AS node_id_2 
FROM "TMP_20221018185408_H05TKAM_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -296.8393166750528 AS "E" UNION ALL SELECT 6 AS nid, -177.75033458301976 AS "E" UNION ALL SELECT 8 AS nid, -141.6348852658934 AS "E" UNION ALL SELECT 9 AS nid, -31.80056391393078 AS "E" UNION ALL SELECT 12 AS nid, -102.85089819030136 AS "E" UNION ALL SELECT 13 AS nid, 12.145058713842305 AS "E" UNION ALL SELECT 15 AS nid, 290.70915409731754 AS "E" UNION ALL SELECT 16 AS nid, 320.6826523308587 AS "E" UNION ALL SELECT 20 AS nid, 150.6412188639453 AS "E" UNION ALL SELECT 21 AS nid, 191.5521549407964 AS "E" UNION ALL SELECT 22 AS nid, 259.87552025822583 AS "E" UNION ALL SELECT 24 AS nid, 447.6909835452225 AS "E" UNION ALL SELECT 25 AS nid, 316.51213779149236 AS "E" UNION ALL SELECT 29 AS nid, 228.58868551702315 AS "E" UNION ALL SELECT 30 AS nid, 325.0738816201826 AS "E" UNION ALL SELECT 33 AS nid, 60.60536391637268 AS "E" UNION ALL SELECT 34 AS nid, 113.4408795258052 AS "E" UNION ALL SELECT 35 AS nid, 198.97164294103214 AS "E" UNION ALL SELECT 38 AS nid, 243.63801061508232 AS "E" UNION ALL SELECT 39 AS nid, 277.9812845098006 AS "E" UNION ALL SELECT 41 AS nid, 360.6157244330813 AS "E" UNION ALL SELECT 42 AS nid, 393.261092787257 AS "E") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."E" AS "E" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"BAG_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."E" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.4185757488012314) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.09774368163198233) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.929365485906601) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.0123246237635612) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.10032571479678154) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.28435469418764114) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.6788381934165955) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.1501882653683424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.2280818521976471) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.4127510190010071) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.02638519264291972) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.569673478603363) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.06553857028484344) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.09259194508194923) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.6506281197071075) THEN 29 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.030735751381143928) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.3158585727214813) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.7451171725988388) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6720361113548279) THEN 36 ELSE 37 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.4668203145265579) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.020799100399017334) THEN 40 ELSE 41 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.6469647884368896) THEN 43 ELSE 44 END END END END END AS node_id_2 
FROM "TMP_20221018185408_H05TKAM_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 4 AS nid, -459.030670753418 AS "E" UNION ALL SELECT 5 AS nid, -305.6750972104841 AS "E" UNION ALL SELECT 8 AS nid, -182.332005662268 AS "E" UNION ALL SELECT 9 AS nid, -218.8008220663133 AS "E" UNION ALL SELECT 11 AS nid, -53.55855810403281 AS "E" UNION ALL SELECT 12 AS nid, -122.95886223941 AS "E" UNION ALL SELECT 16 AS nid, -116.6762085558222 AS "E" UNION ALL SELECT 17 AS nid, -216.97685028819683 AS "E" UNION ALL SELECT 19 AS nid, -181.5117298102302 AS "E" UNION ALL SELECT 20 AS nid, 17.619280054329796 AS "E" UNION ALL SELECT 23 AS nid, 15.08637447863128 AS "E" UNION ALL SELECT 24 AS nid, 128.21020798682676 AS "E" UNION ALL SELECT 26 AS nid, 320.6826523308587 AS "E" UNION ALL SELECT 27 AS nid, 376.9384086101691 AS "E" UNION ALL SELECT 29 AS nid, -298.79907558939374 AS "E" UNION ALL SELECT 33 AS nid, -9.185160907179679 AS "E" UNION ALL SELECT 34 AS nid, -67.71218597426643 AS "E" UNION ALL SELECT 36 AS nid, 110.3200350045053 AS "E" UNION ALL SELECT 37 AS nid, 264.36874100027603 AS "E" UNION ALL SELECT 40 AS nid, 169.37489455103199 AS "E" UNION ALL SELECT 41 AS nid, 265.0347129627642 AS "E" UNION ALL SELECT 43 AS nid, 314.9874715901854 AS "E" UNION ALL SELECT 44 AS nid, 479.70721604450864 AS "E") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."E" AS "E" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"BAG_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."E" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.7928295135498047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.2923084795475006) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.8589808344841003) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.1683640480041504) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.5423945784568787) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.33297400921583176) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.13702774047851562) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -1.1580844148993492) THEN 13 ELSE 14 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7820444479584694) THEN 16 ELSE 17 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.0016293618828058243) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.17639855295419693) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.435245156288147) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 0.47935765981674194) THEN 22 ELSE 23 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.12735484912991524) THEN 25 ELSE 26 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.08869194984436035) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.9192926287651062) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.08243445307016373) THEN 32 ELSE 33 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.7241815030574799) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.014819040894508362) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.19140076637268066) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.719450406730175) THEN 40 ELSE 41 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.07108019292354584) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.015767760574817657) THEN 44 ELSE 45 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.8856830894947052) THEN 47 ELSE 48 END END END END END AS node_id_2 
FROM "TMP_20221018185408_H05TKAM_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -459.030670753418 AS "E" UNION ALL SELECT 6 AS nid, -248.32160218228188 AS "E" UNION ALL SELECT 7 AS nid, -147.90439308994004 AS "E" UNION ALL SELECT 9 AS nid, -280.43388966888915 AS "E" UNION ALL SELECT 10 AS nid, -351.3842930876292 AS "E" UNION ALL SELECT 13 AS nid, -20.27001010137917 AS "E" UNION ALL SELECT 14 AS nid, -53.55855810403281 AS "E" UNION ALL SELECT 16 AS nid, 259.87552025822583 AS "E" UNION ALL SELECT 17 AS nid, 235.3201708856319 AS "E" UNION ALL SELECT 22 AS nid, -200.84036412184003 AS "E" UNION ALL SELECT 23 AS nid, -134.4576341722804 AS "E" UNION ALL SELECT 25 AS nid, 27.468904490490246 AS "E" UNION ALL SELECT 26 AS nid, -65.1682960187446 AS "E" UNION ALL SELECT 29 AS nid, -5.736516341880559 AS "E" UNION ALL SELECT 30 AS nid, 34.804100287796395 AS "E" UNION ALL SELECT 32 AS nid, 156.85798347147366 AS "E" UNION ALL SELECT 33 AS nid, 144.424454256417 AS "E" UNION ALL SELECT 37 AS nid, -33.01469670189426 AS "E" UNION ALL SELECT 38 AS nid, -1.7010602277926026 AS "E" UNION ALL SELECT 40 AS nid, 116.8891961793557 AS "E" UNION ALL SELECT 41 AS nid, 58.56592202346141 AS "E" UNION ALL SELECT 44 AS nid, 53.72934572915507 AS "E" UNION ALL SELECT 45 AS nid, 285.43270621338684 AS "E" UNION ALL SELECT 47 AS nid, 257.2478167667274 AS "E" UNION ALL SELECT 48 AS nid, 371.49751388447316 AS "E") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."E" AS "E" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"BAG_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."E" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.007927310187369585) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.6936891376972198) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.0870668292045593) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.128759503364563) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.06141167879104614) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.44873759150505066) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.8831796050071716) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.6017136871814728) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 1.183385819196701) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.2576393336057663) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 1.9634636640548706) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.7544156014919281) THEN 21 ELSE 22 END END ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.02928116451948881) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.8083431720733643) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.7062302529811859) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.10636130790226161) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.1874106116592884) THEN 31 ELSE 32 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.41880156099796295) THEN 34 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.4929808974266052) THEN 36 ELSE 37 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.1847696714103222) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 0.09416648745536804) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.01517878845334053) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.4655503034591675) THEN 44 ELSE 45 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 2.0447340607643127) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.6538205444812775) THEN 48 ELSE 49 END ELSE 50 END END END END AS node_id_2 
FROM "TMP_20221018185408_H05TKAM_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -351.3842930876292 AS "E" UNION ALL SELECT 6 AS nid, -422.39029400237723 AS "E" UNION ALL SELECT 7 AS nid, -165.64587304935068 AS "E" UNION ALL SELECT 10 AS nid, -230.44575983747174 AS "E" UNION ALL SELECT 11 AS nid, -117.15459506541961 AS "E" UNION ALL SELECT 13 AS nid, -40.096605668758485 AS "E" UNION ALL SELECT 14 AS nid, 156.74808220262196 AS "E" UNION ALL SELECT 18 AS nid, 50.36841271110087 AS "E" UNION ALL SELECT 19 AS nid, 116.8891961793557 AS "E" UNION ALL SELECT 21 AS nid, -33.337014733450744 AS "E" UNION ALL SELECT 22 AS nid, -101.20974879377152 AS "E" UNION ALL SELECT 23 AS nid, 393.261092787257 AS "E" UNION ALL SELECT 28 AS nid, -181.5117298102302 AS "E" UNION ALL SELECT 29 AS nid, -251.2683418956458 AS "E" UNION ALL SELECT 31 AS nid, 22.30851676353701 AS "E" UNION ALL SELECT 32 AS nid, -33.06227029601031 AS "E" UNION ALL SELECT 34 AS nid, 156.85798347147366 AS "E" UNION ALL SELECT 36 AS nid, 277.9812845098006 AS "E" UNION ALL SELECT 37 AS nid, 235.3201708856319 AS "E" UNION ALL SELECT 41 AS nid, 79.5768303814577 AS "E" UNION ALL SELECT 42 AS nid, 198.97164294103217 AS "E" UNION ALL SELECT 44 AS nid, 210.4674417575487 AS "E" UNION ALL SELECT 45 AS nid, 304.28869590087277 AS "E" UNION ALL SELECT 48 AS nid, 270.15339820458973 AS "E" UNION ALL SELECT 49 AS nid, 344.4919380068218 AS "E" UNION ALL SELECT 50 AS nid, 479.70721604450864 AS "E") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."E" AS "E" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"BAG_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."E" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.007927310187369585) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.6461533010005951) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.7652519196271896) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.3587387800216675) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.4619877189397812) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.15017152205109596) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 1.0033684968948364) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.7406691908836365) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.6827855259180069) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.3240702226758003) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.0289670526981354) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.4961199462413788) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.5310096740722656) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.1660155951976776) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.218040831387043) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.11110728979110718) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.11874869093298912) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.3447260521352291) THEN 32 ELSE 33 END ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -1.7344289422035217) THEN 36 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.20415764302015305) THEN 38 ELSE 39 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.2978788912296295) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.2148299515247345) THEN 42 ELSE 43 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.2278449535369873) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.6635289490222931) THEN 46 ELSE 47 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.4668203145265579) THEN 49 ELSE 50 END END END END END AS node_id_2 
FROM "TMP_20221018185408_H05TKAM_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 4 AS nid, -459.030670753418 AS "E" UNION ALL SELECT 5 AS nid, -422.39029400237723 AS "E" UNION ALL SELECT 8 AS nid, -202.31673701056397 AS "E" UNION ALL SELECT 9 AS nid, -147.92721988532008 AS "E" UNION ALL SELECT 11 AS nid, -53.55855810403281 AS "E" UNION ALL SELECT 12 AS nid, -101.20974879377152 AS "E" UNION ALL SELECT 16 AS nid, -223.26828856161853 AS "E" UNION ALL SELECT 17 AS nid, -140.8312353487667 AS "E" UNION ALL SELECT 19 AS nid, -74.45046084947587 AS "E" UNION ALL SELECT 20 AS nid, -17.441292989654784 AS "E" UNION ALL SELECT 23 AS nid, 58.674636164574274 AS "E" UNION ALL SELECT 24 AS nid, 44.29871810773542 AS "E" UNION ALL SELECT 26 AS nid, 11.979848483268036 AS "E" UNION ALL SELECT 27 AS nid, -8.541514583322922 AS "E" UNION ALL SELECT 32 AS nid, -268.1904323885528 AS "E" UNION ALL SELECT 33 AS nid, -154.40083699334056 AS "E" UNION ALL SELECT 34 AS nid, 144.424454256417 AS "E" UNION ALL SELECT 36 AS nid, 156.85798347147366 AS "E" UNION ALL SELECT 38 AS nid, 36.64726905648302 AS "E" UNION ALL SELECT 39 AS nid, -1.8090427707124448 AS "E" UNION ALL SELECT 42 AS nid, -298.79907558939374 AS "E" UNION ALL SELECT 43 AS nid, -20.4235287408218 AS "E" UNION ALL SELECT 46 AS nid, -27.42654029072463 AS "E" UNION ALL SELECT 47 AS nid, 113.4408795258052 AS "E" UNION ALL SELECT 49 AS nid, 220.69433824924843 AS "E" UNION ALL SELECT 50 AS nid, 389.66883267552987 AS "E") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."E" AS "E" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"BAG_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."E" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.8083431720733643) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.7477214932441711) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.9403623640537262) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.1683640480041504) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.6157704889774323) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.7485633790493011) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.01286462601274252) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.8831796050071716) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.14383190218359232) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.10793066024780273) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.2455085664987564) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.062260404229164124) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.4694274514913559) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 1.6634272336959839) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.7375079393386841) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.30469074100255966) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.9782909452915192) THEN 32 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.08243445307016373) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.3019660413265228) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.8450774252414703) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7820444479584694) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.4696799535304308) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.9758015275001526) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -1.0312672555446625) THEN 46 ELSE 47 END ELSE 48 END END END END AS node_id_2 
FROM "TMP_20221018185408_H05TKAM_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -219.73048001310286 AS "E" UNION ALL SELECT 6 AS nid, -69.44228833394571 AS "E" UNION ALL SELECT 8 AS nid, -422.39029400237723 AS "E" UNION ALL SELECT 9 AS nid, -316.3274814221389 AS "E" UNION ALL SELECT 12 AS nid, -224.07377768185083 AS "E" UNION ALL SELECT 13 AS nid, -67.8740888192385 AS "E" UNION ALL SELECT 15 AS nid, 212.28993399393994 AS "E" UNION ALL SELECT 16 AS nid, 13.66733519279175 AS "E" UNION ALL SELECT 19 AS nid, -284.890410429711 AS "E" UNION ALL SELECT 21 AS nid, 62.64480580928396 AS "E" UNION ALL SELECT 22 AS nid, -6.190722744000084 AS "E" UNION ALL SELECT 25 AS nid, 240.96884028801762 AS "E" UNION ALL SELECT 26 AS nid, 113.4408795258052 AS "E" UNION ALL SELECT 28 AS nid, 479.70721604450864 AS "E" UNION ALL SELECT 29 AS nid, 376.9384086101691 AS "E" UNION ALL SELECT 32 AS nid, -9.185160907179679 AS "E" UNION ALL SELECT 34 AS nid, 156.85798347147366 AS "E" UNION ALL SELECT 35 AS nid, 144.424454256417 AS "E" UNION ALL SELECT 39 AS nid, 259.87552025822583 AS "E" UNION ALL SELECT 40 AS nid, 235.3201708856319 AS "E" UNION ALL SELECT 42 AS nid, 194.4087167101487 AS "E" UNION ALL SELECT 43 AS nid, 191.5521549407964 AS "E" UNION ALL SELECT 46 AS nid, 349.4216823421892 AS "E" UNION ALL SELECT 47 AS nid, 318.6525737486649 AS "E" UNION ALL SELECT 48 AS nid, 277.9812845098006 AS "E") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."E" AS "E" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"BAG_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."E" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.5968423783779144) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.7631610631942749) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.1942983269691467) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.7743398547172546) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.5036529749631882) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.4635252505540848) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.33297400921583176) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.6833348260261118) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.12877562269568443) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.8831796050071716) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.558073453605175) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.3414004445075989) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.5483598634600639) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.42556802928447723) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.02671101689338684) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.9470257759094238) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.5247380211949348) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 1.0033684968948364) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.19262078404426575) THEN 35 ELSE 36 END END ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 1.3501418828964233) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.2658329978585243) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.8518762290477753) THEN 41 ELSE 42 END ELSE 43 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.6595296263694763) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 1.7434358596801758e-05) THEN 46 ELSE 47 END ELSE 48 END END END END AS node_id_2 
FROM "TMP_20221018185408_H05TKAM_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -284.890410429711 AS "E" UNION ALL SELECT 6 AS nid, -230.736136275325 AS "E" UNION ALL SELECT 8 AS nid, -172.5107073759061 AS "E" UNION ALL SELECT 9 AS nid, -91.26313837062213 AS "E" UNION ALL SELECT 12 AS nid, -298.79907558939374 AS "E" UNION ALL SELECT 13 AS nid, -268.1904323885528 AS "E" UNION ALL SELECT 14 AS nid, -351.3842930876292 AS "E" UNION ALL SELECT 18 AS nid, -232.60163967296094 AS "E" UNION ALL SELECT 19 AS nid, -182.68535868074787 AS "E" UNION ALL SELECT 21 AS nid, -94.74256140588878 AS "E" UNION ALL SELECT 22 AS nid, 7.939808257969103 AS "E" UNION ALL SELECT 24 AS nid, -8.541514583322922 AS "E" UNION ALL SELECT 26 AS nid, 131.60358684276534 AS "E" UNION ALL SELECT 27 AS nid, 232.03025796389625 AS "E" UNION ALL SELECT 32 AS nid, -53.55855810403281 AS "E" UNION ALL SELECT 33 AS nid, -101.20974879377152 AS "E" UNION ALL SELECT 35 AS nid, 53.47827181456171 AS "E" UNION ALL SELECT 36 AS nid, -33.337014733450744 AS "E" UNION ALL SELECT 37 AS nid, 393.261092787257 AS "E" UNION ALL SELECT 41 AS nid, 228.58868551702315 AS "E" UNION ALL SELECT 42 AS nid, 259.87552025822583 AS "E" UNION ALL SELECT 43 AS nid, 194.4087167101487 AS "E" UNION ALL SELECT 46 AS nid, 290.70915409731754 AS "E" UNION ALL SELECT 47 AS nid, 334.71460629989144 AS "E" UNION ALL SELECT 48 AS nid, 447.6909835452225 AS "E") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."E" AS "E" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"BAG_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."E" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.5968423783779144) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.41629238426685333) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.14091176725924015) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7203118205070496) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.0065246522426605) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.9757114350795746) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -1.5120097994804382) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.6635289490222931) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.3784916251897812) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.44873759150505066) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.2500613331794739) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.43696703016757965) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.4288088530302048) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.23121614009141922) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.22233962267637253) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.7794442772865295) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.271692305803299) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.7718353867530823) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.6338682174682617) THEN 34 ELSE 35 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.6410861611366272) THEN 37 ELSE 38 END END ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.1398407220840454) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.867460161447525) THEN 42 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.3618583455681801) THEN 44 ELSE 45 END END ELSE 46 END END END AS node_id_2 
FROM "TMP_20221018185408_H05TKAM_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -459.030670753418 AS "E" UNION ALL SELECT 6 AS nid, -422.39029400237723 AS "E" UNION ALL SELECT 8 AS nid, -302.2370863999389 AS "E" UNION ALL SELECT 9 AS nid, -189.91140236616562 AS "E" UNION ALL SELECT 11 AS nid, -268.1904323885528 AS "E" UNION ALL SELECT 13 AS nid, -21.180537535076915 AS "E" UNION ALL SELECT 14 AS nid, 113.4408795258052 AS "E" UNION ALL SELECT 18 AS nid, -116.62359064504474 AS "E" UNION ALL SELECT 19 AS nid, -181.59010118206146 AS "E" UNION ALL SELECT 21 AS nid, -37.85888703414681 AS "E" UNION ALL SELECT 22 AS nid, 156.74808220262196 AS "E" UNION ALL SELECT 25 AS nid, 179.677222869583 AS "E" UNION ALL SELECT 26 AS nid, 44.7353134574793 AS "E" UNION ALL SELECT 28 AS nid, 301.7007710268693 AS "E" UNION ALL SELECT 29 AS nid, 213.36986109537537 AS "E" UNION ALL SELECT 34 AS nid, 325.0738816201826 AS "E" UNION ALL SELECT 35 AS nid, 320.6826523308587 AS "E" UNION ALL SELECT 37 AS nid, 360.61572443308125 AS "E" UNION ALL SELECT 38 AS nid, 351.37130796411674 AS "E" UNION ALL SELECT 39 AS nid, 447.6909835452225 AS "E" UNION ALL SELECT 42 AS nid, 194.4087167101487 AS "E" UNION ALL SELECT 44 AS nid, 246.88551254371106 AS "E" UNION ALL SELECT 45 AS nid, 290.70915409731754 AS "E" UNION ALL SELECT 46 AS nid, 58.56592202346141 AS "E") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."E" AS "E" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"BAG_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."E" AS "Estimator" 
FROM "DT_Output_9")
 INSERT INTO "TMP_20221018185408_T662SQI_BAG_B0" ("KEY", "Estimator") SELECT "T"."KEY", "T"."Estimator" 
FROM (SELECT "BAG_B0"."KEY" AS "KEY", "BAG_B0"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_esu_0"."KEY" AS "KEY", "BAG_esu_0"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Model_0"."KEY" AS "KEY", "BAG_Model_0"."Estimator" AS "Estimator" 
FROM "BAG_Model_0" UNION ALL SELECT "BAG_Model_1"."KEY" AS "KEY", "BAG_Model_1"."Estimator" AS "Estimator" 
FROM "BAG_Model_1" UNION ALL SELECT "BAG_Model_2"."KEY" AS "KEY", "BAG_Model_2"."Estimator" AS "Estimator" 
FROM "BAG_Model_2" UNION ALL SELECT "BAG_Model_3"."KEY" AS "KEY", "BAG_Model_3"."Estimator" AS "Estimator" 
FROM "BAG_Model_3" UNION ALL SELECT "BAG_Model_4"."KEY" AS "KEY", "BAG_Model_4"."Estimator" AS "Estimator" 
FROM "BAG_Model_4" UNION ALL SELECT "BAG_Model_5"."KEY" AS "KEY", "BAG_Model_5"."Estimator" AS "Estimator" 
FROM "BAG_Model_5" UNION ALL SELECT "BAG_Model_6"."KEY" AS "KEY", "BAG_Model_6"."Estimator" AS "Estimator" 
FROM "BAG_Model_6" UNION ALL SELECT "BAG_Model_7"."KEY" AS "KEY", "BAG_Model_7"."Estimator" AS "Estimator" 
FROM "BAG_Model_7" UNION ALL SELECT "BAG_Model_8"."KEY" AS "KEY", "BAG_Model_8"."Estimator" AS "Estimator" 
FROM "BAG_Model_8" UNION ALL SELECT "BAG_Model_9"."KEY" AS "KEY", "BAG_Model_9"."Estimator" AS "Estimator" 
FROM "BAG_Model_9") AS "BAG_esu_0") AS "BAG_B0") AS "T"

-- Code For temporary table TMP_20221018185408_W6WHJAJ_BAG_B1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185408_W6WHJAJ_BAG_B1" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)



-- Code For temporary table TMP_20221018185408_W6WHJAJ_BAG_B1 part 2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.14761683717370033) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.7928295135498047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.037589069455862045) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.09779385291039944) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.21820064028725028) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -1.292105495929718) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 1.1245399713516235) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.412977010011673) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 0.8996148705482483) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -1.5609650611877441) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -1.158886380493641) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 1.48618895560503) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.14351950585842133) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.9470257759094238) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.30570174753665924) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.2788571119308472) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.08295763656497002) THEN 31 ELSE 32 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.22109383344650269) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.4668203145265579) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.22441939264535904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5118970908224583) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.2658329978585243) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 1.8639472126960754) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.9868417382240295) THEN 46 ELSE 47 END ELSE 48 END END END END AS node_id_2 
FROM "TMP_20221018185408_H05TKAM_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -351.3842930876292 AS "E" UNION ALL SELECT 6 AS nid, -302.2370863999389 AS "E" UNION ALL SELECT 7 AS nid, -422.39029400237723 AS "E" UNION ALL SELECT 9 AS nid, -268.1904323885528 AS "E" UNION ALL SELECT 11 AS nid, -186.24037602901686 AS "E" UNION ALL SELECT 12 AS nid, -220.54552688833127 AS "E" UNION ALL SELECT 16 AS nid, -181.5117298102302 AS "E" UNION ALL SELECT 17 AS nid, -10.107002207882893 AS "E" UNION ALL SELECT 19 AS nid, -140.8312353487667 AS "E" UNION ALL SELECT 20 AS nid, -223.26828856161853 AS "E" UNION ALL SELECT 22 AS nid, 191.5521549407964 AS "E" UNION ALL SELECT 23 AS nid, 447.6909835452225 AS "E" UNION ALL SELECT 28 AS nid, 68.71818078600755 AS "E" UNION ALL SELECT 29 AS nid, -4.1450808090555675 AS "E" UNION ALL SELECT 31 AS nid, -237.15037500402434 AS "E" UNION ALL SELECT 32 AS nid, -90.66860045260819 AS "E" UNION ALL SELECT 34 AS nid, 360.61572443308125 AS "E" UNION ALL SELECT 35 AS nid, 393.261092787257 AS "E" UNION ALL SELECT 39 AS nid, 62.64480580928396 AS "E" UNION ALL SELECT 40 AS nid, 144.424454256417 AS "E" UNION ALL SELECT 42 AS nid, 258.9702911953818 AS "E" UNION ALL SELECT 43 AS nid, 196.6901798255904 AS "E" UNION ALL SELECT 46 AS nid, 331.2414647411023 AS "E" UNION ALL SELECT 47 AS nid, 228.58868551702315 AS "E" UNION ALL SELECT 48 AS nid, 479.70721604450864 AS "E") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."E" AS "E" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"BAG_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."E" AS "Estimator" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 1.374468743801117) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.5463549196720123) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.24096271395683289) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.13666564971208572) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.22167320922017097) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.7872759401798248) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.015268662944436073) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.2609769105911255) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.7315464615821838) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.6921540200710297) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.37174221873283386) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.4766360521316528) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.9546775817871094) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.36062175035476685) THEN 26 ELSE 27 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.689899742603302) THEN 29 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.4639790058135986) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.07509645819664) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 0.4519040733575821) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.4534766413271427) THEN 36 ELSE 37 END END ELSE 38 END END END AS node_id_2 
FROM "TMP_20221018185408_H05TKAM_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -280.7193583286338 AS "E" UNION ALL SELECT 6 AS nid, -175.65755261710106 AS "E" UNION ALL SELECT 8 AS nid, -210.35491750133752 AS "E" UNION ALL SELECT 9 AS nid, -86.94585495094174 AS "E" UNION ALL SELECT 12 AS nid, -223.701358526806 AS "E" UNION ALL SELECT 13 AS nid, -59.482116826569 AS "E" UNION ALL SELECT 15 AS nid, -9.877803496887982 AS "E" UNION ALL SELECT 16 AS nid, 234.9576999227116 AS "E" UNION ALL SELECT 20 AS nid, 248.4594837465909 AS "E" UNION ALL SELECT 21 AS nid, 169.37489455103199 AS "E" UNION ALL SELECT 23 AS nid, 349.42168234218923 AS "E" UNION ALL SELECT 24 AS nid, 316.51213779149236 AS "E" UNION ALL SELECT 26 AS nid, 62.64480580928396 AS "E" UNION ALL SELECT 27 AS nid, -9.185160907179679 AS "E" UNION ALL SELECT 29 AS nid, 116.8891961793557 AS "E" UNION ALL SELECT 33 AS nid, 355.99351619859897 AS "E" UNION ALL SELECT 34 AS nid, 322.43914404658824 AS "E" UNION ALL SELECT 36 AS nid, 290.70915409731754 AS "E" UNION ALL SELECT 37 AS nid, 243.63801061508232 AS "E" UNION ALL SELECT 38 AS nid, 447.6909835452225 AS "E") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."E" AS "E" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"BAG_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."E" AS "Estimator" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.0714151170104742) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.34513597190380096) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.0795968770980835) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.526381503790617) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.046369969844818115) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.6540780365467072) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.8646484613418579) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.47950613498687744) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.36121538281440735) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.1288725510239601) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.5617499351501465) THEN 18 ELSE 19 END ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.08463533222675323) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.9524809122085571) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.46485866606235504) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.7613807618618011) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -2.014664351940155) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 0.005976766347885132) THEN 32 ELSE 33 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.8129599392414093) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.8326379656791687) THEN 36 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.05869222991168499) THEN 38 ELSE 39 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.6595296263694763) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.1847696714103222) THEN 42 ELSE 43 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.7151849269866943) THEN 45 ELSE 46 END END END END END AS node_id_2 
FROM "TMP_20221018185408_H05TKAM_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -351.3842930876292 AS "E" UNION ALL SELECT 6 AS nid, -261.02039271686766 AS "E" UNION ALL SELECT 7 AS nid, -154.40083699334056 AS "E" UNION ALL SELECT 10 AS nid, -148.3033043201361 AS "E" UNION ALL SELECT 11 AS nid, -53.646713296481664 AS "E" UNION ALL SELECT 13 AS nid, 2.894562869633976 AS "E" UNION ALL SELECT 14 AS nid, 54.027615667111796 AS "E" UNION ALL SELECT 18 AS nid, 37.34665341388054 AS "E" UNION ALL SELECT 19 AS nid, 8.923656244969493 AS "E" UNION ALL SELECT 20 AS nid, -27.42654029072463 AS "E" UNION ALL SELECT 22 AS nid, 144.424454256417 AS "E" UNION ALL SELECT 23 AS nid, 277.9812845098006 AS "E" UNION ALL SELECT 26 AS nid, 325.0738816201826 AS "E" UNION ALL SELECT 29 AS nid, -210.35491750133752 AS "E" UNION ALL SELECT 30 AS nid, -301.0910827964239 AS "E" UNION ALL SELECT 32 AS nid, -101.20974879377154 AS "E" UNION ALL SELECT 33 AS nid, -165.64587304935068 AS "E" UNION ALL SELECT 36 AS nid, 58.56592202346141 AS "E" UNION ALL SELECT 38 AS nid, -8.541514583322922 AS "E" UNION ALL SELECT 39 AS nid, -24.728024071698115 AS "E" UNION ALL SELECT 42 AS nid, 178.16748523167632 AS "E" UNION ALL SELECT 43 AS nid, 276.9984668874918 AS "E" UNION ALL SELECT 45 AS nid, 447.6909835452225 AS "E" UNION ALL SELECT 46 AS nid, 479.70721604450864 AS "E") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."E" AS "E" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"BAG_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."E" AS "Estimator" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.5733436048030853) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.9403623640537262) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.1683640480041504) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.7743398547172546) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8429703637957573) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.5570704191923141) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.7485633790493011) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.0433351397514343) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.33297400921583176) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.0714151170104742) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.7111696898937225) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.2539488971233368) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.4027109742164612) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.49287089705467224) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.14913317561149597) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.763214111328125) THEN 30 ELSE 31 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.40230631828308105) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 1.1881286799907684) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.49766872823238373) THEN 35 ELSE 36 END ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.38173192739486694) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 0.30690107494592667) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.12937448173761368) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.03796053338737693) THEN 44 ELSE 45 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.4384416937828064) THEN 47 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.0244731605052948) THEN 49 ELSE 50 END END END END END AS node_id_2 
FROM "TMP_20221018185408_H05TKAM_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -230.736136275325 AS "E" UNION ALL SELECT 6 AS nid, -298.74686828355976 AS "E" UNION ALL SELECT 8 AS nid, -78.8780402474348 AS "E" UNION ALL SELECT 9 AS nid, -175.94312453918377 AS "E" UNION ALL SELECT 12 AS nid, -422.39029400237723 AS "E" UNION ALL SELECT 13 AS nid, -459.030670753418 AS "E" UNION ALL SELECT 15 AS nid, -298.79907558939374 AS "E" UNION ALL SELECT 16 AS nid, -351.3842930876292 AS "E" UNION ALL SELECT 20 AS nid, -141.94613915313002 AS "E" UNION ALL SELECT 21 AS nid, 6.036912424622535 AS "E" UNION ALL SELECT 23 AS nid, -154.40083699334056 AS "E" UNION ALL SELECT 24 AS nid, 14.734113255047495 AS "E" UNION ALL SELECT 27 AS nid, 108.76911660152867 AS "E" UNION ALL SELECT 28 AS nid, 340.4981657801722 AS "E" UNION ALL SELECT 30 AS nid, -10.8893497000069 AS "E" UNION ALL SELECT 31 AS nid, 136.81863919098882 AS "E" UNION ALL SELECT 35 AS nid, 8.923656244969493 AS "E" UNION ALL SELECT 36 AS nid, 38.71263785211542 AS "E" UNION ALL SELECT 37 AS nid, 113.4408795258052 AS "E" UNION ALL SELECT 41 AS nid, 144.424454256417 AS "E" UNION ALL SELECT 42 AS nid, 191.5521549407964 AS "E" UNION ALL SELECT 44 AS nid, 255.02914017707042 AS "E" UNION ALL SELECT 45 AS nid, 235.3201708856319 AS "E" UNION ALL SELECT 47 AS nid, 310.60889077931495 AS "E" UNION ALL SELECT 49 AS nid, 351.37130796411674 AS "E" UNION ALL SELECT 50 AS nid, 349.42168234218923 AS "E") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."E" AS "E" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"BAG_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."E" AS "Estimator" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.7928295135498047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.02689894288778305) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3474148511886597) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.11131975054740906) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.4039987921714783) THEN 7 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -1.6699602603912354) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.07942460477352142) THEN 12 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.5254598148167133) THEN 14 ELSE 15 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.02928116451948881) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.2280818521976471) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.7118693739175797) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.8952226638793945) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.12799368053674698) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.3696195185184479) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.9340450465679169) THEN 28 ELSE 29 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.9207028448581696) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.22053303569555283) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.5949422046542168) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.19498779997229576) THEN 36 ELSE 37 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.03570308908820152) THEN 39 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.3521354496479034) THEN 41 ELSE 42 END END END END END AS node_id_2 
FROM "TMP_20221018185408_H05TKAM_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 4 AS nid, -186.24037602901686 AS "E" UNION ALL SELECT 5 AS nid, -101.20974879377152 AS "E" UNION ALL SELECT 7 AS nid, -351.3842930876292 AS "E" UNION ALL SELECT 9 AS nid, -230.736136275325 AS "E" UNION ALL SELECT 10 AS nid, -287.88930607959395 AS "E" UNION ALL SELECT 12 AS nid, -103.03861456879999 AS "E" UNION ALL SELECT 14 AS nid, -53.55855810403281 AS "E" UNION ALL SELECT 15 AS nid, -20.27001010137917 AS "E" UNION ALL SELECT 20 AS nid, -251.2683418956458 AS "E" UNION ALL SELECT 21 AS nid, -170.8778001713565 AS "E" UNION ALL SELECT 23 AS nid, 44.29871810773541 AS "E" UNION ALL SELECT 24 AS nid, -90.0890135165784 AS "E" UNION ALL SELECT 26 AS nid, -223.26828856161853 AS "E" UNION ALL SELECT 28 AS nid, 7.528642560155762 AS "E" UNION ALL SELECT 29 AS nid, 124.78441218316149 AS "E" UNION ALL SELECT 33 AS nid, 116.8891961793557 AS "E" UNION ALL SELECT 34 AS nid, 36.7289805943657 AS "E" UNION ALL SELECT 36 AS nid, 178.881975555223 AS "E" UNION ALL SELECT 37 AS nid, 269.7758322103218 AS "E" UNION ALL SELECT 39 AS nid, 243.63801061508232 AS "E" UNION ALL SELECT 41 AS nid, 393.261092787257 AS "E" UNION ALL SELECT 42 AS nid, 466.9007230447942 AS "E") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."E" AS "E" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"BAG_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."E" AS "Estimator" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.6538744866847992) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.10237983166007325) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.3131030257791281) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5081993937492371) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.33297400921583176) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5220221430063248) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.5251271277666092) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.46851202845573425) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.435245156288147) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.06640006229281425) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.568042054772377) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.22195777297019958) THEN 22 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.8127046674489975) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.4198857247829437) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.6365488171577454) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 0.6820541024208069) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.005953516811132431) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.2738999165594578) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.8943517804145813) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 1.0247983932495117) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.8130553960800171) THEN 40 ELSE 41 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.07860141586570535) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.8050214052200317) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.9407249987125397) THEN 45 ELSE 46 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -1.1479481905698776) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.2802700996398926) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.8302455991506577) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.005341321229934692) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM "TMP_20221018185408_H05TKAM_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -298.79907558939374 AS "E" UNION ALL SELECT 6 AS nid, -351.3842930876292 AS "E" UNION ALL SELECT 7 AS nid, -459.030670753418 AS "E" UNION ALL SELECT 10 AS nid, -273.7570917356055 AS "E" UNION ALL SELECT 11 AS nid, -223.94239668399587 AS "E" UNION ALL SELECT 12 AS nid, -101.20974879377152 AS "E" UNION ALL SELECT 16 AS nid, -121.15191600379298 AS "E" UNION ALL SELECT 17 AS nid, -165.64587304935068 AS "E" UNION ALL SELECT 19 AS nid, -20.27001010137917 AS "E" UNION ALL SELECT 20 AS nid, -49.96946031186734 AS "E" UNION ALL SELECT 22 AS nid, 325.0738816201826 AS "E" UNION ALL SELECT 24 AS nid, 228.58868551702315 AS "E" UNION ALL SELECT 25 AS nid, 235.3201708856319 AS "E" UNION ALL SELECT 30 AS nid, -126.97154940097111 AS "E" UNION ALL SELECT 31 AS nid, 3.776947440020895 AS "E" UNION ALL SELECT 33 AS nid, 15.489340422486551 AS "E" UNION ALL SELECT 34 AS nid, 136.81863919098882 AS "E" UNION ALL SELECT 37 AS nid, 58.56592202346141 AS "E" UNION ALL SELECT 38 AS nid, -9.617958070006466 AS "E" UNION ALL SELECT 40 AS nid, 220.30388790540798 AS "E" UNION ALL SELECT 41 AS nid, 340.64918838196996 AS "E" UNION ALL SELECT 45 AS nid, -27.42654029072463 AS "E" UNION ALL SELECT 46 AS nid, 8.923656244969493 AS "E" UNION ALL SELECT 48 AS nid, 156.85798347147366 AS "E" UNION ALL SELECT 49 AS nid, 144.424454256417 AS "E" UNION ALL SELECT 52 AS nid, 113.4408795258052 AS "E" UNION ALL SELECT 53 AS nid, 290.8269455889381 AS "E" UNION ALL SELECT 55 AS nid, 447.6909835452225 AS "E" UNION ALL SELECT 56 AS nid, 479.70721604450864 AS "E") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."E" AS "E" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"BAG_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."E" AS "Estimator" 
FROM "DT_Output_15")
 INSERT INTO "TMP_20221018185408_W6WHJAJ_BAG_B1" ("KEY", "Estimator") SELECT "T"."KEY", "T"."Estimator" 
FROM (SELECT "BAG_B1"."KEY" AS "KEY", "BAG_B1"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_esu_1"."KEY" AS "KEY", "BAG_esu_1"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Model_10"."KEY" AS "KEY", "BAG_Model_10"."Estimator" AS "Estimator" 
FROM "BAG_Model_10" UNION ALL SELECT "BAG_Model_11"."KEY" AS "KEY", "BAG_Model_11"."Estimator" AS "Estimator" 
FROM "BAG_Model_11" UNION ALL SELECT "BAG_Model_12"."KEY" AS "KEY", "BAG_Model_12"."Estimator" AS "Estimator" 
FROM "BAG_Model_12" UNION ALL SELECT "BAG_Model_13"."KEY" AS "KEY", "BAG_Model_13"."Estimator" AS "Estimator" 
FROM "BAG_Model_13" UNION ALL SELECT "BAG_Model_14"."KEY" AS "KEY", "BAG_Model_14"."Estimator" AS "Estimator" 
FROM "BAG_Model_14" UNION ALL SELECT "BAG_Model_15"."KEY" AS "KEY", "BAG_Model_15"."Estimator" AS "Estimator" 
FROM "BAG_Model_15") AS "BAG_esu_1") AS "BAG_B1") AS "T"

-- Code For temporary table TMP_20221018185408_036O61U_BAG_avg part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185408_036O61U_BAG_avg" (
	"KEY" BIGINT NOT NULL, 
	"Estimator" FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20221018185408_036O61U_BAG_avg part 2. Populate

WITH "BAG_Union" AS 
(SELECT "BAG_EnsembleUnion"."KEY" AS "KEY", "BAG_EnsembleUnion"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_B0"."KEY" AS "KEY", "BAG_B0"."Estimator" AS "Estimator" 
FROM "TMP_20221018185408_T662SQI_BAG_B0" AS "BAG_B0" UNION ALL SELECT "BAG_B1"."KEY" AS "KEY", "BAG_B1"."Estimator" AS "Estimator" 
FROM "TMP_20221018185408_W6WHJAJ_BAG_B1" AS "BAG_B1") AS "BAG_EnsembleUnion")
 INSERT INTO "TMP_20221018185408_036O61U_BAG_avg" ("KEY", "Estimator") SELECT "T"."KEY", "T"."Estimator" 
FROM (SELECT "BAG_avg"."KEY" AS "KEY", "BAG_avg"."Estimator" AS "Estimator" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT "BAG_Union"."KEY" AS "KEY", avg(CAST("BAG_Union"."Estimator" AS FLOAT)) AS "Estimator" 
FROM "BAG_Union" GROUP BY "BAG_Union"."KEY") AS "T") AS "BAG_avg") AS "T"

-- Code For temporary table TMP_20221018185408_036O61U_BAG_avg part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185408_036O61U_BAG_avg_KEY" ON "TMP_20221018185408_036O61U_BAG_avg" ("KEY")

-- Model deployment code

SELECT "BAG_avg"."KEY" AS "KEY", "BAG_avg"."Estimator" AS "Estimator" 
FROM "TMP_20221018185408_036O61U_BAG_avg" AS "BAG_avg"