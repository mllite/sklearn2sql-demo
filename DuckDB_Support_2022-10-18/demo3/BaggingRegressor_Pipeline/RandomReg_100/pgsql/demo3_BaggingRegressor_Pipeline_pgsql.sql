-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : BaggingRegressor_Pipeline
-- Dataset : RandomReg_100
-- Database : pgsql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018185503_CLLRTAS_ADS_imp_1_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185503_CLLRTAS_ADS_imp_1_OUT" (
	"KEY" BIGINT NOT NULL, 
	impter_2 FLOAT, 
	impter_3 FLOAT, 
	impter_4 FLOAT, 
	impter_5 FLOAT, 
	impter_6 FLOAT, 
	impter_7 FLOAT, 
	impter_8 FLOAT, 
	impter_9 FLOAT, 
	impter_10 FLOAT, 
	impter_11 FLOAT, 
	impter_12 FLOAT, 
	impter_13 FLOAT, 
	impter_14 FLOAT, 
	impter_15 FLOAT, 
	impter_16 FLOAT, 
	impter_17 FLOAT, 
	impter_18 FLOAT, 
	impter_19 FLOAT, 
	impter_20 FLOAT, 
	impter_21 FLOAT, 
	impter_22 FLOAT, 
	impter_23 FLOAT, 
	impter_24 FLOAT, 
	impter_25 FLOAT, 
	impter_26 FLOAT, 
	impter_27 FLOAT, 
	impter_28 FLOAT, 
	impter_29 FLOAT, 
	impter_30 FLOAT, 
	impter_31 FLOAT, 
	impter_32 FLOAT, 
	impter_33 FLOAT, 
	impter_34 FLOAT, 
	impter_35 FLOAT, 
	impter_36 FLOAT, 
	impter_37 FLOAT, 
	impter_38 FLOAT, 
	impter_39 FLOAT, 
	impter_40 FLOAT, 
	impter_41 FLOAT, 
	impter_42 FLOAT, 
	impter_43 FLOAT, 
	impter_44 FLOAT, 
	impter_45 FLOAT, 
	impter_46 FLOAT, 
	impter_47 FLOAT, 
	impter_48 FLOAT, 
	impter_49 FLOAT, 
	impter_50 FLOAT, 
	impter_51 FLOAT, 
	impter_52 FLOAT, 
	impter_53 FLOAT, 
	impter_54 FLOAT, 
	impter_55 FLOAT, 
	impter_56 FLOAT, 
	impter_57 FLOAT, 
	impter_58 FLOAT, 
	impter_59 FLOAT, 
	impter_60 FLOAT, 
	impter_61 FLOAT, 
	impter_62 FLOAT, 
	impter_63 FLOAT, 
	impter_64 FLOAT, 
	impter_65 FLOAT, 
	impter_66 FLOAT, 
	impter_67 FLOAT, 
	impter_68 FLOAT, 
	impter_69 FLOAT, 
	impter_70 FLOAT, 
	impter_71 FLOAT, 
	impter_72 FLOAT, 
	impter_73 FLOAT, 
	impter_74 FLOAT, 
	impter_75 FLOAT, 
	impter_76 FLOAT, 
	impter_77 FLOAT, 
	impter_78 FLOAT, 
	impter_79 FLOAT, 
	impter_80 FLOAT, 
	impter_81 FLOAT, 
	impter_82 FLOAT, 
	impter_83 FLOAT, 
	impter_84 FLOAT, 
	impter_85 FLOAT, 
	impter_86 FLOAT, 
	impter_87 FLOAT, 
	impter_88 FLOAT, 
	impter_89 FLOAT, 
	impter_90 FLOAT, 
	impter_91 FLOAT, 
	impter_92 FLOAT, 
	impter_93 FLOAT, 
	impter_94 FLOAT, 
	impter_95 FLOAT, 
	impter_96 FLOAT, 
	impter_97 FLOAT, 
	impter_98 FLOAT, 
	impter_99 FLOAT, 
	impter_100 FLOAT, 
	impter_101 FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185503_CLLRTAS_ADS_imp_1_OUT part 2. Populate

INSERT INTO "TMP_20221018185503_CLLRTAS_ADS_imp_1_OUT" ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65, impter_66, impter_67, impter_68, impter_69, impter_70, impter_71, impter_72, impter_73, impter_74, impter_75, impter_76, impter_77, impter_78, impter_79, impter_80, impter_81, impter_82, impter_83, impter_84, impter_85, impter_86, impter_87, impter_88, impter_89, impter_90, impter_91, impter_92, impter_93, impter_94, impter_95, impter_96, impter_97, impter_98, impter_99, impter_100, impter_101) SELECT "T"."KEY", "T".impter_2, "T".impter_3, "T".impter_4, "T".impter_5, "T".impter_6, "T".impter_7, "T".impter_8, "T".impter_9, "T".impter_10, "T".impter_11, "T".impter_12, "T".impter_13, "T".impter_14, "T".impter_15, "T".impter_16, "T".impter_17, "T".impter_18, "T".impter_19, "T".impter_20, "T".impter_21, "T".impter_22, "T".impter_23, "T".impter_24, "T".impter_25, "T".impter_26, "T".impter_27, "T".impter_28, "T".impter_29, "T".impter_30, "T".impter_31, "T".impter_32, "T".impter_33, "T".impter_34, "T".impter_35, "T".impter_36, "T".impter_37, "T".impter_38, "T".impter_39, "T".impter_40, "T".impter_41, "T".impter_42, "T".impter_43, "T".impter_44, "T".impter_45, "T".impter_46, "T".impter_47, "T".impter_48, "T".impter_49, "T".impter_50, "T".impter_51, "T".impter_52, "T".impter_53, "T".impter_54, "T".impter_55, "T".impter_56, "T".impter_57, "T".impter_58, "T".impter_59, "T".impter_60, "T".impter_61, "T".impter_62, "T".impter_63, "T".impter_64, "T".impter_65, "T".impter_66, "T".impter_67, "T".impter_68, "T".impter_69, "T".impter_70, "T".impter_71, "T".impter_72, "T".impter_73, "T".impter_74, "T".impter_75, "T".impter_76, "T".impter_77, "T".impter_78, "T".impter_79, "T".impter_80, "T".impter_81, "T".impter_82, "T".impter_83, "T".impter_84, "T".impter_85, "T".impter_86, "T".impter_87, "T".impter_88, "T".impter_89, "T".impter_90, "T".impter_91, "T".impter_92, "T".impter_93, "T".impter_94, "T".impter_95, "T".impter_96, "T".impter_97, "T".impter_98, "T".impter_99, "T".impter_100, "T".impter_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impter_2 AS impter_2, "ADS_imp_1_OUT".impter_3 AS impter_3, "ADS_imp_1_OUT".impter_4 AS impter_4, "ADS_imp_1_OUT".impter_5 AS impter_5, "ADS_imp_1_OUT".impter_6 AS impter_6, "ADS_imp_1_OUT".impter_7 AS impter_7, "ADS_imp_1_OUT".impter_8 AS impter_8, "ADS_imp_1_OUT".impter_9 AS impter_9, "ADS_imp_1_OUT".impter_10 AS impter_10, "ADS_imp_1_OUT".impter_11 AS impter_11, "ADS_imp_1_OUT".impter_12 AS impter_12, "ADS_imp_1_OUT".impter_13 AS impter_13, "ADS_imp_1_OUT".impter_14 AS impter_14, "ADS_imp_1_OUT".impter_15 AS impter_15, "ADS_imp_1_OUT".impter_16 AS impter_16, "ADS_imp_1_OUT".impter_17 AS impter_17, "ADS_imp_1_OUT".impter_18 AS impter_18, "ADS_imp_1_OUT".impter_19 AS impter_19, "ADS_imp_1_OUT".impter_20 AS impter_20, "ADS_imp_1_OUT".impter_21 AS impter_21, "ADS_imp_1_OUT".impter_22 AS impter_22, "ADS_imp_1_OUT".impter_23 AS impter_23, "ADS_imp_1_OUT".impter_24 AS impter_24, "ADS_imp_1_OUT".impter_25 AS impter_25, "ADS_imp_1_OUT".impter_26 AS impter_26, "ADS_imp_1_OUT".impter_27 AS impter_27, "ADS_imp_1_OUT".impter_28 AS impter_28, "ADS_imp_1_OUT".impter_29 AS impter_29, "ADS_imp_1_OUT".impter_30 AS impter_30, "ADS_imp_1_OUT".impter_31 AS impter_31, "ADS_imp_1_OUT".impter_32 AS impter_32, "ADS_imp_1_OUT".impter_33 AS impter_33, "ADS_imp_1_OUT".impter_34 AS impter_34, "ADS_imp_1_OUT".impter_35 AS impter_35, "ADS_imp_1_OUT".impter_36 AS impter_36, "ADS_imp_1_OUT".impter_37 AS impter_37, "ADS_imp_1_OUT".impter_38 AS impter_38, "ADS_imp_1_OUT".impter_39 AS impter_39, "ADS_imp_1_OUT".impter_40 AS impter_40, "ADS_imp_1_OUT".impter_41 AS impter_41, "ADS_imp_1_OUT".impter_42 AS impter_42, "ADS_imp_1_OUT".impter_43 AS impter_43, "ADS_imp_1_OUT".impter_44 AS impter_44, "ADS_imp_1_OUT".impter_45 AS impter_45, "ADS_imp_1_OUT".impter_46 AS impter_46, "ADS_imp_1_OUT".impter_47 AS impter_47, "ADS_imp_1_OUT".impter_48 AS impter_48, "ADS_imp_1_OUT".impter_49 AS impter_49, "ADS_imp_1_OUT".impter_50 AS impter_50, "ADS_imp_1_OUT".impter_51 AS impter_51, "ADS_imp_1_OUT".impter_52 AS impter_52, "ADS_imp_1_OUT".impter_53 AS impter_53, "ADS_imp_1_OUT".impter_54 AS impter_54, "ADS_imp_1_OUT".impter_55 AS impter_55, "ADS_imp_1_OUT".impter_56 AS impter_56, "ADS_imp_1_OUT".impter_57 AS impter_57, "ADS_imp_1_OUT".impter_58 AS impter_58, "ADS_imp_1_OUT".impter_59 AS impter_59, "ADS_imp_1_OUT".impter_60 AS impter_60, "ADS_imp_1_OUT".impter_61 AS impter_61, "ADS_imp_1_OUT".impter_62 AS impter_62, "ADS_imp_1_OUT".impter_63 AS impter_63, "ADS_imp_1_OUT".impter_64 AS impter_64, "ADS_imp_1_OUT".impter_65 AS impter_65, "ADS_imp_1_OUT".impter_66 AS impter_66, "ADS_imp_1_OUT".impter_67 AS impter_67, "ADS_imp_1_OUT".impter_68 AS impter_68, "ADS_imp_1_OUT".impter_69 AS impter_69, "ADS_imp_1_OUT".impter_70 AS impter_70, "ADS_imp_1_OUT".impter_71 AS impter_71, "ADS_imp_1_OUT".impter_72 AS impter_72, "ADS_imp_1_OUT".impter_73 AS impter_73, "ADS_imp_1_OUT".impter_74 AS impter_74, "ADS_imp_1_OUT".impter_75 AS impter_75, "ADS_imp_1_OUT".impter_76 AS impter_76, "ADS_imp_1_OUT".impter_77 AS impter_77, "ADS_imp_1_OUT".impter_78 AS impter_78, "ADS_imp_1_OUT".impter_79 AS impter_79, "ADS_imp_1_OUT".impter_80 AS impter_80, "ADS_imp_1_OUT".impter_81 AS impter_81, "ADS_imp_1_OUT".impter_82 AS impter_82, "ADS_imp_1_OUT".impter_83 AS impter_83, "ADS_imp_1_OUT".impter_84 AS impter_84, "ADS_imp_1_OUT".impter_85 AS impter_85, "ADS_imp_1_OUT".impter_86 AS impter_86, "ADS_imp_1_OUT".impter_87 AS impter_87, "ADS_imp_1_OUT".impter_88 AS impter_88, "ADS_imp_1_OUT".impter_89 AS impter_89, "ADS_imp_1_OUT".impter_90 AS impter_90, "ADS_imp_1_OUT".impter_91 AS impter_91, "ADS_imp_1_OUT".impter_92 AS impter_92, "ADS_imp_1_OUT".impter_93 AS impter_93, "ADS_imp_1_OUT".impter_94 AS impter_94, "ADS_imp_1_OUT".impter_95 AS impter_95, "ADS_imp_1_OUT".impter_96 AS impter_96, "ADS_imp_1_OUT".impter_97 AS impter_97, "ADS_imp_1_OUT".impter_98 AS impter_98, "ADS_imp_1_OUT".impter_99 AS impter_99, "ADS_imp_1_OUT".impter_100 AS impter_100, "ADS_imp_1_OUT".impter_101 AS impter_101 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.08128085300192169 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.13436805172534722 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.1171335439265335 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.10314525691526008 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.04859877061601238 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.09985694677353979 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.0672774556565916 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.1622384092846963 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.04069362852608218 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.051659905088603277 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.10179067839269526 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.1759747362698276 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.09675138494095058 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.04608656912634662 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.10165852286085655 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.11179903010835046 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.006110233359380335 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.07144704068910084 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.08808458650118434 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.07182799000884085 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN -0.07230200847310368 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.02896693079944173 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.21388217632997558 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN -0.06669297919409706 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.046152348549980085 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.03249513222766133 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.05224239330612866 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.018745871966632584 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.015553079229790346 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.2258153729902979 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.16989857778838335 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.036044309156992346 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN -0.17199324162640067 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN 0.13781418887864322 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN -0.002438210964217244 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.060833749131451356 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN -0.18905998689974024 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.09635219278465344 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN -0.10160667507355636 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.06475250541578681 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.30264305036051603 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN -0.13264155681878692 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.1334054780733323 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.0011436009702802522 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.05335157908923337 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.01714537002687063 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.059059449572612485 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN -0.09528879968183994 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.15781363463365924 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN -0.23794433392453432 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN 0.13863850693032237 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.01699621991492915 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 0.19701490003754304 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.05162990473238551 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.13453002098662553 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN 0.14789370104559646 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN -0.013142759438358454 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN -0.09299162994657897 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.24689492768975088 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.13499727108287438 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN 0.0025544005507731047 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN 0.12527368663465327 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -0.03739962296055886 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN -0.02998869580177853 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.04286088516871345 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.1438347006651433 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN -0.05269793910889183 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN 0.029267940271277926 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN 0.10431080888322372 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -0.09619687433047125 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN 0.0067333192983315745 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN 0.03289665935367682 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.08064277275460055 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN -0.10603556755491854 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN 0.09489100148295918 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN -0.19664887110008689 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN 0.11652643514949582 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN 0.19340218348071325 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN 0.11209709087907249 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.10709013621222807 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN -0.01033042920922311 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.11026552104356717 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN 0.01191634589453312 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN 0.013369825695028714 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN -0.1500512000702785 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN -0.09022177579448487 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN -0.16029625657228264 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN -0.10127017293489289 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN 0.3323543006292627 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN 0.051731173060791114 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN 0.1078879212202887 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN 0.21454931874740585 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN -0.16317337769942666 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.2242384076879583 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.27695847565296017 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN 0.037863552135044866 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN -0.02758852803141265 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN 0.1052877881031243 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.06640703380221318 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN 0.06569930995842384 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "RandomReg_100" AS "ADS") AS "ADS_imp_1_OUT") AS "T"

-- Code For temporary table TMP_20221018185503_CLLRTAS_ADS_imp_1_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185503_CLLRTAS_ADS_imp_1_OUT_KEY" ON "TMP_20221018185503_CLLRTAS_ADS_imp_1_OUT" ("KEY")

-- Code For temporary table TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT" (
	"KEY" BIGINT NOT NULL, 
	scaler_2 FLOAT, 
	scaler_3 FLOAT, 
	scaler_4 FLOAT, 
	scaler_5 FLOAT, 
	scaler_6 FLOAT, 
	scaler_7 FLOAT, 
	scaler_8 FLOAT, 
	scaler_9 FLOAT, 
	scaler_10 FLOAT, 
	scaler_11 FLOAT, 
	scaler_12 FLOAT, 
	scaler_13 FLOAT, 
	scaler_14 FLOAT, 
	scaler_15 FLOAT, 
	scaler_16 FLOAT, 
	scaler_17 FLOAT, 
	scaler_18 FLOAT, 
	scaler_19 FLOAT, 
	scaler_20 FLOAT, 
	scaler_21 FLOAT, 
	scaler_22 FLOAT, 
	scaler_23 FLOAT, 
	scaler_24 FLOAT, 
	scaler_25 FLOAT, 
	scaler_26 FLOAT, 
	scaler_27 FLOAT, 
	scaler_28 FLOAT, 
	scaler_29 FLOAT, 
	scaler_30 FLOAT, 
	scaler_31 FLOAT, 
	scaler_32 FLOAT, 
	scaler_33 FLOAT, 
	scaler_34 FLOAT, 
	scaler_35 FLOAT, 
	scaler_36 FLOAT, 
	scaler_37 FLOAT, 
	scaler_38 FLOAT, 
	scaler_39 FLOAT, 
	scaler_40 FLOAT, 
	scaler_41 FLOAT, 
	scaler_42 FLOAT, 
	scaler_43 FLOAT, 
	scaler_44 FLOAT, 
	scaler_45 FLOAT, 
	scaler_46 FLOAT, 
	scaler_47 FLOAT, 
	scaler_48 FLOAT, 
	scaler_49 FLOAT, 
	scaler_50 FLOAT, 
	scaler_51 FLOAT, 
	scaler_52 FLOAT, 
	scaler_53 FLOAT, 
	scaler_54 FLOAT, 
	scaler_55 FLOAT, 
	scaler_56 FLOAT, 
	scaler_57 FLOAT, 
	scaler_58 FLOAT, 
	scaler_59 FLOAT, 
	scaler_60 FLOAT, 
	scaler_61 FLOAT, 
	scaler_62 FLOAT, 
	scaler_63 FLOAT, 
	scaler_64 FLOAT, 
	scaler_65 FLOAT, 
	scaler_66 FLOAT, 
	scaler_67 FLOAT, 
	scaler_68 FLOAT, 
	scaler_69 FLOAT, 
	scaler_70 FLOAT, 
	scaler_71 FLOAT, 
	scaler_72 FLOAT, 
	scaler_73 FLOAT, 
	scaler_74 FLOAT, 
	scaler_75 FLOAT, 
	scaler_76 FLOAT, 
	scaler_77 FLOAT, 
	scaler_78 FLOAT, 
	scaler_79 FLOAT, 
	scaler_80 FLOAT, 
	scaler_81 FLOAT, 
	scaler_82 FLOAT, 
	scaler_83 FLOAT, 
	scaler_84 FLOAT, 
	scaler_85 FLOAT, 
	scaler_86 FLOAT, 
	scaler_87 FLOAT, 
	scaler_88 FLOAT, 
	scaler_89 FLOAT, 
	scaler_90 FLOAT, 
	scaler_91 FLOAT, 
	scaler_92 FLOAT, 
	scaler_93 FLOAT, 
	scaler_94 FLOAT, 
	scaler_95 FLOAT, 
	scaler_96 FLOAT, 
	scaler_97 FLOAT, 
	scaler_98 FLOAT, 
	scaler_99 FLOAT, 
	scaler_100 FLOAT, 
	scaler_101 FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT part 2. Populate

INSERT INTO "TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT" ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101) SELECT "T"."KEY", "T".scaler_2, "T".scaler_3, "T".scaler_4, "T".scaler_5, "T".scaler_6, "T".scaler_7, "T".scaler_8, "T".scaler_9, "T".scaler_10, "T".scaler_11, "T".scaler_12, "T".scaler_13, "T".scaler_14, "T".scaler_15, "T".scaler_16, "T".scaler_17, "T".scaler_18, "T".scaler_19, "T".scaler_20, "T".scaler_21, "T".scaler_22, "T".scaler_23, "T".scaler_24, "T".scaler_25, "T".scaler_26, "T".scaler_27, "T".scaler_28, "T".scaler_29, "T".scaler_30, "T".scaler_31, "T".scaler_32, "T".scaler_33, "T".scaler_34, "T".scaler_35, "T".scaler_36, "T".scaler_37, "T".scaler_38, "T".scaler_39, "T".scaler_40, "T".scaler_41, "T".scaler_42, "T".scaler_43, "T".scaler_44, "T".scaler_45, "T".scaler_46, "T".scaler_47, "T".scaler_48, "T".scaler_49, "T".scaler_50, "T".scaler_51, "T".scaler_52, "T".scaler_53, "T".scaler_54, "T".scaler_55, "T".scaler_56, "T".scaler_57, "T".scaler_58, "T".scaler_59, "T".scaler_60, "T".scaler_61, "T".scaler_62, "T".scaler_63, "T".scaler_64, "T".scaler_65, "T".scaler_66, "T".scaler_67, "T".scaler_68, "T".scaler_69, "T".scaler_70, "T".scaler_71, "T".scaler_72, "T".scaler_73, "T".scaler_74, "T".scaler_75, "T".scaler_76, "T".scaler_77, "T".scaler_78, "T".scaler_79, "T".scaler_80, "T".scaler_81, "T".scaler_82, "T".scaler_83, "T".scaler_84, "T".scaler_85, "T".scaler_86, "T".scaler_87, "T".scaler_88, "T".scaler_89, "T".scaler_90, "T".scaler_91, "T".scaler_92, "T".scaler_93, "T".scaler_94, "T".scaler_95, "T".scaler_96, "T".scaler_97, "T".scaler_98, "T".scaler_99, "T".scaler_100, "T".scaler_101 
FROM (SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", "ADS_sca_2_OUT".scaler_2 AS scaler_2, "ADS_sca_2_OUT".scaler_3 AS scaler_3, "ADS_sca_2_OUT".scaler_4 AS scaler_4, "ADS_sca_2_OUT".scaler_5 AS scaler_5, "ADS_sca_2_OUT".scaler_6 AS scaler_6, "ADS_sca_2_OUT".scaler_7 AS scaler_7, "ADS_sca_2_OUT".scaler_8 AS scaler_8, "ADS_sca_2_OUT".scaler_9 AS scaler_9, "ADS_sca_2_OUT".scaler_10 AS scaler_10, "ADS_sca_2_OUT".scaler_11 AS scaler_11, "ADS_sca_2_OUT".scaler_12 AS scaler_12, "ADS_sca_2_OUT".scaler_13 AS scaler_13, "ADS_sca_2_OUT".scaler_14 AS scaler_14, "ADS_sca_2_OUT".scaler_15 AS scaler_15, "ADS_sca_2_OUT".scaler_16 AS scaler_16, "ADS_sca_2_OUT".scaler_17 AS scaler_17, "ADS_sca_2_OUT".scaler_18 AS scaler_18, "ADS_sca_2_OUT".scaler_19 AS scaler_19, "ADS_sca_2_OUT".scaler_20 AS scaler_20, "ADS_sca_2_OUT".scaler_21 AS scaler_21, "ADS_sca_2_OUT".scaler_22 AS scaler_22, "ADS_sca_2_OUT".scaler_23 AS scaler_23, "ADS_sca_2_OUT".scaler_24 AS scaler_24, "ADS_sca_2_OUT".scaler_25 AS scaler_25, "ADS_sca_2_OUT".scaler_26 AS scaler_26, "ADS_sca_2_OUT".scaler_27 AS scaler_27, "ADS_sca_2_OUT".scaler_28 AS scaler_28, "ADS_sca_2_OUT".scaler_29 AS scaler_29, "ADS_sca_2_OUT".scaler_30 AS scaler_30, "ADS_sca_2_OUT".scaler_31 AS scaler_31, "ADS_sca_2_OUT".scaler_32 AS scaler_32, "ADS_sca_2_OUT".scaler_33 AS scaler_33, "ADS_sca_2_OUT".scaler_34 AS scaler_34, "ADS_sca_2_OUT".scaler_35 AS scaler_35, "ADS_sca_2_OUT".scaler_36 AS scaler_36, "ADS_sca_2_OUT".scaler_37 AS scaler_37, "ADS_sca_2_OUT".scaler_38 AS scaler_38, "ADS_sca_2_OUT".scaler_39 AS scaler_39, "ADS_sca_2_OUT".scaler_40 AS scaler_40, "ADS_sca_2_OUT".scaler_41 AS scaler_41, "ADS_sca_2_OUT".scaler_42 AS scaler_42, "ADS_sca_2_OUT".scaler_43 AS scaler_43, "ADS_sca_2_OUT".scaler_44 AS scaler_44, "ADS_sca_2_OUT".scaler_45 AS scaler_45, "ADS_sca_2_OUT".scaler_46 AS scaler_46, "ADS_sca_2_OUT".scaler_47 AS scaler_47, "ADS_sca_2_OUT".scaler_48 AS scaler_48, "ADS_sca_2_OUT".scaler_49 AS scaler_49, "ADS_sca_2_OUT".scaler_50 AS scaler_50, "ADS_sca_2_OUT".scaler_51 AS scaler_51, "ADS_sca_2_OUT".scaler_52 AS scaler_52, "ADS_sca_2_OUT".scaler_53 AS scaler_53, "ADS_sca_2_OUT".scaler_54 AS scaler_54, "ADS_sca_2_OUT".scaler_55 AS scaler_55, "ADS_sca_2_OUT".scaler_56 AS scaler_56, "ADS_sca_2_OUT".scaler_57 AS scaler_57, "ADS_sca_2_OUT".scaler_58 AS scaler_58, "ADS_sca_2_OUT".scaler_59 AS scaler_59, "ADS_sca_2_OUT".scaler_60 AS scaler_60, "ADS_sca_2_OUT".scaler_61 AS scaler_61, "ADS_sca_2_OUT".scaler_62 AS scaler_62, "ADS_sca_2_OUT".scaler_63 AS scaler_63, "ADS_sca_2_OUT".scaler_64 AS scaler_64, "ADS_sca_2_OUT".scaler_65 AS scaler_65, "ADS_sca_2_OUT".scaler_66 AS scaler_66, "ADS_sca_2_OUT".scaler_67 AS scaler_67, "ADS_sca_2_OUT".scaler_68 AS scaler_68, "ADS_sca_2_OUT".scaler_69 AS scaler_69, "ADS_sca_2_OUT".scaler_70 AS scaler_70, "ADS_sca_2_OUT".scaler_71 AS scaler_71, "ADS_sca_2_OUT".scaler_72 AS scaler_72, "ADS_sca_2_OUT".scaler_73 AS scaler_73, "ADS_sca_2_OUT".scaler_74 AS scaler_74, "ADS_sca_2_OUT".scaler_75 AS scaler_75, "ADS_sca_2_OUT".scaler_76 AS scaler_76, "ADS_sca_2_OUT".scaler_77 AS scaler_77, "ADS_sca_2_OUT".scaler_78 AS scaler_78, "ADS_sca_2_OUT".scaler_79 AS scaler_79, "ADS_sca_2_OUT".scaler_80 AS scaler_80, "ADS_sca_2_OUT".scaler_81 AS scaler_81, "ADS_sca_2_OUT".scaler_82 AS scaler_82, "ADS_sca_2_OUT".scaler_83 AS scaler_83, "ADS_sca_2_OUT".scaler_84 AS scaler_84, "ADS_sca_2_OUT".scaler_85 AS scaler_85, "ADS_sca_2_OUT".scaler_86 AS scaler_86, "ADS_sca_2_OUT".scaler_87 AS scaler_87, "ADS_sca_2_OUT".scaler_88 AS scaler_88, "ADS_sca_2_OUT".scaler_89 AS scaler_89, "ADS_sca_2_OUT".scaler_90 AS scaler_90, "ADS_sca_2_OUT".scaler_91 AS scaler_91, "ADS_sca_2_OUT".scaler_92 AS scaler_92, "ADS_sca_2_OUT".scaler_93 AS scaler_93, "ADS_sca_2_OUT".scaler_94 AS scaler_94, "ADS_sca_2_OUT".scaler_95 AS scaler_95, "ADS_sca_2_OUT".scaler_96 AS scaler_96, "ADS_sca_2_OUT".scaler_97 AS scaler_97, "ADS_sca_2_OUT".scaler_98 AS scaler_98, "ADS_sca_2_OUT".scaler_99 AS scaler_99, "ADS_sca_2_OUT".scaler_100 AS scaler_100, "ADS_sca_2_OUT".scaler_101 AS scaler_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - -0.08128085300192169) / 1.0000403559305833 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - -0.13436805172534722) / 0.8837904988184502 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - -0.1171335439265335) / 0.8570569022899862 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.10314525691526008) / 1.0029176283530983 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.04859877061601238) / 0.9128966632538227 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.09985694677353979) / 0.8987090594452791 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 0.0672774556565916) / 1.0142447611518557 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.1622384092846963) / 1.0747662307530297 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.04069362852608218) / 1.026267867232466 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.051659905088603277) / 0.8402436043740567 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 0.10179067839269526) / 1.0068242363938393 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - -0.1759747362698276) / 0.9240710764915452 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - -0.09675138494095058) / 0.9783790869772869 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - -0.04608656912634662) / 0.9781135354292492 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 0.10165852286085655) / 0.9014456978711726 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - 0.11179903010835046) / 0.9779155034856741 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - -0.006110233359380335) / 0.9981020697621527 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 0.07144704068910084) / 0.8874816465174282 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - -0.08808458650118434) / 0.8392925703736469 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - -0.07182799000884085) / 0.9507419765776924 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - -0.07230200847310368) / 1.066826998652098 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 0.02896693079944173) / 0.9902823724923776 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 0.21388217632997558) / 0.8623253968778218 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - -0.06669297919409706) / 0.9598770564082906 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - 0.046152348549980085) / 0.9878502885847017 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 0.03249513222766133) / 0.9583954740248698 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 0.05224239330612866) / 0.9771107275041324 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - 0.018745871966632584) / 1.0557199260759529 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 0.015553079229790346) / 0.9376481022022428 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - 0.2258153729902979) / 1.0513597556957384 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - -0.16989857778838335) / 1.0578168863571897 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - 0.036044309156992346) / 0.9200106573435598 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - -0.17199324162640067) / 0.9814800251435433 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - 0.13781418887864322) / 0.9177012051168076 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - -0.002438210964217244) / 0.8944380116105023 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - 0.060833749131451356) / 0.9361651054882097 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - -0.18905998689974024) / 1.1290398175800667 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - -0.09635219278465344) / 1.0703546254505507 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - -0.10160667507355636) / 0.920646499226522 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - 0.06475250541578681) / 0.8986109106193976 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - -0.30264305036051603) / 1.1304324059677955 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - -0.13264155681878692) / 0.8585260796845616 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - -0.1334054780733323) / 0.962489523355931 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - -0.0011436009702802522) / 0.9049370484050282 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - -0.05335157908923337) / 1.0610026457631268 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - 0.01714537002687063) / 0.9557097858300829 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - -0.059059449572612485) / 1.0894822012599163 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - -0.09528879968183994) / 0.8571475953382788 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - -0.15781363463365924) / 0.9919635867517769 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - -0.23794433392453432) / 1.0067503129721596 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - 0.13863850693032237) / 1.0279273388893944 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - -0.01699621991492915) / 0.974408927553762 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - 0.19701490003754304) / 0.8684920711659356 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 0.05162990473238551) / 0.8943974752234072 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - -0.13453002098662553) / 0.9634839659318408 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - 0.14789370104559646) / 1.0615399626185422 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - -0.013142759438358454) / 0.9772015278495697 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - -0.09299162994657897) / 1.007175843550957 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - -0.24689492768975088) / 0.9237354128048836 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 0.13499727108287438) / 1.1015843688177136 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - 0.0025544005507731047) / 1.0664451639404966 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - 0.12527368663465327) / 1.1035677221918443 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - -0.03739962296055886) / 1.0321694444223468 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - -0.02998869580177853) / 1.0714904800508076 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS FLOAT) - -0.04286088516871345) / 1.1900007472884844 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS FLOAT) - -0.1438347006651433) / 0.9838632536243364 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS FLOAT) - -0.05269793910889183) / 1.133004109638514 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS FLOAT) - 0.029267940271277926) / 0.9505911883818412 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS FLOAT) - 0.10431080888322372) / 0.9124892804740817 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS FLOAT) - -0.09619687433047125) / 1.0435263748552108 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS FLOAT) - 0.0067333192983315745) / 1.0686226130046215 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS FLOAT) - 0.03289665935367682) / 0.859185924601115 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS FLOAT) - 0.08064277275460055) / 1.031072803981909 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS FLOAT) - -0.10603556755491854) / 0.9757644491800123 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS FLOAT) - 0.09489100148295918) / 0.9082861753672621 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS FLOAT) - -0.19664887110008689) / 0.9570091111503233 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS FLOAT) - 0.11652643514949582) / 0.8906993645060894 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS FLOAT) - 0.19340218348071325) / 1.015190635438741 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS FLOAT) - 0.11209709087907249) / 1.0005941329026147 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS FLOAT) - 0.10709013621222807) / 0.9981990995405838 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS FLOAT) - -0.01033042920922311) / 1.1261340687039605 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS FLOAT) - 0.11026552104356717) / 1.0203631595796565 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS FLOAT) - 0.01191634589453312) / 0.9520198315890641 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS FLOAT) - 0.013369825695028714) / 1.0539650476886062 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS FLOAT) - -0.1500512000702785) / 0.9981993823991944 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS FLOAT) - -0.09022177579448487) / 0.9119054985661357 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS FLOAT) - -0.16029625657228264) / 1.0530611443946694 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS FLOAT) - -0.10127017293489289) / 1.0673088162334932 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS FLOAT) - 0.3323543006292627) / 0.8517398608796033 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS FLOAT) - 0.051731173060791114) / 0.9036571972083375 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS FLOAT) - 0.1078879212202887) / 0.9679161746442023 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS FLOAT) - 0.21454931874740585) / 0.9059278397749674 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS FLOAT) - -0.16317337769942666) / 1.097718994991099 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS FLOAT) - -0.2242384076879583) / 0.7859624368027274 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS FLOAT) - -0.27695847565296017) / 1.000759742410346 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS FLOAT) - 0.037863552135044866) / 0.9617491014855645 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS FLOAT) - -0.02758852803141265) / 0.888578840707713 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS FLOAT) - 0.1052877881031243) / 0.9881179437649864 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS FLOAT) - 0.06640703380221318) / 0.8931321524560405 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS FLOAT) - 0.06569930995842384) / 0.9367001351824711 AS scaler_101 
FROM "TMP_20221018185503_CLLRTAS_ADS_imp_1_OUT" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "T"

-- Code For temporary table TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT_KEY" ON "TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT" ("KEY")

-- Code For temporary table TMP_20221018185503_8UKIU70_BAG_B0 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185503_8UKIU70_BAG_B0" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185503_8UKIU70_BAG_B0 part 2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= 0.1358850933611393) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.3484189808368683) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.09228804334998131) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -1.3176839351654053) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.6029541194438934) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.4150003716349602) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -0.4321608720347285) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= 1.0998593866825104) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= -0.9364092350006104) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= 0.18410347402095795) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.11629784107208252) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.7607582211494446) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 1.5422195792198181) THEN 23 ELSE 24 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= 0.7033376693725586) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 1.0570808351039886) THEN 27 ELSE 28 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.21681814268231392) THEN 30 ELSE 31 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.3298351727426052) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= 0.3663505017757416) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.37532006204128265) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.1940880729816854) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.5525491535663605) THEN 39 ELSE 40 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= -0.25391657277941704) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= 1.1383962333202362) THEN 43 ELSE 44 END ELSE 45 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= -0.8477431535720825) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 1.6468461751937866) THEN 48 ELSE 49 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= 0.7957848310470581) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= 0.954957902431488) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 0.17777973413467407) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM "TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -436.8930860886948 AS "E" UNION ALL SELECT 6 AS nid, -430.7322420182495 AS "E" UNION ALL SELECT 8 AS nid, -342.4054039004797 AS "E" UNION ALL SELECT 9 AS nid, -289.0914798442405 AS "E" UNION ALL SELECT 12 AS nid, -197.78121613409624 AS "E" UNION ALL SELECT 13 AS nid, -200.3373934821458 AS "E" UNION ALL SELECT 15 AS nid, -167.53786194153668 AS "E" UNION ALL SELECT 16 AS nid, -172.78010697974267 AS "E" UNION ALL SELECT 20 AS nid, 17.269204342160073 AS "E" UNION ALL SELECT 21 AS nid, -52.19608399259265 AS "E" UNION ALL SELECT 23 AS nid, 109.6215604796885 AS "E" UNION ALL SELECT 24 AS nid, 183.77184322024888 AS "E" UNION ALL SELECT 27 AS nid, -87.98768967181586 AS "E" UNION ALL SELECT 28 AS nid, -146.53732849176905 AS "E" UNION ALL SELECT 30 AS nid, -290.52672487497273 AS "E" UNION ALL SELECT 31 AS nid, -207.8249772062679 AS "E" UNION ALL SELECT 36 AS nid, -3.8590694942672137 AS "E" UNION ALL SELECT 37 AS nid, -10.715443370853677 AS "E" UNION ALL SELECT 39 AS nid, -78.19974088289858 AS "E" UNION ALL SELECT 40 AS nid, -107.89147253045782 AS "E" UNION ALL SELECT 43 AS nid, 122.37894790928655 AS "E" UNION ALL SELECT 44 AS nid, 128.74971924769997 AS "E" UNION ALL SELECT 45 AS nid, 94.43377409338842 AS "E" UNION ALL SELECT 48 AS nid, 419.8117904787066 AS "E" UNION ALL SELECT 49 AS nid, 294.7646845425511 AS "E" UNION ALL SELECT 52 AS nid, 175.13630623402935 AS "E" UNION ALL SELECT 53 AS nid, 242.13277188530355 AS "E" UNION ALL SELECT 55 AS nid, 130.61554227069345 AS "E" UNION ALL SELECT 56 AS nid, 38.19976422974274 AS "E") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."E" AS "E" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"BAG_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."E" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.24190443754196167) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 0.3340517356991768) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= 0.016605645418167114) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= 0.6710361540317535) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= -0.13238966930657625) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -0.7204855382442474) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -1.0667657554149628) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= -1.1124015301465988) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 0.15849824249744415) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.3875652514398098) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= 0.28269704431295395) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= 1.1512380428612232) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.08913635462522507) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= 0.06357328686863184) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.5845436453819275) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 0.0052355993539094925) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.49278120696544647) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= 1.0394150614738464) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -0.37234561145305634) THEN 36 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 0.6193285211920738) THEN 38 ELSE 39 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= 0.1088850274682045) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= 0.9605356156826019) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= 0.5146782845258713) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_91 <= 0.07554012537002563) THEN 46 ELSE 47 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= 1.4089877009391785) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 1.7072648406028748) THEN 50 ELSE 51 END ELSE 52 END END END END AS node_id_2 
FROM "TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -280.30256483530104 AS "E" UNION ALL SELECT 6 AS nid, -317.7622966546957 AS "E" UNION ALL SELECT 8 AS nid, -436.8930860886948 AS "E" UNION ALL SELECT 9 AS nid, -454.8215873712685 AS "E" UNION ALL SELECT 11 AS nid, 48.423335696929506 AS "E" UNION ALL SELECT 13 AS nid, -202.60833883427068 AS "E" UNION ALL SELECT 14 AS nid, -93.83764625824504 AS "E" UNION ALL SELECT 17 AS nid, -146.53732849176905 AS "E" UNION ALL SELECT 18 AS nid, -87.98512254511704 AS "E" UNION ALL SELECT 21 AS nid, 38.19976422974274 AS "E" UNION ALL SELECT 22 AS nid, 94.43377409338842 AS "E" UNION ALL SELECT 24 AS nid, 215.90083761986222 AS "E" UNION ALL SELECT 25 AS nid, 233.33694106574706 AS "E" UNION ALL SELECT 30 AS nid, 174.65734168144868 AS "E" UNION ALL SELECT 31 AS nid, 224.36668495522065 AS "E" UNION ALL SELECT 33 AS nid, 136.2932073385535 AS "E" UNION ALL SELECT 34 AS nid, 39.44300011869663 AS "E" UNION ALL SELECT 36 AS nid, 419.8117904787066 AS "E" UNION ALL SELECT 38 AS nid, 294.7646845425511 AS "E" UNION ALL SELECT 39 AS nid, 294.8906555832285 AS "E" UNION ALL SELECT 43 AS nid, 75.60702200307296 AS "E" UNION ALL SELECT 44 AS nid, 118.41659006827764 AS "E" UNION ALL SELECT 46 AS nid, 288.0094422410094 AS "E" UNION ALL SELECT 47 AS nid, 195.39419395402132 AS "E" UNION ALL SELECT 50 AS nid, -34.42289055269503 AS "E" UNION ALL SELECT 51 AS nid, 75.33652615813574 AS "E" UNION ALL SELECT 52 AS nid, -140.57351311758325 AS "E") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."E" AS "E" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"BAG_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."E" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.6384424865245819) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -0.36332565546035767) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -0.13700931891798973) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= 0.45342855155467987) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 0.42212390899658203) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= 0.34899837523698807) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= 0.10854455968365073) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.6412311941385269) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_100 <= 0.34490323066711426) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -0.6346205249428749) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= 0.13060027360916138) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= 0.6113810837268829) THEN 21 ELSE 22 END ELSE 23 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= 0.33608147501945496) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_91 <= -0.47807782888412476) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 0.8450253044720739) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.3602487985044718) THEN 28 ELSE 29 END ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= 0.20620231330394745) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.5119890123605728) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= -0.8897421658039093) THEN 36 ELSE 37 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.13988605223130435) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= -0.039171718060970306) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.18742313235998154) THEN 41 ELSE 42 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 0.5639608502388) THEN 44 ELSE 45 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= -0.4381721690297127) THEN 47 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.7356124520301819) THEN 49 ELSE 50 END END END END END AS node_id_2 
FROM "TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -87.98512254511704 AS "E" UNION ALL SELECT 6 AS nid, -80.78526024187205 AS "E" UNION ALL SELECT 7 AS nid, 48.423335696929506 AS "E" UNION ALL SELECT 9 AS nid, -146.53732849176905 AS "E" UNION ALL SELECT 10 AS nid, -190.64702660055804 AS "E" UNION ALL SELECT 14 AS nid, -309.6370714844199 AS "E" UNION ALL SELECT 15 AS nid, -291.4048332061729 AS "E" UNION ALL SELECT 17 AS nid, -338.5499431552182 AS "E" UNION ALL SELECT 18 AS nid, -327.50301874204285 AS "E" UNION ALL SELECT 21 AS nid, -234.4658092919816 AS "E" UNION ALL SELECT 22 AS nid, -234.79191600815204 AS "E" UNION ALL SELECT 23 AS nid, -207.8249772062679 AS "E" UNION ALL SELECT 28 AS nid, -202.60833883427068 AS "E" UNION ALL SELECT 29 AS nid, -196.1762239786283 AS "E" UNION ALL SELECT 30 AS nid, -172.78010697974267 AS "E" UNION ALL SELECT 33 AS nid, 172.24630421448748 AS "E" UNION ALL SELECT 34 AS nid, 62.959830768471186 AS "E" UNION ALL SELECT 36 AS nid, -107.37554008844234 AS "E" UNION ALL SELECT 37 AS nid, -10.699448838632264 AS "E" UNION ALL SELECT 41 AS nid, 232.57313239110618 AS "E" UNION ALL SELECT 42 AS nid, 284.62467006023536 AS "E" UNION ALL SELECT 44 AS nid, 133.77117132652984 AS "E" UNION ALL SELECT 45 AS nid, 174.05588768325575 AS "E" UNION ALL SELECT 47 AS nid, -51.54063841079579 AS "E" UNION ALL SELECT 49 AS nid, 195.39419395402132 AS "E" UNION ALL SELECT 50 AS nid, 106.33605558789863 AS "E") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."E" AS "E" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"BAG_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."E" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.4531792104244232) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -1.6088301539421082) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= 0.48337721079587936) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.17924725025659427) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.8017427325248718) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 0.48854588298127055) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_32 <= 0.9724815934896469) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 0.8109187185764313) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= -1.2060963660478592) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.4440828748047352) THEN 18 ELSE 19 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= -0.9905268549919128) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.13254758715629578) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.05679827928543091) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= 0.269942969083786) THEN 24 ELSE 25 END ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= 0.23012467846274376) THEN 28 ELSE 29 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= -0.6689696609973907) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -0.10527563840150833) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= 0.9824596345424652) THEN 33 ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= 1.3335043042898178) THEN 36 ELSE 37 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 1.0353632867336273) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= -0.439307302236557) THEN 40 ELSE 41 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= -0.705458790063858) THEN 43 ELSE 44 END END END END END AS node_id_2 
FROM "TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 233.33694106574706 AS "E" UNION ALL SELECT 4 AS nid, 38.19976422974274 AS "E" UNION ALL SELECT 8 AS nid, -334.7080591863574 AS "E" UNION ALL SELECT 9 AS nid, -246.2225170915819 AS "E" UNION ALL SELECT 11 AS nid, -430.7322420182495 AS "E" UNION ALL SELECT 12 AS nid, -436.8930860886948 AS "E" UNION ALL SELECT 15 AS nid, -207.8249772062679 AS "E" UNION ALL SELECT 16 AS nid, -190.64702660055804 AS "E" UNION ALL SELECT 18 AS nid, -146.53732849176905 AS "E" UNION ALL SELECT 19 AS nid, -76.8627548707201 AS "E" UNION ALL SELECT 24 AS nid, -86.11645147491663 AS "E" UNION ALL SELECT 25 AS nid, -51.54063841079579 AS "E" UNION ALL SELECT 26 AS nid, -10.715443370853677 AS "E" UNION ALL SELECT 28 AS nid, -200.33739348214584 AS "E" UNION ALL SELECT 29 AS nid, -197.78121613409624 AS "E" UNION ALL SELECT 33 AS nid, -79.28963380412185 AS "E" UNION ALL SELECT 34 AS nid, -54.81786631978007 AS "E" UNION ALL SELECT 36 AS nid, -186.6513765972752 AS "E" UNION ALL SELECT 37 AS nid, -140.57351311758325 AS "E" UNION ALL SELECT 40 AS nid, 104.47707007051044 AS "E" UNION ALL SELECT 41 AS nid, 192.30646277313477 AS "E" UNION ALL SELECT 43 AS nid, 270.9786797098036 AS "E" UNION ALL SELECT 44 AS nid, 297.33356459996713 AS "E") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."E" AS "E" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"BAG_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."E" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.2599138841032982) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= 0.964031994342804) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.15556256100535393) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -1.9152397513389587) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 0.15110606886446476) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= -0.1613456830382347) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= -0.08867679350078106) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -1.0735922176390886) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= 0.9964526295661926) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.46227916702628136) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.2354198694229126) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 0.04705125093460083) THEN 21 ELSE 22 END END ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.4882626086473465) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -0.5568568408489227) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -1.2509237825870514) THEN 27 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= 0.21893398836255074) THEN 29 ELSE 30 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -1.7056452631950378) THEN 32 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 1.0717926919460297) THEN 34 ELSE 35 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.89421346783638) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 0.8171093761920929) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -1.7251373529434204) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -1.2859869301319122) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.5422762706875801) THEN 45 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.285414919257164) THEN 47 ELSE 48 END END END END END AS node_id_2 
FROM "TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 4 AS nid, -146.53732849176905 AS "E" UNION ALL SELECT 6 AS nid, -305.1211137513931 AS "E" UNION ALL SELECT 7 AS nid, -244.00161821812998 AS "E" UNION ALL SELECT 10 AS nid, -55.13785992768933 AS "E" UNION ALL SELECT 11 AS nid, -86.11645147491663 AS "E" UNION ALL SELECT 13 AS nid, -167.53786194153668 AS "E" UNION ALL SELECT 14 AS nid, -190.99779883345465 AS "E" UNION ALL SELECT 18 AS nid, 183.77184322024888 AS "E" UNION ALL SELECT 19 AS nid, 136.92680038236625 AS "E" UNION ALL SELECT 21 AS nid, 75.33652615813574 AS "E" UNION ALL SELECT 22 AS nid, 75.60702200307296 AS "E" UNION ALL SELECT 23 AS nid, -42.10296471792358 AS "E" UNION ALL SELECT 27 AS nid, -10.715443370853677 AS "E" UNION ALL SELECT 29 AS nid, 101.56660782160331 AS "E" UNION ALL SELECT 30 AS nid, 128.74971924769997 AS "E" UNION ALL SELECT 32 AS nid, -202.60833883427068 AS "E" UNION ALL SELECT 34 AS nid, -86.53286310582766 AS "E" UNION ALL SELECT 35 AS nid, -3.8590694942672137 AS "E" UNION ALL SELECT 39 AS nid, -17.80178458293171 AS "E" UNION ALL SELECT 40 AS nid, 181.01831600308512 AS "E" UNION ALL SELECT 42 AS nid, 419.8117904787066 AS "E" UNION ALL SELECT 43 AS nid, 299.12743811895916 AS "E" UNION ALL SELECT 45 AS nid, 38.19976422974274 AS "E" UNION ALL SELECT 47 AS nid, -51.54063841079579 AS "E" UNION ALL SELECT 48 AS nid, -140.57351311758325 AS "E") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."E" AS "E" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"BAG_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."E" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.17478496581315994) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -0.02475996594876051) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.15556256100535393) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.7869426906108856) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -1.2527716159820557) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -0.5133842919021845) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= 0.05828530341386795) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 1.1409262418746948) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.7281080186367035) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -1.4686870276927948) THEN 17 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 1.5903061628341675) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= 0.6642626821994781) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -1.031199336051941) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= 0.5836193859577179) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= -1.0560717284679413) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.46844036877155304) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= -0.17537346482276917) THEN 31 ELSE 32 END ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= -0.47327113151550293) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -0.026341651566326618) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= -0.45041319727897644) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= 1.3305615186691284) THEN 40 ELSE 41 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.6397537291049957) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 0.5280824303627014) THEN 44 ELSE 45 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -0.8898369669914246) THEN 47 ELSE 48 END END END END END AS node_id_2 
FROM "TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -207.8249772062679 AS "E" UNION ALL SELECT 6 AS nid, -300.4367274016759 AS "E" UNION ALL SELECT 8 AS nid, -433.8126640534722 AS "E" UNION ALL SELECT 9 AS nid, -361.1632498041779 AS "E" UNION ALL SELECT 11 AS nid, -86.11645147491663 AS "E" UNION ALL SELECT 13 AS nid, -194.98507964872638 AS "E" UNION ALL SELECT 14 AS nid, -167.53786194153668 AS "E" UNION ALL SELECT 17 AS nid, -146.53732849176905 AS "E" UNION ALL SELECT 19 AS nid, -234.4658092919816 AS "E" UNION ALL SELECT 20 AS nid, -190.64702660055804 AS "E" UNION ALL SELECT 23 AS nid, 57.479928420061924 AS "E" UNION ALL SELECT 24 AS nid, 144.06561030288705 AS "E" UNION ALL SELECT 26 AS nid, -55.07386120610747 AS "E" UNION ALL SELECT 27 AS nid, -42.10296471792358 AS "E" UNION ALL SELECT 31 AS nid, -172.78010697974267 AS "E" UNION ALL SELECT 32 AS nid, -202.60833883427068 AS "E" UNION ALL SELECT 33 AS nid, -4.904591434376485 AS "E" UNION ALL SELECT 37 AS nid, 22.282133101331148 AS "E" UNION ALL SELECT 38 AS nid, -102.61608982227403 AS "E" UNION ALL SELECT 40 AS nid, 109.11233334361235 AS "E" UNION ALL SELECT 41 AS nid, 38.19976422974274 AS "E" UNION ALL SELECT 44 AS nid, 153.60266255330635 AS "E" UNION ALL SELECT 45 AS nid, 279.2722009839075 AS "E" UNION ALL SELECT 47 AS nid, -79.78381998603227 AS "E" UNION ALL SELECT 48 AS nid, -51.54063841079579 AS "E") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."E" AS "E" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"BAG_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."E" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.3545884042978287) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.31322332471609116) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= -0.3370527923107147) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= 0.37894284818321466) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= 1.585436224937439) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.8482424318790436) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_77 <= -0.010394670069217682) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= -0.31539008766412735) THEN 14 ELSE 15 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.7578790485858917) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= 0.7658727169036865) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -1.2071588635444641) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 0.9897084534168243) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= -0.020362108945846558) THEN 24 ELSE 25 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= -0.13500706478953362) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= 0.44433164596557617) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 0.01365644857287407) THEN 29 ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= -0.08650192618370056) THEN 32 ELSE 33 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= -0.33004482835531235) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= 0.10651705518830568) THEN 36 ELSE 37 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 0.2993222698569298) THEN 39 ELSE 40 END END END END END AS node_id_2 
FROM "TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -200.19477748418348 AS "E" UNION ALL SELECT 6 AS nid, -234.4658092919816 AS "E" UNION ALL SELECT 7 AS nid, -167.53786194153668 AS "E" UNION ALL SELECT 10 AS nid, -312.4692471373754 AS "E" UNION ALL SELECT 11 AS nid, -349.85659647969806 AS "E" UNION ALL SELECT 12 AS nid, -430.7322420182495 AS "E" UNION ALL SELECT 14 AS nid, 174.05588768325575 AS "E" UNION ALL SELECT 15 AS nid, -55.13785992768933 AS "E" UNION ALL SELECT 19 AS nid, -146.53732849176905 AS "E" UNION ALL SELECT 21 AS nid, -88.08599662350004 AS "E" UNION ALL SELECT 22 AS nid, -50.5795657858279 AS "E" UNION ALL SELECT 24 AS nid, -190.99779883345465 AS "E" UNION ALL SELECT 25 AS nid, -290.52672487497273 AS "E" UNION ALL SELECT 29 AS nid, 10.869390280461314 AS "E" UNION ALL SELECT 30 AS nid, 107.44906867815173 AS "E" UNION ALL SELECT 32 AS nid, -207.8249772062679 AS "E" UNION ALL SELECT 33 AS nid, -234.79191600815204 AS "E" UNION ALL SELECT 36 AS nid, 344.0999710690674 AS "E" UNION ALL SELECT 37 AS nid, 213.7433285611016 AS "E" UNION ALL SELECT 39 AS nid, 105.41534311316869 AS "E" UNION ALL SELECT 40 AS nid, 198.47951527633785 AS "E") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."E" AS "E" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"BAG_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."E" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.44576358795166016) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.1993236355483532) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.09924034774303436) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= 0.4329536408185959) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.6412311941385269) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.4528330471366644) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= 0.84305140376091) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.08654440194368362) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= -0.35730177722871304) THEN 15 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_100 <= -0.6467523127794266) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= -0.6479641310870647) THEN 20 ELSE 21 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.8815765380859375) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -0.5304174423217773) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= 0.5267578810453415) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= 0.009369537234306335) THEN 28 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.3706108294427395) THEN 30 ELSE 31 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= -0.13316402211785316) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= 0.829570859670639) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_77 <= -0.875682920217514) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -0.18875989317893982) THEN 38 ELSE 39 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 0.5280824303627014) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -1.5268332362174988) THEN 42 ELSE 43 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -1.9937978088855743) THEN 45 ELSE 46 END END END END END AS node_id_2 
FROM "TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -290.9850439982121 AS "E" UNION ALL SELECT 6 AS nid, -334.8676350174931 AS "E" UNION ALL SELECT 7 AS nid, -436.8930860886948 AS "E" UNION ALL SELECT 9 AS nid, -310.56333873263117 AS "E" UNION ALL SELECT 11 AS nid, -227.9686546286384 AS "E" UNION ALL SELECT 12 AS nid, -168.59217754616355 AS "E" UNION ALL SELECT 15 AS nid, -202.60833883427068 AS "E" UNION ALL SELECT 17 AS nid, -76.8627548707201 AS "E" UNION ALL SELECT 18 AS nid, -80.78526024187205 AS "E" UNION ALL SELECT 20 AS nid, 48.423335696929506 AS "E" UNION ALL SELECT 21 AS nid, 38.19976422974274 AS "E" UNION ALL SELECT 25 AS nid, -79.28963380412185 AS "E" UNION ALL SELECT 26 AS nid, 62.605323392817695 AS "E" UNION ALL SELECT 28 AS nid, -280.96508601336274 AS "E" UNION ALL SELECT 30 AS nid, -168.84842320108817 AS "E" UNION ALL SELECT 31 AS nid, -190.99779883345465 AS "E" UNION ALL SELECT 35 AS nid, -152.83634433227704 AS "E" UNION ALL SELECT 36 AS nid, -3.7150483664869447 AS "E" UNION ALL SELECT 38 AS nid, 125.56433357849326 AS "E" UNION ALL SELECT 39 AS nid, 176.9109362378024 AS "E" UNION ALL SELECT 42 AS nid, 12.033191796138581 AS "E" UNION ALL SELECT 43 AS nid, 186.69926654930842 AS "E" UNION ALL SELECT 45 AS nid, 419.8117904787066 AS "E" UNION ALL SELECT 46 AS nid, 288.33141635856674 AS "E") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."E" AS "E" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"BAG_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."E" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.350930854678154) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= 0.14935948327183723) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_26 <= -0.4573536738753319) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= -1.4130249619483948) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= -0.11800521612167358) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.8920293152332306) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= -0.1851868648082018) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= -0.07446937263011932) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.10983976721763611) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= -1.0618624091148376) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= -0.0083085298538208) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -0.5603137314319611) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -1.1880066990852356) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -0.6360728740692139) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= -0.22414420545101166) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 0.8505466282367706) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= 1.1604843735694885) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= 0.5754507184028625) THEN 32 ELSE 33 END ELSE 34 END ELSE 35 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -0.8380407392978668) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= 1.2619076371192932) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= -0.23714347183704376) THEN 39 ELSE 40 END ELSE 41 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= -0.9472586810588837) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_100 <= -1.0509330928325653) THEN 44 ELSE 45 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= 0.6090817600488663) THEN 47 ELSE 48 END END END END END AS node_id_2 
FROM "TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -430.7322420182495 AS "E" UNION ALL SELECT 6 AS nid, -436.8930860886948 AS "E" UNION ALL SELECT 8 AS nid, -338.5499431552182 AS "E" UNION ALL SELECT 9 AS nid, -327.50301874204285 AS "E" UNION ALL SELECT 12 AS nid, -146.53732849176905 AS "E" UNION ALL SELECT 13 AS nid, -199.78996834853058 AS "E" UNION ALL SELECT 15 AS nid, -246.3040437706245 AS "E" UNION ALL SELECT 16 AS nid, -287.3395119211027 AS "E" UNION ALL SELECT 19 AS nid, 75.60702200307296 AS "E" UNION ALL SELECT 21 AS nid, 136.92680038236625 AS "E" UNION ALL SELECT 22 AS nid, 114.45423222726873 AS "E" UNION ALL SELECT 24 AS nid, -200.33739348214584 AS "E" UNION ALL SELECT 26 AS nid, -102.26347334362194 AS "E" UNION ALL SELECT 27 AS nid, -46.44792978784549 AS "E" UNION ALL SELECT 32 AS nid, 157.53882923776118 AS "E" UNION ALL SELECT 33 AS nid, 255.71265709114203 AS "E" UNION ALL SELECT 34 AS nid, 419.8117904787066 AS "E" UNION ALL SELECT 35 AS nid, -140.57351311758325 AS "E" UNION ALL SELECT 39 AS nid, 134.61347025859965 AS "E" UNION ALL SELECT 40 AS nid, 76.63859902488964 AS "E" UNION ALL SELECT 41 AS nid, 327.27619652811467 AS "E" UNION ALL SELECT 44 AS nid, 105.13302468571077 AS "E" UNION ALL SELECT 45 AS nid, 278.8145316391315 AS "E" UNION ALL SELECT 47 AS nid, -60.81751590233067 AS "E" UNION ALL SELECT 48 AS nid, -182.722850931252 AS "E") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."E" AS "E" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"BAG_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."E" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.5905457437038422) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.35369565710425377) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 0.07095328532159328) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= -0.7129938006401062) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= 0.2289997935295105) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -0.32832206785678864) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= -0.34679238498210907) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= -0.3886333107948303) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= 1.517297387123108) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.8282566964626312) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= -1.1905877888202667) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= 0.5214989483356476) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= -1.592391014099121) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_100 <= 0.5041822791099548) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= 0.43509984016418457) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.08157276432029903) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= -0.5461323708295822) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= 0.7287900894880295) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 1.4343923032283783) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.15350957959890366) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= 1.4446298480033875) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 0.5832789540290833) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 <= -0.7115787267684937) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= 0.5566278547048569) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.42843306064605713) THEN 47 ELSE 48 END ELSE 49 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.04996819794178009) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 <= 0.45903368294239044) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.7987546175718307) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM "TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -454.8215873712685 AS "E" UNION ALL SELECT 6 AS nid, -430.7322420182495 AS "E" UNION ALL SELECT 8 AS nid, -349.85659647969806 AS "E" UNION ALL SELECT 9 AS nid, -299.06823541675624 AS "E" UNION ALL SELECT 12 AS nid, -146.53732849176905 AS "E" UNION ALL SELECT 13 AS nid, -190.64702660055804 AS "E" UNION ALL SELECT 15 AS nid, -257.9792248911822 AS "E" UNION ALL SELECT 16 AS nid, -234.79191600815204 AS "E" UNION ALL SELECT 19 AS nid, 39.44300011869663 AS "E" UNION ALL SELECT 21 AS nid, 75.60702200307296 AS "E" UNION ALL SELECT 22 AS nid, 75.33652615813574 AS "E" UNION ALL SELECT 24 AS nid, -102.26347334362194 AS "E" UNION ALL SELECT 26 AS nid, -197.95958233727865 AS "E" UNION ALL SELECT 27 AS nid, -190.99779883345465 AS "E" UNION ALL SELECT 32 AS nid, 98.59864297004285 AS "E" UNION ALL SELECT 33 AS nid, -3.8590694942672137 AS "E" UNION ALL SELECT 35 AS nid, 168.8457387530468 AS "E" UNION ALL SELECT 36 AS nid, 327.27619652811467 AS "E" UNION ALL SELECT 39 AS nid, -103.15843491730894 AS "E" UNION ALL SELECT 40 AS nid, -327.50301874204285 AS "E" UNION ALL SELECT 42 AS nid, 8.792374222390666 AS "E" UNION ALL SELECT 43 AS nid, 119.5812167572754 AS "E" UNION ALL SELECT 47 AS nid, 270.9786797098036 AS "E" UNION ALL SELECT 48 AS nid, 294.7961773027205 AS "E" UNION ALL SELECT 49 AS nid, 419.8117904787066 AS "E" UNION ALL SELECT 52 AS nid, 129.6826307591967 AS "E" UNION ALL SELECT 53 AS nid, 112.55251202912707 AS "E" UNION ALL SELECT 55 AS nid, 195.39419395402132 AS "E" UNION ALL SELECT 56 AS nid, 216.372382438852 AS "E") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."E" AS "E" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"BAG_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."E" AS "Estimator" 
FROM "DT_Output_9")
 INSERT INTO "TMP_20221018185503_8UKIU70_BAG_B0" ("KEY", "Estimator") SELECT "T"."KEY", "T"."Estimator" 
FROM (SELECT "BAG_B0"."KEY" AS "KEY", "BAG_B0"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_esu_0"."KEY" AS "KEY", "BAG_esu_0"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Model_0"."KEY" AS "KEY", "BAG_Model_0"."Estimator" AS "Estimator" 
FROM "BAG_Model_0" UNION ALL SELECT "BAG_Model_1"."KEY" AS "KEY", "BAG_Model_1"."Estimator" AS "Estimator" 
FROM "BAG_Model_1" UNION ALL SELECT "BAG_Model_2"."KEY" AS "KEY", "BAG_Model_2"."Estimator" AS "Estimator" 
FROM "BAG_Model_2" UNION ALL SELECT "BAG_Model_3"."KEY" AS "KEY", "BAG_Model_3"."Estimator" AS "Estimator" 
FROM "BAG_Model_3" UNION ALL SELECT "BAG_Model_4"."KEY" AS "KEY", "BAG_Model_4"."Estimator" AS "Estimator" 
FROM "BAG_Model_4" UNION ALL SELECT "BAG_Model_5"."KEY" AS "KEY", "BAG_Model_5"."Estimator" AS "Estimator" 
FROM "BAG_Model_5" UNION ALL SELECT "BAG_Model_6"."KEY" AS "KEY", "BAG_Model_6"."Estimator" AS "Estimator" 
FROM "BAG_Model_6" UNION ALL SELECT "BAG_Model_7"."KEY" AS "KEY", "BAG_Model_7"."Estimator" AS "Estimator" 
FROM "BAG_Model_7" UNION ALL SELECT "BAG_Model_8"."KEY" AS "KEY", "BAG_Model_8"."Estimator" AS "Estimator" 
FROM "BAG_Model_8" UNION ALL SELECT "BAG_Model_9"."KEY" AS "KEY", "BAG_Model_9"."Estimator" AS "Estimator" 
FROM "BAG_Model_9") AS "BAG_esu_0") AS "BAG_B0") AS "T"

-- Code For temporary table TMP_20221018185503_B0TOGJP_BAG_B1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185503_B0TOGJP_BAG_B1" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185503_B0TOGJP_BAG_B1 part 2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.2599138841032982) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -0.005990596488118172) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.13242184568662196) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= 0.6732237637042999) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= -0.4150003716349602) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -1.2778599858283997) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= 0.17403475753962994) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -0.7556581497192383) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= 1.0935335159301758) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= 1.0094436407089233) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= -0.9175879955291748) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.04438292980194092) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.17711924761533737) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= 0.6807756721973419) THEN 25 ELSE 26 END ELSE 27 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= 0.43509984016418457) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -0.5272890031337738) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= -0.6176904141902924) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.833586573600769) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= 0.10438647866249084) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= 0.894407719373703) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= -0.6986735165119171) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.05429854989051819) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= -0.9162358343601227) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= 0.09338803705759346) THEN 46 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 0.5727331042289734) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= 0.01645982638001442) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= -0.10547378659248352) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= 1.5347660779953003) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM "TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -343.1764960495319 AS "E" UNION ALL SELECT 6 AS nid, -289.2613657388755 AS "E" UNION ALL SELECT 7 AS nid, -207.8249772062679 AS "E" UNION ALL SELECT 10 AS nid, -167.53786194153668 AS "E" UNION ALL SELECT 11 AS nid, -196.1762239786283 AS "E" UNION ALL SELECT 13 AS nid, -86.11645147491663 AS "E" UNION ALL SELECT 14 AS nid, -102.26347334362194 AS "E" UNION ALL SELECT 18 AS nid, 176.41381900111423 AS "E" UNION ALL SELECT 19 AS nid, 69.48912628462016 AS "E" UNION ALL SELECT 21 AS nid, -55.13785992768933 AS "E" UNION ALL SELECT 22 AS nid, -42.10296471792358 AS "E" UNION ALL SELECT 25 AS nid, -234.79191600815204 AS "E" UNION ALL SELECT 26 AS nid, -257.9792248911822 AS "E" UNION ALL SELECT 27 AS nid, -190.64702660055804 AS "E" UNION ALL SELECT 32 AS nid, 57.87799416085497 AS "E" UNION ALL SELECT 33 AS nid, -30.698977731486934 AS "E" UNION ALL SELECT 35 AS nid, 97.90244967133617 AS "E" UNION ALL SELECT 36 AS nid, 144.72865942116238 AS "E" UNION ALL SELECT 39 AS nid, -156.67681004866296 AS "E" UNION ALL SELECT 40 AS nid, -81.13315658564488 AS "E" UNION ALL SELECT 42 AS nid, 5.871497481653321 AS "E" UNION ALL SELECT 43 AS nid, 94.43377409338842 AS "E" UNION ALL SELECT 46 AS nid, -51.54063841079579 AS "E" UNION ALL SELECT 48 AS nid, 130.61554227069345 AS "E" UNION ALL SELECT 49 AS nid, 128.74971924769997 AS "E" UNION ALL SELECT 52 AS nid, 299.93393741755256 AS "E" UNION ALL SELECT 53 AS nid, 256.7906055772042 AS "E" UNION ALL SELECT 55 AS nid, 176.1183180952158 AS "E" UNION ALL SELECT 56 AS nid, 219.92766037620171 AS "E") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."E" AS "E" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"BAG_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."E" AS "Estimator" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= 0.17852091789245605) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 0.9057775437831879) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.32805293798446655) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= 0.3736196905374527) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.39747755974531174) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.40498171281069517) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= 1.0050063133239746) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= 0.3836154639720917) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= 1.6659284234046936) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= 0.030869875103235245) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= -0.33634325861930847) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.8357566297054291) THEN 21 ELSE 22 END END ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= -0.9844475090503693) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 0.06403913721442223) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= 0.6596128270030022) THEN 27 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= 0.9674265161156654) THEN 29 ELSE 30 END END ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= 0.9317265450954437) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_38 <= -0.6634959280490875) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= 0.7089875936508179) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= 0.6581421494483948) THEN 38 ELSE 39 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= 1.7638448476791382) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= -0.8423165678977966) THEN 42 ELSE 43 END ELSE 44 END END END END AS node_id_2 
FROM "TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -247.22193824420594 AS "E" UNION ALL SELECT 6 AS nid, -4.904591434376485 AS "E" UNION ALL SELECT 8 AS nid, -440.8156384927376 AS "E" UNION ALL SELECT 9 AS nid, -338.5499431552182 AS "E" UNION ALL SELECT 12 AS nid, -158.73693841912285 AS "E" UNION ALL SELECT 13 AS nid, -85.19949597203019 AS "E" UNION ALL SELECT 14 AS nid, 114.45423222726873 AS "E" UNION ALL SELECT 18 AS nid, 164.25025132070562 AS "E" UNION ALL SELECT 19 AS nid, 305.0402047722153 AS "E" UNION ALL SELECT 21 AS nid, 2.273972887782435 AS "E" UNION ALL SELECT 22 AS nid, 75.51685672142722 AS "E" UNION ALL SELECT 23 AS nid, -172.78010697974267 AS "E" UNION ALL SELECT 27 AS nid, -202.60833883427068 AS "E" UNION ALL SELECT 29 AS nid, -79.78381998603227 AS "E" UNION ALL SELECT 30 AS nid, -107.89147253045782 AS "E" UNION ALL SELECT 31 AS nid, 48.423335696929506 AS "E" UNION ALL SELECT 35 AS nid, 192.33450735988313 AS "E" UNION ALL SELECT 36 AS nid, 273.5906303529129 AS "E" UNION ALL SELECT 38 AS nid, 137.78432322225567 AS "E" UNION ALL SELECT 39 AS nid, 11.656605497463172 AS "E" UNION ALL SELECT 42 AS nid, 294.7646845425511 AS "E" UNION ALL SELECT 43 AS nid, 327.27619652811467 AS "E" UNION ALL SELECT 44 AS nid, 419.8117904787066 AS "E") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."E" AS "E" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"BAG_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."E" AS "Estimator" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.08462327159941196) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.5376059710979462) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.1660197600722313) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= -0.10120362788438797) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= 1.5000616610050201) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= 0.9631346464157104) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= 0.7179644852876663) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 <= -0.610464483499527) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.3820924013853073) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= -0.5762246698141098) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 1.107966735959053) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.16555766016244888) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -0.0601997971534729) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= 0.14027793239802122) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= 0.7742966115474701) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 0.6634410321712494) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= 1.636881709098816) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= -0.8166714906692505) THEN 32 ELSE 33 END ELSE 34 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= 0.6079475581645966) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 1.2890289425849915) THEN 37 ELSE 38 END ELSE 39 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= 0.5577292293310165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= 0.13618574291467667) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= -0.4462459832429886) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -0.19976960867643356) THEN 46 ELSE 47 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 1.3180699348449707) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= 0.41411231458187103) THEN 50 ELSE 51 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= -0.911201611161232) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM "TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -290.52672487497273 AS "E" UNION ALL SELECT 6 AS nid, -327.50301874204285 AS "E" UNION ALL SELECT 8 AS nid, -224.55702393888157 AS "E" UNION ALL SELECT 9 AS nid, -168.59217754616355 AS "E" UNION ALL SELECT 12 AS nid, -309.3283157350161 AS "E" UNION ALL SELECT 13 AS nid, -346.08771203820476 AS "E" UNION ALL SELECT 14 AS nid, -454.8215873712685 AS "E" UNION ALL SELECT 18 AS nid, -196.71122136378426 AS "E" UNION ALL SELECT 19 AS nid, -280.96508601336274 AS "E" UNION ALL SELECT 21 AS nid, -78.70066663565564 AS "E" UNION ALL SELECT 22 AS nid, 1.2798103176110704 AS "E" UNION ALL SELECT 24 AS nid, 215.90083761986222 AS "E" UNION ALL SELECT 26 AS nid, 112.97620976665738 AS "E" UNION ALL SELECT 27 AS nid, 75.33652615813574 AS "E" UNION ALL SELECT 32 AS nid, 269.99164447428086 AS "E" UNION ALL SELECT 33 AS nid, 155.62750531878524 AS "E" UNION ALL SELECT 34 AS nid, -140.57351311758325 AS "E" UNION ALL SELECT 37 AS nid, 309.0690189611862 AS "E" UNION ALL SELECT 38 AS nid, 233.33694106574706 AS "E" UNION ALL SELECT 39 AS nid, 419.8117904787066 AS "E" UNION ALL SELECT 43 AS nid, -35.64678210528627 AS "E" UNION ALL SELECT 44 AS nid, -101.25602253534423 AS "E" UNION ALL SELECT 46 AS nid, -202.60833883427068 AS "E" UNION ALL SELECT 47 AS nid, -172.78010697974267 AS "E" UNION ALL SELECT 50 AS nid, 94.43377409338842 AS "E" UNION ALL SELECT 51 AS nid, 38.19976422974274 AS "E" UNION ALL SELECT 53 AS nid, 278.8145316391315 AS "E" UNION ALL SELECT 54 AS nid, 212.81710450150226 AS "E") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."E" AS "E" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"BAG_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."E" AS "Estimator" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.2599138841032982) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.09652218362316489) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= 0.08841771492734551) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_91 <= 1.2617855072021484) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 0.5092589929699898) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= 0.01943528652191162) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= 0.840297058224678) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 <= -1.0403707027435303) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= 0.18413606937974691) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -0.46371951699256897) THEN 17 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 1.1819908916950226) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= 0.10657871887087822) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.576454222202301) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= 1.1940591931343079) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= 0.6867509186267853) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -0.9538306295871735) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= -0.9067000150680542) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 0.02132304012775421) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= -0.6858637034893036) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= 0.979911744594574) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= -0.19223552942276) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.16080030798912048) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= -0.032901208847761154) THEN 45 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 <= -0.749872475862503) THEN 47 ELSE 48 END END END END AS node_id_2 
FROM "TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -341.44153871416427 AS "E" UNION ALL SELECT 6 AS nid, -295.97057316324384 AS "E" UNION ALL SELECT 8 AS nid, -454.8215873712685 AS "E" UNION ALL SELECT 9 AS nid, -430.7322420182495 AS "E" UNION ALL SELECT 12 AS nid, -286.40448669256784 AS "E" UNION ALL SELECT 13 AS nid, -188.15991839969823 AS "E" UNION ALL SELECT 14 AS nid, -436.8930860886948 AS "E" UNION ALL SELECT 17 AS nid, 215.90083761986224 AS "E" UNION ALL SELECT 19 AS nid, 112.97620976665738 AS "E" UNION ALL SELECT 20 AS nid, 136.92680038236625 AS "E" UNION ALL SELECT 23 AS nid, -55.13785992768933 AS "E" UNION ALL SELECT 24 AS nid, -86.11645147491663 AS "E" UNION ALL SELECT 26 AS nid, -234.62886265006682 AS "E" UNION ALL SELECT 27 AS nid, -196.1762239786283 AS "E" UNION ALL SELECT 32 AS nid, 62.605323392817695 AS "E" UNION ALL SELECT 33 AS nid, 48.423335696929506 AS "E" UNION ALL SELECT 35 AS nid, -30.698977731486934 AS "E" UNION ALL SELECT 36 AS nid, -7.810017402615081 AS "E" UNION ALL SELECT 39 AS nid, 171.65996346917316 AS "E" UNION ALL SELECT 40 AS nid, 279.4711843291981 AS "E" UNION ALL SELECT 42 AS nid, 17.17034736773776 AS "E" UNION ALL SELECT 43 AS nid, 123.38369915785242 AS "E" UNION ALL SELECT 45 AS nid, -202.60833883427068 AS "E" UNION ALL SELECT 47 AS nid, -140.57351311758325 AS "E" UNION ALL SELECT 48 AS nid, -107.89147253045782 AS "E") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."E" AS "E" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"BAG_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."E" AS "Estimator" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.5905457437038422) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= 0.14935948327183723) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= 0.49538738280534744) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_75 <= 1.1483081877231598) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= 0.3005492687225342) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -0.7078090012073517) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= -0.5302534103393555) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 0.5092589929699898) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -0.5625137239694595) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -1.6482348442077637) THEN 17 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= 0.0810168907046318) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= -0.8968045711517334) THEN 22 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= -0.26150545477867126) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= 0.9659855663776398) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -0.6597981750965118) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.28567004948854446) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_77 <= 1.3664928078651428) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= 0.8619745522737503) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= -0.9853481650352478) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= 0.9876587390899658) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= -0.5217739343643188) THEN 40 ELSE 41 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= 0.3661642074584961) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.2833804041147232) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -0.20297689735889435) THEN 45 ELSE 46 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= -0.6361527889966965) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= 1.7600530982017517) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= 0.7420800030231476) THEN 52 ELSE 53 END ELSE 54 END END END END AS node_id_2 
FROM "TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -214.98883224347765 AS "E" UNION ALL SELECT 6 AS nid, -284.4633246044624 AS "E" UNION ALL SELECT 8 AS nid, -86.11645147491663 AS "E" UNION ALL SELECT 9 AS nid, -146.53732849176905 AS "E" UNION ALL SELECT 11 AS nid, -436.8930860886948 AS "E" UNION ALL SELECT 13 AS nid, -353.62548092119135 AS "E" UNION ALL SELECT 14 AS nid, -306.85826973978595 AS "E" UNION ALL SELECT 17 AS nid, -102.26347334362194 AS "E" UNION ALL SELECT 19 AS nid, -55.13785992768933 AS "E" UNION ALL SELECT 20 AS nid, -42.10296471792358 AS "E" UNION ALL SELECT 22 AS nid, 183.77184322024888 AS "E" UNION ALL SELECT 24 AS nid, 88.55609207780488 AS "E" UNION ALL SELECT 25 AS nid, 39.44300011869663 AS "E" UNION ALL SELECT 30 AS nid, 62.605323392817695 AS "E" UNION ALL SELECT 31 AS nid, 105.13302468571077 AS "E" UNION ALL SELECT 33 AS nid, -68.30228340874595 AS "E" UNION ALL SELECT 34 AS nid, 2.273972887782435 AS "E" UNION ALL SELECT 37 AS nid, 133.00513623433022 AS "E" UNION ALL SELECT 38 AS nid, -51.54063841079579 AS "E" UNION ALL SELECT 40 AS nid, 307.43229907746235 AS "E" UNION ALL SELECT 41 AS nid, 207.43779854156566 AS "E" UNION ALL SELECT 45 AS nid, -100.74101284887382 AS "E" UNION ALL SELECT 46 AS nid, -140.57351311758325 AS "E" UNION ALL SELECT 48 AS nid, -30.698977731486934 AS "E" UNION ALL SELECT 49 AS nid, -3.8590694942672137 AS "E" UNION ALL SELECT 52 AS nid, 123.63488696999391 AS "E" UNION ALL SELECT 53 AS nid, 94.43377409338842 AS "E" UNION ALL SELECT 54 AS nid, 38.19976422974274 AS "E") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."E" AS "E" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"BAG_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."E" AS "Estimator" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.31318267434835434) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= -0.5376059710979462) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 0.3763437718153) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= 0.6439536064863205) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 0.12572208233177662) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.6949241682887077) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= -1.1334913820028305) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= -0.006481874734163284) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= 0.9929787591099739) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.44172756373882294) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= -0.9161774516105652) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= 1.0392022132873535) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -0.09586620330810547) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= -0.8383644223213196) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_51 <= 0.18292241543531418) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= 1.0998771786689758) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.3396662026643753) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_34 <= -0.6021856069564819) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= -0.6119705587625504) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= 1.4345571994781494) THEN 38 ELSE 39 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_39 <= 0.8565286993980408) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 1.5860397219657898) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= -0.09984189178794622) THEN 43 ELSE 44 END ELSE 45 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.9911497086286545) THEN 47 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_83 <= 0.5152927811723202) THEN 49 ELSE 50 END END END END END AS node_id_2 
FROM "TMP_20221018185503_IBFKUCP_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, -296.1944595877875 AS "E" UNION ALL SELECT 6 AS nid, -343.5069641134115 AS "E" UNION ALL SELECT 7 AS nid, -454.8215873712685 AS "E" UNION ALL SELECT 10 AS nid, -257.9792248911822 AS "E" UNION ALL SELECT 11 AS nid, -230.18872396911456 AS "E" UNION ALL SELECT 12 AS nid, -146.53732849176905 AS "E" UNION ALL SELECT 16 AS nid, -193.58701140604148 AS "E" UNION ALL SELECT 17 AS nid, -280.96508601336274 AS "E" UNION ALL SELECT 19 AS nid, -102.26347334362194 AS "E" UNION ALL SELECT 20 AS nid, -86.11645147491663 AS "E" UNION ALL SELECT 23 AS nid, 124.95150507451181 AS "E" UNION ALL SELECT 24 AS nid, 57.389763138416185 AS "E" UNION ALL SELECT 26 AS nid, 183.77184322024888 AS "E" UNION ALL SELECT 27 AS nid, 215.90083761986222 AS "E" UNION ALL SELECT 32 AS nid, -156.67681004866296 AS "E" UNION ALL SELECT 33 AS nid, -85.0536912170113 AS "E" UNION ALL SELECT 35 AS nid, -45.02051393489446 AS "E" UNION ALL SELECT 36 AS nid, 9.318352261389073 AS "E" UNION ALL SELECT 38 AS nid, 114.66116147528915 AS "E" UNION ALL SELECT 39 AS nid, 327.27619652811467 AS "E" UNION ALL SELECT 43 AS nid, 221.8396437599909 AS "E" UNION ALL SELECT 44 AS nid, 289.3899809084267 AS "E" UNION ALL SELECT 45 AS nid, 62.605323392817695 AS "E" UNION ALL SELECT 47 AS nid, -4.904591434376485 AS "E" UNION ALL SELECT 49 AS nid, 144.72865942116238 AS "E" UNION ALL SELECT 50 AS nid, 92.552824375175 AS "E") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."E" AS "E" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"BAG_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."E" AS "Estimator" 
FROM "DT_Output_15")
 INSERT INTO "TMP_20221018185503_B0TOGJP_BAG_B1" ("KEY", "Estimator") SELECT "T"."KEY", "T"."Estimator" 
FROM (SELECT "BAG_B1"."KEY" AS "KEY", "BAG_B1"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_esu_1"."KEY" AS "KEY", "BAG_esu_1"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Model_10"."KEY" AS "KEY", "BAG_Model_10"."Estimator" AS "Estimator" 
FROM "BAG_Model_10" UNION ALL SELECT "BAG_Model_11"."KEY" AS "KEY", "BAG_Model_11"."Estimator" AS "Estimator" 
FROM "BAG_Model_11" UNION ALL SELECT "BAG_Model_12"."KEY" AS "KEY", "BAG_Model_12"."Estimator" AS "Estimator" 
FROM "BAG_Model_12" UNION ALL SELECT "BAG_Model_13"."KEY" AS "KEY", "BAG_Model_13"."Estimator" AS "Estimator" 
FROM "BAG_Model_13" UNION ALL SELECT "BAG_Model_14"."KEY" AS "KEY", "BAG_Model_14"."Estimator" AS "Estimator" 
FROM "BAG_Model_14" UNION ALL SELECT "BAG_Model_15"."KEY" AS "KEY", "BAG_Model_15"."Estimator" AS "Estimator" 
FROM "BAG_Model_15") AS "BAG_esu_1") AS "BAG_B1") AS "T"

-- Code For temporary table TMP_20221018185503_YBRTL5F_BAG_avg part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185503_YBRTL5F_BAG_avg" (
	"KEY" BIGINT NOT NULL, 
	"Estimator" FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185503_YBRTL5F_BAG_avg part 2. Populate

WITH "BAG_Union" AS 
(SELECT "BAG_EnsembleUnion"."KEY" AS "KEY", "BAG_EnsembleUnion"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_B0"."KEY" AS "KEY", "BAG_B0"."Estimator" AS "Estimator" 
FROM "TMP_20221018185503_8UKIU70_BAG_B0" AS "BAG_B0" UNION ALL SELECT "BAG_B1"."KEY" AS "KEY", "BAG_B1"."Estimator" AS "Estimator" 
FROM "TMP_20221018185503_B0TOGJP_BAG_B1" AS "BAG_B1") AS "BAG_EnsembleUnion")
 INSERT INTO "TMP_20221018185503_YBRTL5F_BAG_avg" ("KEY", "Estimator") SELECT "T"."KEY", "T"."Estimator" 
FROM (SELECT "BAG_avg"."KEY" AS "KEY", "BAG_avg"."Estimator" AS "Estimator" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT "BAG_Union"."KEY" AS "KEY", avg(CAST("BAG_Union"."Estimator" AS FLOAT)) AS "Estimator" 
FROM "BAG_Union" GROUP BY "BAG_Union"."KEY") AS "T") AS "BAG_avg") AS "T"

-- Code For temporary table TMP_20221018185503_YBRTL5F_BAG_avg part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185503_YBRTL5F_BAG_avg_KEY" ON "TMP_20221018185503_YBRTL5F_BAG_avg" ("KEY")

-- Model deployment code

SELECT "BAG_avg"."KEY" AS "KEY", "BAG_avg"."Estimator" AS "Estimator" 
FROM "TMP_20221018185503_YBRTL5F_BAG_avg" AS "BAG_avg"