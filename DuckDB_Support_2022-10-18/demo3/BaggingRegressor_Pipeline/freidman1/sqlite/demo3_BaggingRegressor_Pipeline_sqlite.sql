-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : BaggingRegressor_Pipeline
-- Dataset : freidman1
-- Database : sqlite


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018190104_YKJ9JD5_ADS_imp_1_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190104_YKJ9JD5_ADS_imp_1_OUT" (
	"KEY" BIGINT NOT NULL, 
	imputer_output_2 FLOAT, 
	imputer_output_3 FLOAT, 
	imputer_output_4 FLOAT, 
	imputer_output_5 FLOAT, 
	imputer_output_6 FLOAT, 
	imputer_output_7 FLOAT, 
	imputer_output_8 FLOAT, 
	imputer_output_9 FLOAT, 
	imputer_output_10 FLOAT, 
	imputer_output_11 FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20221018190104_YKJ9JD5_ADS_imp_1_OUT part 2. Populate

INSERT INTO "TMP_20221018190104_YKJ9JD5_ADS_imp_1_OUT" ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5, imputer_output_6, imputer_output_7, imputer_output_8, imputer_output_9, imputer_output_10, imputer_output_11) SELECT "T"."KEY", "T".imputer_output_2, "T".imputer_output_3, "T".imputer_output_4, "T".imputer_output_5, "T".imputer_output_6, "T".imputer_output_7, "T".imputer_output_8, "T".imputer_output_9, "T".imputer_output_10, "T".imputer_output_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".imputer_output_2 AS imputer_output_2, "ADS_imp_1_OUT".imputer_output_3 AS imputer_output_3, "ADS_imp_1_OUT".imputer_output_4 AS imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 AS imputer_output_5, "ADS_imp_1_OUT".imputer_output_6 AS imputer_output_6, "ADS_imp_1_OUT".imputer_output_7 AS imputer_output_7, "ADS_imp_1_OUT".imputer_output_8 AS imputer_output_8, "ADS_imp_1_OUT".imputer_output_9 AS imputer_output_9, "ADS_imp_1_OUT".imputer_output_10 AS imputer_output_10, "ADS_imp_1_OUT".imputer_output_11 AS imputer_output_11 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.5629846484809591 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.45606442423375926 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.47113817481474773 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.533968020094518 ELSE "ADS"."Feature_3" END AS imputer_output_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.4780936262373869 ELSE "ADS"."Feature_4" END AS imputer_output_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.5682849224172329 ELSE "ADS"."Feature_5" END AS imputer_output_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.47914374714280494 ELSE "ADS"."Feature_6" END AS imputer_output_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.4594152477223205 ELSE "ADS"."Feature_7" END AS imputer_output_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.4901106996809651 ELSE "ADS"."Feature_8" END AS imputer_output_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.5378806933707533 ELSE "ADS"."Feature_9" END AS imputer_output_11 
FROM freidman1 AS "ADS") AS "ADS_imp_1_OUT") AS "T"

-- Code For temporary table TMP_20221018190104_YKJ9JD5_ADS_imp_1_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018190104_YKJ9JD5_ADS_imp_1_OUT_KEY" ON "TMP_20221018190104_YKJ9JD5_ADS_imp_1_OUT" ("KEY")

-- Code For temporary table TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT" (
	"KEY" BIGINT NOT NULL, 
	scaler_output_2 FLOAT, 
	scaler_output_3 FLOAT, 
	scaler_output_4 FLOAT, 
	scaler_output_5 FLOAT, 
	scaler_output_6 FLOAT, 
	scaler_output_7 FLOAT, 
	scaler_output_8 FLOAT, 
	scaler_output_9 FLOAT, 
	scaler_output_10 FLOAT, 
	scaler_output_11 FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT part 2. Populate

INSERT INTO "TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT" ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11) SELECT "T"."KEY", "T".scaler_output_2, "T".scaler_output_3, "T".scaler_output_4, "T".scaler_output_5, "T".scaler_output_6, "T".scaler_output_7, "T".scaler_output_8, "T".scaler_output_9, "T".scaler_output_10, "T".scaler_output_11 
FROM (SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", "ADS_sca_2_OUT".scaler_output_2 AS scaler_output_2, "ADS_sca_2_OUT".scaler_output_3 AS scaler_output_3, "ADS_sca_2_OUT".scaler_output_4 AS scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 AS scaler_output_5, "ADS_sca_2_OUT".scaler_output_6 AS scaler_output_6, "ADS_sca_2_OUT".scaler_output_7 AS scaler_output_7, "ADS_sca_2_OUT".scaler_output_8 AS scaler_output_8, "ADS_sca_2_OUT".scaler_output_9 AS scaler_output_9, "ADS_sca_2_OUT".scaler_output_10 AS scaler_output_10, "ADS_sca_2_OUT".scaler_output_11 AS scaler_output_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS FLOAT) - 0.5629846484809591) / 0.2583714683396337 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS FLOAT) - 0.45606442423375926) / 0.2878721730712705 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS FLOAT) - 0.47113817481474773) / 0.3109216791553051 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS FLOAT) - 0.533968020094518) / 0.2826199867400281 AS scaler_output_5, (CAST("ADS_imp_1_OUT".imputer_output_6 AS FLOAT) - 0.4780936262373869) / 0.286140491317745 AS scaler_output_6, (CAST("ADS_imp_1_OUT".imputer_output_7 AS FLOAT) - 0.5682849224172329) / 0.29767408106451737 AS scaler_output_7, (CAST("ADS_imp_1_OUT".imputer_output_8 AS FLOAT) - 0.47914374714280494) / 0.2735314971431575 AS scaler_output_8, (CAST("ADS_imp_1_OUT".imputer_output_9 AS FLOAT) - 0.4594152477223205) / 0.28721149346998975 AS scaler_output_9, (CAST("ADS_imp_1_OUT".imputer_output_10 AS FLOAT) - 0.4901106996809651) / 0.2790486717322703 AS scaler_output_10, (CAST("ADS_imp_1_OUT".imputer_output_11 AS FLOAT) - 0.5378806933707533) / 0.2958192296543193 AS scaler_output_11 
FROM "TMP_20221018190104_YKJ9JD5_ADS_imp_1_OUT" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "T"

-- Code For temporary table TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT_KEY" ON "TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT" ("KEY")

-- Code For temporary table TMP_20221018190105_XRXR7I5_BAG_B0 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190105_XRXR7I5_BAG_B0" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)



-- Code For temporary table TMP_20221018190105_XRXR7I5_BAG_B0 part 2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5554684400558472) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.07249260740354657) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.0131055116653442) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.5194752067327499) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.5465253964066505) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.9904888868331909) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.15859099477529526) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.3994879722595215) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.8224952518939972) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.8141056895256042) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.7376106083393097) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.7081706523895264) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.6220327615737915) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.232419639825821) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.8790078461170197) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.652317613363266) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.8250467479228973) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.37003713846206665) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 1.440005123615265) THEN 35 ELSE 36 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.38361895829439163) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.25824561808258295) THEN 39 ELSE 40 END ELSE 41 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.884007453918457) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.26932352781295776) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.09689275920391083) THEN 45 ELSE 46 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.949830174446106) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.11304868012666702) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.2271086871623993) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.8534097969532013) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM "TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 4 AS nid, 8.06285010237755 AS "E" UNION ALL SELECT 6 AS nid, 5.293284001301807 AS "E" UNION ALL SELECT 7 AS nid, 6.2457102486321485 AS "E" UNION ALL SELECT 10 AS nid, 6.980046241948142 AS "E" UNION ALL SELECT 11 AS nid, 8.568626498210197 AS "E" UNION ALL SELECT 13 AS nid, 11.380993151416082 AS "E" UNION ALL SELECT 14 AS nid, 12.428643083555945 AS "E" UNION ALL SELECT 18 AS nid, 16.08254261562184 AS "E" UNION ALL SELECT 19 AS nid, 16.324769596540094 AS "E" UNION ALL SELECT 21 AS nid, 14.4669963696142 AS "E" UNION ALL SELECT 22 AS nid, 14.051184902745373 AS "E" UNION ALL SELECT 24 AS nid, 12.830344628983799 AS "E" UNION ALL SELECT 26 AS nid, 11.77602304541345 AS "E" UNION ALL SELECT 27 AS nid, 11.313518144724842 AS "E" UNION ALL SELECT 32 AS nid, 6.861453719338209 AS "E" UNION ALL SELECT 33 AS nid, 10.165017322239871 AS "E" UNION ALL SELECT 35 AS nid, 15.541797868565153 AS "E" UNION ALL SELECT 36 AS nid, 13.119756721377405 AS "E" UNION ALL SELECT 39 AS nid, 18.2506955183825 AS "E" UNION ALL SELECT 40 AS nid, 17.89244707919063 AS "E" UNION ALL SELECT 41 AS nid, 16.009611596379663 AS "E" UNION ALL SELECT 45 AS nid, 17.40946593852782 AS "E" UNION ALL SELECT 46 AS nid, 13.174202057525061 AS "E" UNION ALL SELECT 48 AS nid, 23.18131440832091 AS "E" UNION ALL SELECT 49 AS nid, 19.177023907550375 AS "E" UNION ALL SELECT 52 AS nid, 19.303788312018888 AS "E" UNION ALL SELECT 53 AS nid, 18.282515066510527 AS "E" UNION ALL SELECT 55 AS nid, 21.579545978049953 AS "E" UNION ALL SELECT 56 AS nid, 23.528047639538563 AS "E") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."E" AS "E" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"BAG_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."E" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.34914006292819977) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.2771869841963053) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.6321609020233154) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.05660967528820038) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.6102499067783356) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7796354442834854) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -1.2744203805923462) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.5011371970176697) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.1048519611358643) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.6435166597366333) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.5058903694152832) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 1.0429508239030838) THEN 20 ELSE 21 END ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.48809032142162323) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.4788615107536316) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.1697524785995483) THEN 28 ELSE 29 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7374852299690247) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.04169179091695696) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.4819217175245285) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.7699208557605743) THEN 34 ELSE 35 END ELSE 36 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.6820610612630844) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.7851515263319016) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.12339046597480774) THEN 42 ELSE 43 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -1.0851993560791016) THEN 45 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.6037161350250244) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.7096204161643982) THEN 48 ELSE 49 END ELSE 50 END END END END AS node_id_2 
FROM "TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, 12.071171804127433 AS "E" UNION ALL SELECT 6 AS nid, 13.146979389451232 AS "E" UNION ALL SELECT 8 AS nid, 18.2506955183825 AS "E" UNION ALL SELECT 9 AS nid, 16.08254261562184 AS "E" UNION ALL SELECT 12 AS nid, 12.760129264370008 AS "E" UNION ALL SELECT 13 AS nid, 12.123142001356333 AS "E" UNION ALL SELECT 15 AS nid, 10.351203945211374 AS "E" UNION ALL SELECT 16 AS nid, 7.44294178305543 AS "E" UNION ALL SELECT 20 AS nid, 10.15369462328104 AS "E" UNION ALL SELECT 21 AS nid, 13.135554697424194 AS "E" UNION ALL SELECT 22 AS nid, 18.493721395486528 AS "E" UNION ALL SELECT 25 AS nid, 18.207396885609956 AS "E" UNION ALL SELECT 26 AS nid, 15.308483991007721 AS "E" UNION ALL SELECT 28 AS nid, 21.340993370178953 AS "E" UNION ALL SELECT 29 AS nid, 23.693970395239383 AS "E" UNION ALL SELECT 34 AS nid, 19.36426348416223 AS "E" UNION ALL SELECT 35 AS nid, 20.13436784607212 AS "E" UNION ALL SELECT 36 AS nid, 18.10948375079814 AS "E" UNION ALL SELECT 39 AS nid, 17.857907243344265 AS "E" UNION ALL SELECT 40 AS nid, 18.250248044100616 AS "E" UNION ALL SELECT 42 AS nid, 16.00390059406837 AS "E" UNION ALL SELECT 43 AS nid, 16.914408313385564 AS "E" UNION ALL SELECT 45 AS nid, 18.900387696177468 AS "E" UNION ALL SELECT 48 AS nid, 22.53957472957775 AS "E" UNION ALL SELECT 49 AS nid, 23.76092016032117 AS "E" UNION ALL SELECT 50 AS nid, 25.24805848092261 AS "E") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."E" AS "E" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"BAG_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."E" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.12853724043816328) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.0131055116653442) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.08022167533636093) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.0812368243932724) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.9570851922035217) THEN 6 ELSE 7 END END ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 1.0415067076683044) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.7378084659576416) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.20577768050134182) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.7141208648681641) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 0.016009065322577953) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.07252655643969774) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.7168997079133987) THEN 22 ELSE 23 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.8174906969070435) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.0480525493621826) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.7140388339757919) THEN 27 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.7786935120820999) THEN 29 ELSE 30 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.8351979851722717) THEN 32 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.2151864171028137) THEN 34 ELSE 35 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.8964633345603943) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.9529251307249069) THEN 38 ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 1.1801438927650452) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.35275885462760925) THEN 42 ELSE 43 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.03137584030628204) THEN 45 ELSE 46 END END END END END AS node_id_2 
FROM "TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 4 AS nid, 9.735041217996262 AS "E" UNION ALL SELECT 6 AS nid, 6.861453719338209 AS "E" UNION ALL SELECT 7 AS nid, 7.809924090361902 AS "E" UNION ALL SELECT 8 AS nid, 5.293284001301807 AS "E" UNION ALL SELECT 12 AS nid, 8.314751977945186 AS "E" UNION ALL SELECT 13 AS nid, 11.639151859591639 AS "E" UNION ALL SELECT 15 AS nid, 12.071171804127433 AS "E" UNION ALL SELECT 16 AS nid, 13.702865836612794 AS "E" UNION ALL SELECT 19 AS nid, 18.332058017434036 AS "E" UNION ALL SELECT 20 AS nid, 23.693970395239383 AS "E" UNION ALL SELECT 22 AS nid, 11.380993151416082 AS "E" UNION ALL SELECT 23 AS nid, 15.00551178495008 AS "E" UNION ALL SELECT 27 AS nid, 7.219443350314415 AS "E" UNION ALL SELECT 29 AS nid, 14.536245187358322 AS "E" UNION ALL SELECT 30 AS nid, 12.423411759463056 AS "E" UNION ALL SELECT 32 AS nid, 10.181631174833692 AS "E" UNION ALL SELECT 34 AS nid, 16.165648310783745 AS "E" UNION ALL SELECT 35 AS nid, 18.81229911644796 AS "E" UNION ALL SELECT 38 AS nid, 15.308483991007721 AS "E" UNION ALL SELECT 39 AS nid, 19.303788312018888 AS "E" UNION ALL SELECT 42 AS nid, 21.485329031127737 AS "E" UNION ALL SELECT 43 AS nid, 22.965058271780993 AS "E" UNION ALL SELECT 45 AS nid, 24.713338273149652 AS "E" UNION ALL SELECT 46 AS nid, 25.24805848092261 AS "E") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."E" AS "E" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"BAG_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."E" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.035752530209720135) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.057984648272395134) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.050271600484848) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.4581993222236633) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3057439923286438) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.014901649672538042) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.15673836320638657) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -1.2631678581237793) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.3643086105585098) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.3692643940448761) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 1.6203344464302063) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.4717315584421158) THEN 21 ELSE 22 END ELSE 23 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7781765460968018) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.2855579257011414) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.730229675769806) THEN 27 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.6467042863368988) THEN 29 ELSE 30 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 1.1817528009414673) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.21829358860850334) THEN 33 ELSE 34 END ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 1.24564129114151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.34223273396492004) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.9161916673183441) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.9989134967327118) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.27823615074157715) THEN 45 ELSE 46 END END END END AS node_id_2 
FROM "TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 4 AS nid, 9.735041217996262 AS "E" UNION ALL SELECT 6 AS nid, 6.861453719338209 AS "E" UNION ALL SELECT 7 AS nid, 5.627347358071483 AS "E" UNION ALL SELECT 10 AS nid, 11.965441788885121 AS "E" UNION ALL SELECT 11 AS nid, 12.99988090237494 AS "E" UNION ALL SELECT 13 AS nid, 11.380993151416082 AS "E" UNION ALL SELECT 14 AS nid, 7.400090444191494 AS "E" UNION ALL SELECT 17 AS nid, 12.8303446289838 AS "E" UNION ALL SELECT 18 AS nid, 14.051184902745371 AS "E" UNION ALL SELECT 21 AS nid, 18.493721395486528 AS "E" UNION ALL SELECT 22 AS nid, 18.0076175728853 AS "E" UNION ALL SELECT 23 AS nid, 16.324769596540094 AS "E" UNION ALL SELECT 27 AS nid, 10.131789617052231 AS "E" UNION ALL SELECT 29 AS nid, 16.224569841397432 AS "E" UNION ALL SELECT 30 AS nid, 18.469624066966187 AS "E" UNION ALL SELECT 33 AS nid, 19.42123596960235 AS "E" UNION ALL SELECT 34 AS nid, 20.199033606227683 AS "E" UNION ALL SELECT 35 AS nid, 23.18131440832091 AS "E" UNION ALL SELECT 39 AS nid, 23.127226282137368 AS "E" UNION ALL SELECT 40 AS nid, 21.774000353025308 AS "E" UNION ALL SELECT 42 AS nid, 21.289420890735993 AS "E" UNION ALL SELECT 43 AS nid, 19.303788312018888 AS "E" UNION ALL SELECT 45 AS nid, 25.24805848092261 AS "E" UNION ALL SELECT 46 AS nid, 24.713338273149652 AS "E") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."E" AS "E" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"BAG_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."E" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5990101397037506) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.5279591083526611) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7714441120624542) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.18723162403330207) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.8406822383403778) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.2438207864761353) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.5764994323253632) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 1.7547411918640137) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.25439614057540894) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.5396069139242172) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.4527852237224579) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.056471586227417) THEN 20 ELSE 21 END ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.8696907758712769) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 1.1233226656913757) THEN 25 ELSE 26 END ELSE 27 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.806531846523285) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.7506086230278015) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 1.0257534682750702) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.6289365440607071) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.3154761865735054) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 1.0744843184947968) THEN 38 ELSE 39 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.6242293119430542) THEN 41 ELSE 42 END END END END AS node_id_2 
FROM "TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, 7.364680799546883 AS "E" UNION ALL SELECT 6 AS nid, 8.06285010237755 AS "E" UNION ALL SELECT 8 AS nid, 6.2457102486321485 AS "E" UNION ALL SELECT 9 AS nid, 5.293284001301807 AS "E" UNION ALL SELECT 12 AS nid, 11.712345783819897 AS "E" UNION ALL SELECT 13 AS nid, 14.051184902745373 AS "E" UNION ALL SELECT 15 AS nid, 8.070929168501522 AS "E" UNION ALL SELECT 16 AS nid, 11.134361230474887 AS "E" UNION ALL SELECT 20 AS nid, 16.08254261562184 AS "E" UNION ALL SELECT 21 AS nid, 16.302556715766507 AS "E" UNION ALL SELECT 22 AS nid, 18.332058017434036 AS "E" UNION ALL SELECT 25 AS nid, 11.380993151416082 AS "E" UNION ALL SELECT 26 AS nid, 12.830344628983799 AS "E" UNION ALL SELECT 27 AS nid, 14.4669963696142 AS "E" UNION ALL SELECT 30 AS nid, 10.181631174833692 AS "E" UNION ALL SELECT 31 AS nid, 9.735041217996262 AS "E" UNION ALL SELECT 35 AS nid, 15.627632254735069 AS "E" UNION ALL SELECT 36 AS nid, 17.18166575438495 AS "E" UNION ALL SELECT 38 AS nid, 17.66939098159554 AS "E" UNION ALL SELECT 39 AS nid, 19.622091887272106 AS "E" UNION ALL SELECT 41 AS nid, 24.713338273149652 AS "E" UNION ALL SELECT 42 AS nid, 23.693970395239386 AS "E") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."E" AS "E" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"BAG_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."E" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.7941106855869293) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.41291773319244385) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.2676679417490959) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.1897129714488983) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.1985486149787903) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.530998945236206) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.4264764077961445) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.977634608745575) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.4122931510210037) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.8955034911632538) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.3330397009849548) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 0.576289564371109) THEN 21 ELSE 22 END END ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.9059769511222839) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.10462668538093567) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.23314205557107925) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.4377283379435539) THEN 28 ELSE 29 END ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 1.0918447077274323) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.9644909799098969) THEN 33 ELSE 34 END ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.8174906969070435) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.1969408988952637) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.03035035729408264) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 0.25653308629989624) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -1.7283473014831543) THEN 45 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.018691375851631165) THEN 47 ELSE 48 END END END END END AS node_id_2 
FROM "TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, 5.293284001301807 AS "E" UNION ALL SELECT 6 AS nid, 6.2457102486321485 AS "E" UNION ALL SELECT 8 AS nid, 6.980046241948142 AS "E" UNION ALL SELECT 9 AS nid, 7.732429808148176 AS "E" UNION ALL SELECT 12 AS nid, 10.54810889548846 AS "E" UNION ALL SELECT 13 AS nid, 8.897074147742197 AS "E" UNION ALL SELECT 15 AS nid, 12.123142001356333 AS "E" UNION ALL SELECT 16 AS nid, 11.789821637076107 AS "E" UNION ALL SELECT 19 AS nid, 16.08254261562184 AS "E" UNION ALL SELECT 21 AS nid, 11.745439870051012 AS "E" UNION ALL SELECT 22 AS nid, 12.795236946676903 AS "E" UNION ALL SELECT 23 AS nid, 18.493721395486528 AS "E" UNION ALL SELECT 28 AS nid, 9.326507498402501 AS "E" UNION ALL SELECT 29 AS nid, 6.269400474409019 AS "E" UNION ALL SELECT 30 AS nid, 15.701003452436051 AS "E" UNION ALL SELECT 33 AS nid, 15.853146527014331 AS "E" UNION ALL SELECT 34 AS nid, 18.01186322558792 AS "E" UNION ALL SELECT 35 AS nid, 10.131789617052231 AS "E" UNION ALL SELECT 39 AS nid, 17.98727597717576 AS "E" UNION ALL SELECT 40 AS nid, 14.082726073768537 AS "E" UNION ALL SELECT 42 AS nid, 23.18131440832091 AS "E" UNION ALL SELECT 43 AS nid, 20.022207690036208 AS "E" UNION ALL SELECT 45 AS nid, 17.41761147731962 AS "E" UNION ALL SELECT 47 AS nid, 18.793151689264707 AS "E" UNION ALL SELECT 48 AS nid, 22.509175946519836 AS "E") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."E" AS "E" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"BAG_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."E" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.062120383605360985) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.13997434824705124) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.0131055116653442) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.15321852965280414) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.7897612154483795) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.13970722258090973) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.960707813501358) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.1118408590555191) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.9460362792015076) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 1.1179764568805695) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.17573610693216324) THEN 18 ELSE 19 END ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.7470073401927948) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.22373316809535027) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.6402660012245178) THEN 26 ELSE 27 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.9005289077758789) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.9161916673183441) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.7096204161643982) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.9496104717254639) THEN 32 ELSE 33 END ELSE 34 END ELSE 35 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 1.583541214466095) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 1.3498066067695618) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.7880869805812836) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 1.2108368873596191) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 1.6388948559761047) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 1.6251914501190186) THEN 46 ELSE 47 END ELSE 48 END END END END AS node_id_2 
FROM "TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 4 AS nid, 5.293284001301807 AS "E" UNION ALL SELECT 6 AS nid, 6.434623846185454 AS "E" UNION ALL SELECT 7 AS nid, 8.15720539774271 AS "E" UNION ALL SELECT 10 AS nid, 10.373600980867929 AS "E" UNION ALL SELECT 11 AS nid, 12.096423229355418 AS "E" UNION ALL SELECT 13 AS nid, 13.174202057525061 AS "E" UNION ALL SELECT 14 AS nid, 14.4669963696142 AS "E" UNION ALL SELECT 18 AS nid, 7.219443350314415 AS "E" UNION ALL SELECT 19 AS nid, 10.131789617052231 AS "E" UNION ALL SELECT 20 AS nid, 13.119756721377405 AS "E" UNION ALL SELECT 23 AS nid, 15.574742691250146 AS "E" UNION ALL SELECT 24 AS nid, 17.737499497537332 AS "E" UNION ALL SELECT 26 AS nid, 18.096145408394158 AS "E" UNION ALL SELECT 27 AS nid, 20.014322406211242 AS "E" UNION ALL SELECT 32 AS nid, 22.76939496981568 AS "E" UNION ALL SELECT 33 AS nid, 23.105796890378507 AS "E" UNION ALL SELECT 34 AS nid, 23.760920160321167 AS "E" UNION ALL SELECT 35 AS nid, 21.774000353025308 AS "E" UNION ALL SELECT 39 AS nid, 15.76903957881257 AS "E" UNION ALL SELECT 40 AS nid, 18.337722623191294 AS "E" UNION ALL SELECT 42 AS nid, 10.596890487725023 AS "E" UNION ALL SELECT 43 AS nid, 14.536245187358322 AS "E" UNION ALL SELECT 46 AS nid, 24.713338273149652 AS "E" UNION ALL SELECT 47 AS nid, 23.693970395239383 AS "E" UNION ALL SELECT 48 AS nid, 20.199033606227683 AS "E") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."E" AS "E" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"BAG_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."E" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.035752530209720135) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.2676679417490959) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.6404086947441101) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.5011763721704483) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.063253492116928) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 1.305152714252472) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.17647136747837067) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.185806393623352) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.8259740173816681) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.5058903694152832) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.8419815003871918) THEN 18 ELSE 19 END ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.7568807005882263) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.08383416384458542) THEN 23 ELSE 24 END ELSE 25 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.7781072854995728) THEN 27 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7781765460968018) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.2873224020004272) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.5515375733375549) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 1.1817528009414673) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.8964633345603943) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.8578507006168365) THEN 38 ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 0.36913497745990753) THEN 41 ELSE 42 END END END END END AS node_id_2 
FROM "TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, 12.071171804127433 AS "E" UNION ALL SELECT 6 AS nid, 13.119756721377405 AS "E" UNION ALL SELECT 7 AS nid, 16.08254261562184 AS "E" UNION ALL SELECT 10 AS nid, 6.315475422152593 AS "E" UNION ALL SELECT 11 AS nid, 7.813647454007434 AS "E" UNION ALL SELECT 13 AS nid, 9.735041217996262 AS "E" UNION ALL SELECT 14 AS nid, 12.760129264370008 AS "E" UNION ALL SELECT 18 AS nid, 11.916127859141456 AS "E" UNION ALL SELECT 19 AS nid, 11.074642259058237 AS "E" UNION ALL SELECT 20 AS nid, 18.493721395486528 AS "E" UNION ALL SELECT 23 AS nid, 13.999316904945474 AS "E" UNION ALL SELECT 24 AS nid, 16.95606024240556 AS "E" UNION ALL SELECT 25 AS nid, 23.693970395239383 AS "E" UNION ALL SELECT 27 AS nid, 7.219443350314415 AS "E" UNION ALL SELECT 31 AS nid, 15.823589913478116 AS "E" UNION ALL SELECT 32 AS nid, 18.644157604195126 AS "E" UNION ALL SELECT 34 AS nid, 19.895593516075195 AS "E" UNION ALL SELECT 35 AS nid, 23.18131440832091 AS "E" UNION ALL SELECT 38 AS nid, 19.303788312018888 AS "E" UNION ALL SELECT 39 AS nid, 15.308483991007721 AS "E" UNION ALL SELECT 41 AS nid, 23.619861343403777 AS "E" UNION ALL SELECT 42 AS nid, 20.9730322314688 AS "E") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."E" AS "E" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"BAG_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."E" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.035752530209720135) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.9240188300609589) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.41291773319244385) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.4309563636779785) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.13386300299316645) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.1706072688102722) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.37493905425071716) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.464217945933342) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.6866031661629677) THEN 16 ELSE 17 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.5067865401506424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.30062711238861084) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.4320812299847603) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.707806408405304) THEN 22 ELSE 23 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.930440366268158) THEN 25 ELSE 26 END END ELSE 27 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 1.1817528009414673) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.013723235577344894) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 0.25312742590904236) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.5485169291496277) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.4201740697026253) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -1.0806388854980469) THEN 38 ELSE 39 END ELSE 40 END END END END AS node_id_2 
FROM "TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, 9.557542083691963 AS "E" UNION ALL SELECT 6 AS nid, 6.803107832223837 AS "E" UNION ALL SELECT 7 AS nid, 14.051184902745373 AS "E" UNION ALL SELECT 10 AS nid, 11.380993151416082 AS "E" UNION ALL SELECT 11 AS nid, 12.47011560883487 AS "E" UNION ALL SELECT 13 AS nid, 13.856175018918004 AS "E" UNION ALL SELECT 14 AS nid, 16.624893912196864 AS "E" UNION ALL SELECT 16 AS nid, 18.282515066510527 AS "E" UNION ALL SELECT 17 AS nid, 23.693970395239383 AS "E" UNION ALL SELECT 22 AS nid, 15.566708961204787 AS "E" UNION ALL SELECT 23 AS nid, 17.36059041334922 AS "E" UNION ALL SELECT 25 AS nid, 18.420188988452704 AS "E" UNION ALL SELECT 26 AS nid, 21.774000353025308 AS "E" UNION ALL SELECT 27 AS nid, 10.131789617052231 AS "E" UNION ALL SELECT 31 AS nid, 17.86130306565547 AS "E" UNION ALL SELECT 32 AS nid, 20.1190033129871 AS "E" UNION ALL SELECT 34 AS nid, 22.53957472957775 AS "E" UNION ALL SELECT 35 AS nid, 20.077653186022523 AS "E" UNION ALL SELECT 38 AS nid, 23.18131440832091 AS "E" UNION ALL SELECT 39 AS nid, 25.069818411664954 AS "E" UNION ALL SELECT 40 AS nid, 20.70189537226964 AS "E") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."E" AS "E" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"BAG_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."E" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5990101397037506) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.2855916991829872) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.22010701894760132) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.452738881111145) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.353529155254364) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.2920085787773132) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.17041368037462234) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.625080943107605) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.8119464814662933) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.6828646957874298) THEN 18 ELSE 19 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.7781072854995728) THEN 21 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.5065665990114212) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.7435633540153503) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.8922260701656342) THEN 25 ELSE 26 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.2755717635154724) THEN 28 ELSE 29 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.8508428931236267) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.1969408988952637) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.35087767853110563) THEN 35 ELSE 36 END END END END END AS node_id_2 
FROM "TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 4 AS nid, 5.293284001301807 AS "E" UNION ALL SELECT 6 AS nid, 7.749586961860047 AS "E" UNION ALL SELECT 7 AS nid, 10.045203605952587 AS "E" UNION ALL SELECT 10 AS nid, 11.43259401781266 AS "E" UNION ALL SELECT 11 AS nid, 10.412823354461922 AS "E" UNION ALL SELECT 12 AS nid, 14.051184902745373 AS "E" UNION ALL SELECT 14 AS nid, 16.324769596540094 AS "E" UNION ALL SELECT 16 AS nid, 12.760129264370008 AS "E" UNION ALL SELECT 18 AS nid, 14.4669963696142 AS "E" UNION ALL SELECT 19 AS nid, 14.772563754565986 AS "E" UNION ALL SELECT 21 AS nid, 7.219443350314415 AS "E" UNION ALL SELECT 25 AS nid, 14.561843015621898 AS "E" UNION ALL SELECT 26 AS nid, 10.181631174833692 AS "E" UNION ALL SELECT 28 AS nid, 15.822162309088977 AS "E" UNION ALL SELECT 29 AS nid, 18.085402316627057 AS "E" UNION ALL SELECT 32 AS nid, 17.24790353529235 AS "E" UNION ALL SELECT 33 AS nid, 19.974812848493027 AS "E" UNION ALL SELECT 35 AS nid, 18.360699894669253 AS "E" UNION ALL SELECT 36 AS nid, 23.00158348784386 AS "E") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."E" AS "E" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"BAG_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."E" AS "Estimator" 
FROM "DT_Output_9")
 INSERT INTO "TMP_20221018190105_XRXR7I5_BAG_B0" ("KEY", "Estimator") SELECT "T"."KEY", "T"."Estimator" 
FROM (SELECT "BAG_B0"."KEY" AS "KEY", "BAG_B0"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_esu_0"."KEY" AS "KEY", "BAG_esu_0"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Model_0"."KEY" AS "KEY", "BAG_Model_0"."Estimator" AS "Estimator" 
FROM "BAG_Model_0" UNION ALL SELECT "BAG_Model_1"."KEY" AS "KEY", "BAG_Model_1"."Estimator" AS "Estimator" 
FROM "BAG_Model_1" UNION ALL SELECT "BAG_Model_2"."KEY" AS "KEY", "BAG_Model_2"."Estimator" AS "Estimator" 
FROM "BAG_Model_2" UNION ALL SELECT "BAG_Model_3"."KEY" AS "KEY", "BAG_Model_3"."Estimator" AS "Estimator" 
FROM "BAG_Model_3" UNION ALL SELECT "BAG_Model_4"."KEY" AS "KEY", "BAG_Model_4"."Estimator" AS "Estimator" 
FROM "BAG_Model_4" UNION ALL SELECT "BAG_Model_5"."KEY" AS "KEY", "BAG_Model_5"."Estimator" AS "Estimator" 
FROM "BAG_Model_5" UNION ALL SELECT "BAG_Model_6"."KEY" AS "KEY", "BAG_Model_6"."Estimator" AS "Estimator" 
FROM "BAG_Model_6" UNION ALL SELECT "BAG_Model_7"."KEY" AS "KEY", "BAG_Model_7"."Estimator" AS "Estimator" 
FROM "BAG_Model_7" UNION ALL SELECT "BAG_Model_8"."KEY" AS "KEY", "BAG_Model_8"."Estimator" AS "Estimator" 
FROM "BAG_Model_8" UNION ALL SELECT "BAG_Model_9"."KEY" AS "KEY", "BAG_Model_9"."Estimator" AS "Estimator" 
FROM "BAG_Model_9") AS "BAG_esu_0") AS "BAG_B0") AS "T"

-- Code For temporary table TMP_20221018190105_GRNQ6LH_BAG_B1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190105_GRNQ6LH_BAG_B1" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)



-- Code For temporary table TMP_20221018190105_GRNQ6LH_BAG_B1 part 2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.12853724043816328) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.0131055116653442) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.05892374366521835) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.08258597552776337) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.38449516892433167) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.6631695628166199) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.6702880263328552) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.5810590535402298) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.4942489564418793) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 1.6327390670776367) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.16896472871303558) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.33393269777297974) THEN 22 ELSE 23 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.002018392086029) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7440596669912338) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.8338518142700195) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 1.3265424966812134) THEN 29 ELSE 30 END ELSE 31 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7374852299690247) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.9310081601142883) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.885921448469162) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.08968852460384369) THEN 38 ELSE 39 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.0331192016601562) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.261717714369297) THEN 42 ELSE 43 END ELSE 44 END END END END AS node_id_2 
FROM "TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 4 AS nid, 9.735041217996262 AS "E" UNION ALL SELECT 5 AS nid, 8.06285010237755 AS "E" UNION ALL SELECT 7 AS nid, 6.2457102486321485 AS "E" UNION ALL SELECT 8 AS nid, 5.293284001301807 AS "E" UNION ALL SELECT 12 AS nid, 10.048769889779829 AS "E" UNION ALL SELECT 13 AS nid, 12.53510619869998 AS "E" UNION ALL SELECT 15 AS nid, 15.922558108080853 AS "E" UNION ALL SELECT 16 AS nid, 13.612693480135217 AS "E" UNION ALL SELECT 19 AS nid, 18.331686787952787 AS "E" UNION ALL SELECT 20 AS nid, 16.155880649003397 AS "E" UNION ALL SELECT 22 AS nid, 11.380993151416082 AS "E" UNION ALL SELECT 23 AS nid, 14.4669963696142 AS "E" UNION ALL SELECT 26 AS nid, 7.219443350314415 AS "E" UNION ALL SELECT 29 AS nid, 14.922364589183022 AS "E" UNION ALL SELECT 30 AS nid, 12.423411759463056 AS "E" UNION ALL SELECT 31 AS nid, 19.303788312018888 AS "E" UNION ALL SELECT 35 AS nid, 15.88980266327039 AS "E" UNION ALL SELECT 36 AS nid, 18.01186322558792 AS "E" UNION ALL SELECT 38 AS nid, 17.874300962401314 AS "E" UNION ALL SELECT 39 AS nid, 19.429536876108994 AS "E" UNION ALL SELECT 42 AS nid, 21.557496861602132 AS "E" UNION ALL SELECT 43 AS nid, 23.18686483419098 AS "E" UNION ALL SELECT 44 AS nid, 17.41761147731962 AS "E") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."E" AS "E" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"BAG_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."E" AS "Estimator" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.2825087904930115) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.8974297046661377) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.31683310121297836) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.6112133711576462) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.4128466844558716) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.7602905631065369) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.5940360724925995) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.026032395660877228) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.47901751101017) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.06651215255260468) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.5960759818553925) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.4717315584421158) THEN 21 ELSE 22 END END ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 1.2079678177833557) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.7781072854995728) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.8351979851722717) THEN 28 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.4688674807548523) THEN 30 ELSE 31 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 1.3295643329620361) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.2511781081557274) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -1.0806388854980469) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.9406484663486481) THEN 38 ELSE 39 END END ELSE 40 END END END AS node_id_2 
FROM "TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, 5.543831518879064 AS "E" UNION ALL SELECT 6 AS nid, 6.900984560208187 AS "E" UNION ALL SELECT 7 AS nid, 8.240178848678195 AS "E" UNION ALL SELECT 10 AS nid, 12.007616742372795 AS "E" UNION ALL SELECT 11 AS nid, 10.928547663367409 AS "E" UNION ALL SELECT 13 AS nid, 14.291644520018911 AS "E" UNION ALL SELECT 14 AS nid, 15.922558108080853 AS "E" UNION ALL SELECT 18 AS nid, 16.08254261562184 AS "E" UNION ALL SELECT 19 AS nid, 14.4669963696142 AS "E" UNION ALL SELECT 21 AS nid, 18.412889706460284 AS "E" UNION ALL SELECT 22 AS nid, 18.0076175728853 AS "E" UNION ALL SELECT 23 AS nid, 23.693970395239383 AS "E" UNION ALL SELECT 26 AS nid, 7.219443350314415 AS "E" UNION ALL SELECT 28 AS nid, 10.181631174833692 AS "E" UNION ALL SELECT 30 AS nid, 22.76939496981568 AS "E" UNION ALL SELECT 31 AS nid, 18.511023308402482 AS "E" UNION ALL SELECT 35 AS nid, 23.18131440832091 AS "E" UNION ALL SELECT 36 AS nid, 25.034170397813426 AS "E" UNION ALL SELECT 38 AS nid, 20.629855906779248 AS "E" UNION ALL SELECT 39 AS nid, 20.70189537226964 AS "E" UNION ALL SELECT 40 AS nid, 14.536245187358322 AS "E") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."E" AS "E" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"BAG_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."E" AS "Estimator" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.2825087904930115) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.6482125818729401) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.0327386260032654) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.0061066001653671265) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.38449516892433167) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.0705730319023132) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -1.4538482427597046) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 1.2846095561981201) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.18650264292955399) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 0.0970342680811882) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 1.5923489928245544) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.4527852237224579) THEN 21 ELSE 22 END ELSE 23 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.7201983630657196) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.4229904115200043) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.8707682192325592) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.1550463438034058) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.3240154981613159) THEN 31 ELSE 32 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.32736143469810486) THEN 34 ELSE 35 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.021007142961025238) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.5294337719678879) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.2313607707619667) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.0496167838573456) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.35078954696655273) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8881331533193588) THEN 46 ELSE 47 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 0.36913497745990753) THEN 49 ELSE 50 END END END END END AS node_id_2 
FROM "TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, 5.944822773848263 AS "E" UNION ALL SELECT 6 AS nid, 5.293284001301807 AS "E" UNION ALL SELECT 8 AS nid, 6.861453719338209 AS "E" UNION ALL SELECT 9 AS nid, 7.556998078346253 AS "E" UNION ALL SELECT 11 AS nid, 17.31914707358036 AS "E" UNION ALL SELECT 13 AS nid, 11.314205034713718 AS "E" UNION ALL SELECT 14 AS nid, 6.980046241948142 AS "E" UNION ALL SELECT 17 AS nid, 14.4669963696142 AS "E" UNION ALL SELECT 18 AS nid, 11.380993151416082 AS "E" UNION ALL SELECT 21 AS nid, 16.302556715766507 AS "E" UNION ALL SELECT 22 AS nid, 18.210253639672793 AS "E" UNION ALL SELECT 23 AS nid, 23.693970395239383 AS "E" UNION ALL SELECT 28 AS nid, 12.423411759463056 AS "E" UNION ALL SELECT 29 AS nid, 10.181631174833692 AS "E" UNION ALL SELECT 31 AS nid, 14.922364589183022 AS "E" UNION ALL SELECT 32 AS nid, 13.119756721377405 AS "E" UNION ALL SELECT 34 AS nid, 19.303788312018888 AS "E" UNION ALL SELECT 35 AS nid, 20.199033606227683 AS "E" UNION ALL SELECT 39 AS nid, 17.70550060214846 AS "E" UNION ALL SELECT 40 AS nid, 18.24404280151488 AS "E" UNION ALL SELECT 42 AS nid, 15.706521981990113 AS "E" UNION ALL SELECT 43 AS nid, 15.701003452436051 AS "E" UNION ALL SELECT 46 AS nid, 22.172158199741453 AS "E" UNION ALL SELECT 47 AS nid, 18.19066790267414 AS "E" UNION ALL SELECT 49 AS nid, 24.139984525512965 AS "E" UNION ALL SELECT 50 AS nid, 20.352628427170593 AS "E") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."E" AS "E" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"BAG_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."E" AS "Estimator" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.22762642055749893) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.3923843204975128) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.6856510639190674) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.149171769618988) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.6961230039596558) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.17647136747837067) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.0880453288555145) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.36881090700626373) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.42646485567092896) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.6228240546770394) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -1.2992315292358398) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.23364531248807907) THEN 22 ELSE 23 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.0470510721206665) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.2488571107387543) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 1.0411399751901627) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.545422613620758) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 1.6338968873023987) THEN 31 ELSE 32 END END ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7781765460968018) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 1.3235834240913391) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 1.0998644828796387) THEN 37 ELSE 38 END ELSE 39 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.7461959347128868) THEN 41 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.003324707970023155) THEN 43 ELSE 44 END END END END END AS node_id_2 
FROM "TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, 10.090679462246287 AS "E" UNION ALL SELECT 6 AS nid, 12.110149452049107 AS "E" UNION ALL SELECT 8 AS nid, 6.470397311593706 AS "E" UNION ALL SELECT 9 AS nid, 7.706398964862851 AS "E" UNION ALL SELECT 11 AS nid, 16.914408313385564 AS "E" UNION ALL SELECT 12 AS nid, 15.701003452436051 AS "E" UNION ALL SELECT 15 AS nid, 18.237613821788198 AS "E" UNION ALL SELECT 16 AS nid, 17.89244707919063 AS "E" UNION ALL SELECT 19 AS nid, 12.760129264370008 AS "E" UNION ALL SELECT 20 AS nid, 13.119756721377405 AS "E" UNION ALL SELECT 22 AS nid, 15.541797868565153 AS "E" UNION ALL SELECT 23 AS nid, 14.4669963696142 AS "E" UNION ALL SELECT 28 AS nid, 10.596890487725023 AS "E" UNION ALL SELECT 29 AS nid, 10.20209310032856 AS "E" UNION ALL SELECT 31 AS nid, 12.109886588685942 AS "E" UNION ALL SELECT 32 AS nid, 12.830344628983799 AS "E" UNION ALL SELECT 33 AS nid, 18.493721395486528 AS "E" UNION ALL SELECT 37 AS nid, 17.357028202362972 AS "E" UNION ALL SELECT 38 AS nid, 19.75716175860891 AS "E" UNION ALL SELECT 39 AS nid, 12.423411759463056 AS "E" UNION ALL SELECT 41 AS nid, 15.308483991007721 AS "E" UNION ALL SELECT 43 AS nid, 23.439746026652113 AS "E" UNION ALL SELECT 44 AS nid, 20.88265327840241 AS "E") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."E" AS "E" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"BAG_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."E" AS "Estimator" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.01687277527526021) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.2676679417490959) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.6136064678430557) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7556153833866119) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.2620937824249268) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.3755684792995453) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.17647136747837067) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.6631695628166199) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -1.4538482427597046) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.19554531574249268) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 1.188630759716034) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -1.1760790050029755) THEN 22 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.6028776615858078) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6842065751552582) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.8059833943843842) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.8062174618244171) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.2856832444667816) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.13003459572792053) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.2654917240142822) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 1.3440638780593872) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.46602827310562134) THEN 40 ELSE 41 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 1.2079678177833557) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.4537083506584167) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.4688674807548523) THEN 45 ELSE 46 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.4270458519458771) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 1.1469671428203583) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.0156599581241608) THEN 52 ELSE 53 END ELSE 54 END END END END AS node_id_2 
FROM "TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 4 AS nid, 13.119756721377405 AS "E" UNION ALL SELECT 5 AS nid, 12.071171804127433 AS "E" UNION ALL SELECT 8 AS nid, 9.735041217996262 AS "E" UNION ALL SELECT 9 AS nid, 10.045203605952587 AS "E" UNION ALL SELECT 11 AS nid, 6.422584497525632 AS "E" UNION ALL SELECT 12 AS nid, 8.024577215395368 AS "E" UNION ALL SELECT 16 AS nid, 17.31914707358036 AS "E" UNION ALL SELECT 17 AS nid, 14.772563754565986 AS "E" UNION ALL SELECT 19 AS nid, 12.707020327176664 AS "E" UNION ALL SELECT 20 AS nid, 10.596890487725023 AS "E" UNION ALL SELECT 22 AS nid, 11.380993151416082 AS "E" UNION ALL SELECT 24 AS nid, 18.250669484185917 AS "E" UNION ALL SELECT 25 AS nid, 16.302556715766507 AS "E" UNION ALL SELECT 30 AS nid, 10.181631174833692 AS "E" UNION ALL SELECT 31 AS nid, 10.131789617052231 AS "E" UNION ALL SELECT 33 AS nid, 14.793658121908122 AS "E" UNION ALL SELECT 34 AS nid, 12.423411759463056 AS "E" UNION ALL SELECT 37 AS nid, 15.794958314425642 AS "E" UNION ALL SELECT 38 AS nid, 17.451457795201584 AS "E" UNION ALL SELECT 40 AS nid, 19.95894272650593 AS "E" UNION ALL SELECT 41 AS nid, 20.199033606227683 AS "E" UNION ALL SELECT 45 AS nid, 22.76939496981568 AS "E" UNION ALL SELECT 46 AS nid, 18.270657063458568 AS "E" UNION ALL SELECT 48 AS nid, 22.67001693088796 AS "E" UNION ALL SELECT 49 AS nid, 21.340993370178953 AS "E" UNION ALL SELECT 52 AS nid, 24.713338273149652 AS "E" UNION ALL SELECT 53 AS nid, 25.24805848092261 AS "E" UNION ALL SELECT 54 AS nid, 23.18131440832091 AS "E") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."E" AS "E" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"BAG_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."E" AS "Estimator" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.7756910920143127) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.39204226434230804) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7714441120624542) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.5550702214241028) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.24133425951004028) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.354054793715477) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.525112971663475) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.7098836600780487) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.39164986461400986) THEN 15 ELSE 16 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 1.05584716796875) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.2398391366004944) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.7973192129284143) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.27647875249385834) THEN 24 ELSE 25 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.007412798702716827) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.4823174625635147) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.5449816435575485) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.03929572878405452) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.2446441575884819) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.011688321828842163) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.0453409850597382) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.3019059479702264) THEN 40 ELSE 41 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7693573534488678) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.0506720840930939) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 1.6510465145111084) THEN 45 ELSE 46 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.12422573566436768) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.1224741637706757) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.9712488055229187) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.6907780021429062) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM "TMP_20221018190104_RE9YZXY_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 5 AS nid, 5.293284001301807 AS "E" UNION ALL SELECT 6 AS nid, 6.2457102486321485 AS "E" UNION ALL SELECT 8 AS nid, 7.556998078346253 AS "E" UNION ALL SELECT 9 AS nid, 6.980046241948142 AS "E" UNION ALL SELECT 12 AS nid, 10.217306243866512 AS "E" UNION ALL SELECT 13 AS nid, 11.789821637076107 AS "E" UNION ALL SELECT 15 AS nid, 11.313518144724842 AS "E" UNION ALL SELECT 16 AS nid, 8.168458292278988 AS "E" UNION ALL SELECT 19 AS nid, 12.109886588685942 AS "E" UNION ALL SELECT 21 AS nid, 12.760129264370008 AS "E" UNION ALL SELECT 22 AS nid, 12.830344628983799 AS "E" UNION ALL SELECT 24 AS nid, 16.08254261562184 AS "E" UNION ALL SELECT 25 AS nid, 18.493721395486528 AS "E" UNION ALL SELECT 30 AS nid, 15.24796271923086 AS "E" UNION ALL SELECT 31 AS nid, 13.174202057525061 AS "E" UNION ALL SELECT 33 AS nid, 10.181631174833692 AS "E" UNION ALL SELECT 34 AS nid, 6.861453719338209 AS "E" UNION ALL SELECT 37 AS nid, 14.536245187358322 AS "E" UNION ALL SELECT 38 AS nid, 16.45480792563375 AS "E" UNION ALL SELECT 40 AS nid, 17.51855412510629 AS "E" UNION ALL SELECT 41 AS nid, 19.915199562745045 AS "E" UNION ALL SELECT 45 AS nid, 17.712768435601625 AS "E" UNION ALL SELECT 46 AS nid, 14.4669963696142 AS "E" UNION ALL SELECT 48 AS nid, 20.629855906779248 AS "E" UNION ALL SELECT 49 AS nid, 19.36426348416223 AS "E" UNION ALL SELECT 52 AS nid, 24.220391775464968 AS "E" UNION ALL SELECT 53 AS nid, 22.402139862730703 AS "E" UNION ALL SELECT 55 AS nid, 18.900387696177468 AS "E" UNION ALL SELECT 56 AS nid, 17.41761147731962 AS "E") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."E" AS "E" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"BAG_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."E" AS "Estimator" 
FROM "DT_Output_15")
 INSERT INTO "TMP_20221018190105_GRNQ6LH_BAG_B1" ("KEY", "Estimator") SELECT "T"."KEY", "T"."Estimator" 
FROM (SELECT "BAG_B1"."KEY" AS "KEY", "BAG_B1"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_esu_1"."KEY" AS "KEY", "BAG_esu_1"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_Model_10"."KEY" AS "KEY", "BAG_Model_10"."Estimator" AS "Estimator" 
FROM "BAG_Model_10" UNION ALL SELECT "BAG_Model_11"."KEY" AS "KEY", "BAG_Model_11"."Estimator" AS "Estimator" 
FROM "BAG_Model_11" UNION ALL SELECT "BAG_Model_12"."KEY" AS "KEY", "BAG_Model_12"."Estimator" AS "Estimator" 
FROM "BAG_Model_12" UNION ALL SELECT "BAG_Model_13"."KEY" AS "KEY", "BAG_Model_13"."Estimator" AS "Estimator" 
FROM "BAG_Model_13" UNION ALL SELECT "BAG_Model_14"."KEY" AS "KEY", "BAG_Model_14"."Estimator" AS "Estimator" 
FROM "BAG_Model_14" UNION ALL SELECT "BAG_Model_15"."KEY" AS "KEY", "BAG_Model_15"."Estimator" AS "Estimator" 
FROM "BAG_Model_15") AS "BAG_esu_1") AS "BAG_B1") AS "T"

-- Code For temporary table TMP_20221018190105_ER5K3FP_BAG_avg part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190105_ER5K3FP_BAG_avg" (
	"KEY" BIGINT NOT NULL, 
	"Estimator" FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20221018190105_ER5K3FP_BAG_avg part 2. Populate

WITH "BAG_Union" AS 
(SELECT "BAG_EnsembleUnion"."KEY" AS "KEY", "BAG_EnsembleUnion"."Estimator" AS "Estimator" 
FROM (SELECT "BAG_B0"."KEY" AS "KEY", "BAG_B0"."Estimator" AS "Estimator" 
FROM "TMP_20221018190105_XRXR7I5_BAG_B0" AS "BAG_B0" UNION ALL SELECT "BAG_B1"."KEY" AS "KEY", "BAG_B1"."Estimator" AS "Estimator" 
FROM "TMP_20221018190105_GRNQ6LH_BAG_B1" AS "BAG_B1") AS "BAG_EnsembleUnion")
 INSERT INTO "TMP_20221018190105_ER5K3FP_BAG_avg" ("KEY", "Estimator") SELECT "T"."KEY", "T"."Estimator" 
FROM (SELECT "BAG_avg"."KEY" AS "KEY", "BAG_avg"."Estimator" AS "Estimator" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT "BAG_Union"."KEY" AS "KEY", avg(CAST("BAG_Union"."Estimator" AS FLOAT)) AS "Estimator" 
FROM "BAG_Union" GROUP BY "BAG_Union"."KEY") AS "T") AS "BAG_avg") AS "T"

-- Code For temporary table TMP_20221018190105_ER5K3FP_BAG_avg part 3. Create Index 

CREATE INDEX "ix_TMP_20221018190105_ER5K3FP_BAG_avg_KEY" ON "TMP_20221018190105_ER5K3FP_BAG_avg" ("KEY")

-- Model deployment code

SELECT "BAG_avg"."KEY" AS "KEY", "BAG_avg"."Estimator" AS "Estimator" 
FROM "TMP_20221018190105_ER5K3FP_BAG_avg" AS "BAG_avg"