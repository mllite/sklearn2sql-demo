-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CalibratedClassifierCV_sigmoid
-- Dataset : iris_date_tgt
-- Database : pgsql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018190504_D2E1A8W_CalProb_B0 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190504_D2E1A8W_CalProb_B0" (
	"KEY" BIGINT, 
	"Proba_1789-07-14T00:00:00.000000000" FLOAT, 
	"Proba_1789-08-14T00:00:00.000000000" FLOAT, 
	"Proba_1789-09-14T00:00:00.000000000" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018190504_D2E1A8W_CalProb_B0 part 2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.75) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.75) THEN 3 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN CASE WHEN ("ADS"."Feature_1" <= 3.049999952316284) THEN CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN 7 ELSE 8 END ELSE 9 END ELSE 10 END END END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."P_1789-07-14T00:00:00.000000000" AS "P_1789-07-14T00:00:00.000000000", "Values"."P_1789-08-14T00:00:00.000000000" AS "P_1789-08-14T00:00:00.000000000", "Values"."P_1789-09-14T00:00:00.000000000" AS "P_1789-09-14T00:00:00.000000000", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 1.0 AS "P_1789-07-14T00:00:00.000000000", 0.0 AS "P_1789-08-14T00:00:00.000000000", 0.0 AS "P_1789-09-14T00:00:00.000000000", '1789-07-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 3 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 1.0 AS "P_1789-08-14T00:00:00.000000000", 0.0 AS "P_1789-09-14T00:00:00.000000000", '1789-08-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 0.6666666666666666 AS "P_1789-08-14T00:00:00.000000000", 0.3333333333333333 AS "P_1789-09-14T00:00:00.000000000", '1789-08-14T00:00:00.000000000' AS "D", 0.6666666666666666 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 0.0 AS "P_1789-08-14T00:00:00.000000000", 1.0 AS "P_1789-09-14T00:00:00.000000000", '1789-09-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 1.0 AS "P_1789-08-14T00:00:00.000000000", 0.0 AS "P_1789-09-14T00:00:00.000000000", '1789-08-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 0.0 AS "P_1789-08-14T00:00:00.000000000", 1.0 AS "P_1789-09-14T00:00:00.000000000", '1789-09-14T00:00:00.000000000' AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."P_1789-07-14T00:00:00.000000000" AS "P_1789-07-14T00:00:00.000000000", "DT_node_data"."P_1789-08-14T00:00:00.000000000" AS "P_1789-08-14T00:00:00.000000000", "DT_node_data"."P_1789-09-14T00:00:00.000000000" AS "P_1789-09-14T00:00:00.000000000", "DT_node_data"."D" AS "D", "DT_node_data"."DP" AS "DP" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"Calibrated_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output"."P_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output"."P_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output"."P_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", CASE WHEN ("DT_Output"."P_1789-07-14T00:00:00.000000000" IS NULL OR "DT_Output"."P_1789-07-14T00:00:00.000000000" > 0.0) THEN ln("DT_Output"."P_1789-07-14T00:00:00.000000000") ELSE '-Infinity'::float8 END AS "LogProba_1789-07-14T00:00:00.000000000", CASE WHEN ("DT_Output"."P_1789-08-14T00:00:00.000000000" IS NULL OR "DT_Output"."P_1789-08-14T00:00:00.000000000" > 0.0) THEN ln("DT_Output"."P_1789-08-14T00:00:00.000000000") ELSE '-Infinity'::float8 END AS "LogProba_1789-08-14T00:00:00.000000000", CASE WHEN ("DT_Output"."P_1789-09-14T00:00:00.000000000" IS NULL OR "DT_Output"."P_1789-09-14T00:00:00.000000000" > 0.0) THEN ln("DT_Output"."P_1789-09-14T00:00:00.000000000") ELSE '-Infinity'::float8 END AS "LogProba_1789-09-14T00:00:00.000000000", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output"."P_1789-07-14T00:00:00.000000000") AS "ScoreOrProba_1789-07-14T00:00:00.000000000", coalesce(CAST(NULL AS FLOAT), "DT_Output"."P_1789-08-14T00:00:00.000000000") AS "ScoreOrProba_1789-08-14T00:00:00.000000000", coalesce(CAST(NULL AS FLOAT), "DT_Output"."P_1789-09-14T00:00:00.000000000") AS "ScoreOrProba_1789-09-14T00:00:00.000000000" 
FROM "DT_Output"), 
sigmoid_calibration_0 AS 
(SELECT "Calibrated_Model_0"."KEY" AS "KEY", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(5.393626322122635 * "Calibrated_Model_0"."ScoreOrProba_1789-07-14T00:00:00.000000000" + -3.091045517303994))))) AS "Proba_1789-07-14T00:00:00.000000000", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(4.671313939641343 * "Calibrated_Model_0"."ScoreOrProba_1789-08-14T00:00:00.000000000" + -2.9060595363277137))))) AS "Proba_1789-08-14T00:00:00.000000000", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(4.750559975206732 * "Calibrated_Model_0"."ScoreOrProba_1789-09-14T00:00:00.000000000" + -2.3829244862170724))))) AS "Proba_1789-09-14T00:00:00.000000000" 
FROM "Calibrated_Model_0"), 
"Normalized_Probas" AS 
(SELECT sigmoid_calibration_0."KEY" AS "KEY", sigmoid_calibration_0."Proba_1789-07-14T00:00:00.000000000" / (sigmoid_calibration_0."Proba_1789-07-14T00:00:00.000000000" + sigmoid_calibration_0."Proba_1789-08-14T00:00:00.000000000" + sigmoid_calibration_0."Proba_1789-09-14T00:00:00.000000000") AS "Proba_1789-07-14T00:00:00.000000000", sigmoid_calibration_0."Proba_1789-08-14T00:00:00.000000000" / (sigmoid_calibration_0."Proba_1789-07-14T00:00:00.000000000" + sigmoid_calibration_0."Proba_1789-08-14T00:00:00.000000000" + sigmoid_calibration_0."Proba_1789-09-14T00:00:00.000000000") AS "Proba_1789-08-14T00:00:00.000000000", sigmoid_calibration_0."Proba_1789-09-14T00:00:00.000000000" / (sigmoid_calibration_0."Proba_1789-07-14T00:00:00.000000000" + sigmoid_calibration_0."Proba_1789-08-14T00:00:00.000000000" + sigmoid_calibration_0."Proba_1789-09-14T00:00:00.000000000") AS "Proba_1789-09-14T00:00:00.000000000" 
FROM sigmoid_calibration_0), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.950000047683716) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN 4 ELSE CASE WHEN ("ADS"."Feature_1" <= 3.100000023841858) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 5.049999952316284) THEN CASE WHEN ("ADS"."Feature_0" <= 6.5) THEN 10 ELSE 11 END ELSE 12 END END END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."P_1789-07-14T00:00:00.000000000" AS "P_1789-07-14T00:00:00.000000000", "Values"."P_1789-08-14T00:00:00.000000000" AS "P_1789-08-14T00:00:00.000000000", "Values"."P_1789-09-14T00:00:00.000000000" AS "P_1789-09-14T00:00:00.000000000", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 1.0 AS "P_1789-07-14T00:00:00.000000000", 0.0 AS "P_1789-08-14T00:00:00.000000000", 0.0 AS "P_1789-09-14T00:00:00.000000000", '1789-07-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 4 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 1.0 AS "P_1789-08-14T00:00:00.000000000", 0.0 AS "P_1789-09-14T00:00:00.000000000", '1789-08-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 0.0 AS "P_1789-08-14T00:00:00.000000000", 1.0 AS "P_1789-09-14T00:00:00.000000000", '1789-09-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 1.0 AS "P_1789-08-14T00:00:00.000000000", 0.0 AS "P_1789-09-14T00:00:00.000000000", '1789-08-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 0.0 AS "P_1789-08-14T00:00:00.000000000", 1.0 AS "P_1789-09-14T00:00:00.000000000", '1789-09-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 1.0 AS "P_1789-08-14T00:00:00.000000000", 0.0 AS "P_1789-09-14T00:00:00.000000000", '1789-08-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 0.0 AS "P_1789-08-14T00:00:00.000000000", 1.0 AS "P_1789-09-14T00:00:00.000000000", '1789-09-14T00:00:00.000000000' AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."P_1789-07-14T00:00:00.000000000" AS "P_1789-07-14T00:00:00.000000000", "DT_node_data_1"."P_1789-08-14T00:00:00.000000000" AS "P_1789-08-14T00:00:00.000000000", "DT_node_data_1"."P_1789-09-14T00:00:00.000000000" AS "P_1789-09-14T00:00:00.000000000", "DT_node_data_1"."D" AS "D", "DT_node_data_1"."DP" AS "DP" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"Calibrated_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output_1"."P_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output_1"."P_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output_1"."P_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", CASE WHEN ("DT_Output_1"."P_1789-07-14T00:00:00.000000000" IS NULL OR "DT_Output_1"."P_1789-07-14T00:00:00.000000000" > 0.0) THEN ln("DT_Output_1"."P_1789-07-14T00:00:00.000000000") ELSE '-Infinity'::float8 END AS "LogProba_1789-07-14T00:00:00.000000000", CASE WHEN ("DT_Output_1"."P_1789-08-14T00:00:00.000000000" IS NULL OR "DT_Output_1"."P_1789-08-14T00:00:00.000000000" > 0.0) THEN ln("DT_Output_1"."P_1789-08-14T00:00:00.000000000") ELSE '-Infinity'::float8 END AS "LogProba_1789-08-14T00:00:00.000000000", CASE WHEN ("DT_Output_1"."P_1789-09-14T00:00:00.000000000" IS NULL OR "DT_Output_1"."P_1789-09-14T00:00:00.000000000" > 0.0) THEN ln("DT_Output_1"."P_1789-09-14T00:00:00.000000000") ELSE '-Infinity'::float8 END AS "LogProba_1789-09-14T00:00:00.000000000", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."P_1789-07-14T00:00:00.000000000") AS "ScoreOrProba_1789-07-14T00:00:00.000000000", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."P_1789-08-14T00:00:00.000000000") AS "ScoreOrProba_1789-08-14T00:00:00.000000000", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."P_1789-09-14T00:00:00.000000000") AS "ScoreOrProba_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_1"), 
sigmoid_calibration_1 AS 
(SELECT "Calibrated_Model_1"."KEY" AS "KEY", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(5.393626322122635 * "Calibrated_Model_1"."ScoreOrProba_1789-07-14T00:00:00.000000000" + -3.091045517303994))))) AS "Proba_1789-07-14T00:00:00.000000000", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(5.442417342523718 * "Calibrated_Model_1"."ScoreOrProba_1789-08-14T00:00:00.000000000" + -3.0445224878196573))))) AS "Proba_1789-08-14T00:00:00.000000000", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(5.48063825977776 * "Calibrated_Model_1"."ScoreOrProba_1789-09-14T00:00:00.000000000" + -2.995732594243071))))) AS "Proba_1789-09-14T00:00:00.000000000" 
FROM "Calibrated_Model_1"), 
"Normalized_Probas_1" AS 
(SELECT sigmoid_calibration_1."KEY" AS "KEY", sigmoid_calibration_1."Proba_1789-07-14T00:00:00.000000000" / (sigmoid_calibration_1."Proba_1789-07-14T00:00:00.000000000" + sigmoid_calibration_1."Proba_1789-08-14T00:00:00.000000000" + sigmoid_calibration_1."Proba_1789-09-14T00:00:00.000000000") AS "Proba_1789-07-14T00:00:00.000000000", sigmoid_calibration_1."Proba_1789-08-14T00:00:00.000000000" / (sigmoid_calibration_1."Proba_1789-07-14T00:00:00.000000000" + sigmoid_calibration_1."Proba_1789-08-14T00:00:00.000000000" + sigmoid_calibration_1."Proba_1789-09-14T00:00:00.000000000") AS "Proba_1789-08-14T00:00:00.000000000", sigmoid_calibration_1."Proba_1789-09-14T00:00:00.000000000" / (sigmoid_calibration_1."Proba_1789-07-14T00:00:00.000000000" + sigmoid_calibration_1."Proba_1789-08-14T00:00:00.000000000" + sigmoid_calibration_1."Proba_1789-09-14T00:00:00.000000000") AS "Proba_1789-09-14T00:00:00.000000000" 
FROM sigmoid_calibration_1), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.75) THEN CASE WHEN ("ADS"."Feature_2" <= 4.950000047683716) THEN CASE WHEN ("ADS"."Feature_0" <= 4.950000047683716) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN 8 ELSE 9 END END ELSE 10 END END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."P_1789-07-14T00:00:00.000000000" AS "P_1789-07-14T00:00:00.000000000", "Values"."P_1789-08-14T00:00:00.000000000" AS "P_1789-08-14T00:00:00.000000000", "Values"."P_1789-09-14T00:00:00.000000000" AS "P_1789-09-14T00:00:00.000000000", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 1.0 AS "P_1789-07-14T00:00:00.000000000", 0.0 AS "P_1789-08-14T00:00:00.000000000", 0.0 AS "P_1789-09-14T00:00:00.000000000", '1789-07-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 5 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 0.0 AS "P_1789-08-14T00:00:00.000000000", 1.0 AS "P_1789-09-14T00:00:00.000000000", '1789-09-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 1.0 AS "P_1789-08-14T00:00:00.000000000", 0.0 AS "P_1789-09-14T00:00:00.000000000", '1789-08-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 0.0 AS "P_1789-08-14T00:00:00.000000000", 1.0 AS "P_1789-09-14T00:00:00.000000000", '1789-09-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 1.0 AS "P_1789-08-14T00:00:00.000000000", 0.0 AS "P_1789-09-14T00:00:00.000000000", '1789-08-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 0.0 AS "P_1789-08-14T00:00:00.000000000", 1.0 AS "P_1789-09-14T00:00:00.000000000", '1789-09-14T00:00:00.000000000' AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."P_1789-07-14T00:00:00.000000000" AS "P_1789-07-14T00:00:00.000000000", "DT_node_data_2"."P_1789-08-14T00:00:00.000000000" AS "P_1789-08-14T00:00:00.000000000", "DT_node_data_2"."P_1789-09-14T00:00:00.000000000" AS "P_1789-09-14T00:00:00.000000000", "DT_node_data_2"."D" AS "D", "DT_node_data_2"."DP" AS "DP" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"Calibrated_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output_2"."P_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output_2"."P_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output_2"."P_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", CASE WHEN ("DT_Output_2"."P_1789-07-14T00:00:00.000000000" IS NULL OR "DT_Output_2"."P_1789-07-14T00:00:00.000000000" > 0.0) THEN ln("DT_Output_2"."P_1789-07-14T00:00:00.000000000") ELSE '-Infinity'::float8 END AS "LogProba_1789-07-14T00:00:00.000000000", CASE WHEN ("DT_Output_2"."P_1789-08-14T00:00:00.000000000" IS NULL OR "DT_Output_2"."P_1789-08-14T00:00:00.000000000" > 0.0) THEN ln("DT_Output_2"."P_1789-08-14T00:00:00.000000000") ELSE '-Infinity'::float8 END AS "LogProba_1789-08-14T00:00:00.000000000", CASE WHEN ("DT_Output_2"."P_1789-09-14T00:00:00.000000000" IS NULL OR "DT_Output_2"."P_1789-09-14T00:00:00.000000000" > 0.0) THEN ln("DT_Output_2"."P_1789-09-14T00:00:00.000000000") ELSE '-Infinity'::float8 END AS "LogProba_1789-09-14T00:00:00.000000000", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."P_1789-07-14T00:00:00.000000000") AS "ScoreOrProba_1789-07-14T00:00:00.000000000", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."P_1789-08-14T00:00:00.000000000") AS "ScoreOrProba_1789-08-14T00:00:00.000000000", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."P_1789-09-14T00:00:00.000000000") AS "ScoreOrProba_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_2"), 
sigmoid_calibration_2 AS 
(SELECT "Calibrated_Model_2"."KEY" AS "KEY", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(5.393626322122635 * "Calibrated_Model_2"."ScoreOrProba_1789-07-14T00:00:00.000000000" + -3.091045517303994))))) AS "Proba_1789-07-14T00:00:00.000000000", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(4.346958263204307 * "Calibrated_Model_2"."ScoreOrProba_1789-08-14T00:00:00.000000000" + -1.9490625020164078))))) AS "Proba_1789-08-14T00:00:00.000000000", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(4.3109878254872465 * "Calibrated_Model_2"."ScoreOrProba_1789-09-14T00:00:00.000000000" + -2.995735836256492))))) AS "Proba_1789-09-14T00:00:00.000000000" 
FROM "Calibrated_Model_2"), 
"Normalized_Probas_2" AS 
(SELECT sigmoid_calibration_2."KEY" AS "KEY", sigmoid_calibration_2."Proba_1789-07-14T00:00:00.000000000" / (sigmoid_calibration_2."Proba_1789-07-14T00:00:00.000000000" + sigmoid_calibration_2."Proba_1789-08-14T00:00:00.000000000" + sigmoid_calibration_2."Proba_1789-09-14T00:00:00.000000000") AS "Proba_1789-07-14T00:00:00.000000000", sigmoid_calibration_2."Proba_1789-08-14T00:00:00.000000000" / (sigmoid_calibration_2."Proba_1789-07-14T00:00:00.000000000" + sigmoid_calibration_2."Proba_1789-08-14T00:00:00.000000000" + sigmoid_calibration_2."Proba_1789-09-14T00:00:00.000000000") AS "Proba_1789-08-14T00:00:00.000000000", sigmoid_calibration_2."Proba_1789-09-14T00:00:00.000000000" / (sigmoid_calibration_2."Proba_1789-07-14T00:00:00.000000000" + sigmoid_calibration_2."Proba_1789-08-14T00:00:00.000000000" + sigmoid_calibration_2."Proba_1789-09-14T00:00:00.000000000") AS "Proba_1789-09-14T00:00:00.000000000" 
FROM sigmoid_calibration_2), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.800000011920929) THEN 1 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.8500001430511475) THEN CASE WHEN ("ADS"."Feature_3" <= 1.6500000357627869) THEN 4 ELSE CASE WHEN ("ADS"."Feature_1" <= 3.100000023841858) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 2.549999952316284) THEN CASE WHEN ("ADS"."Feature_2" <= 4.950000047683716) THEN 10 ELSE 11 END ELSE 12 END END END AS node_id_2 
FROM iris_date_tgt AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."P_1789-07-14T00:00:00.000000000" AS "P_1789-07-14T00:00:00.000000000", "Values"."P_1789-08-14T00:00:00.000000000" AS "P_1789-08-14T00:00:00.000000000", "Values"."P_1789-09-14T00:00:00.000000000" AS "P_1789-09-14T00:00:00.000000000", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 1.0 AS "P_1789-07-14T00:00:00.000000000", 0.0 AS "P_1789-08-14T00:00:00.000000000", 0.0 AS "P_1789-09-14T00:00:00.000000000", '1789-07-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 4 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 1.0 AS "P_1789-08-14T00:00:00.000000000", 0.0 AS "P_1789-09-14T00:00:00.000000000", '1789-08-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 0.0 AS "P_1789-08-14T00:00:00.000000000", 1.0 AS "P_1789-09-14T00:00:00.000000000", '1789-09-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 1.0 AS "P_1789-08-14T00:00:00.000000000", 0.0 AS "P_1789-09-14T00:00:00.000000000", '1789-08-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 1.0 AS "P_1789-08-14T00:00:00.000000000", 0.0 AS "P_1789-09-14T00:00:00.000000000", '1789-08-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 0.0 AS "P_1789-08-14T00:00:00.000000000", 1.0 AS "P_1789-09-14T00:00:00.000000000", '1789-09-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 0.0 AS "P_1789-08-14T00:00:00.000000000", 1.0 AS "P_1789-09-14T00:00:00.000000000", '1789-09-14T00:00:00.000000000' AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."P_1789-07-14T00:00:00.000000000" AS "P_1789-07-14T00:00:00.000000000", "DT_node_data_3"."P_1789-08-14T00:00:00.000000000" AS "P_1789-08-14T00:00:00.000000000", "DT_node_data_3"."P_1789-09-14T00:00:00.000000000" AS "P_1789-09-14T00:00:00.000000000", "DT_node_data_3"."D" AS "D", "DT_node_data_3"."DP" AS "DP" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"Calibrated_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output_3"."P_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output_3"."P_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output_3"."P_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", CASE WHEN ("DT_Output_3"."P_1789-07-14T00:00:00.000000000" IS NULL OR "DT_Output_3"."P_1789-07-14T00:00:00.000000000" > 0.0) THEN ln("DT_Output_3"."P_1789-07-14T00:00:00.000000000") ELSE '-Infinity'::float8 END AS "LogProba_1789-07-14T00:00:00.000000000", CASE WHEN ("DT_Output_3"."P_1789-08-14T00:00:00.000000000" IS NULL OR "DT_Output_3"."P_1789-08-14T00:00:00.000000000" > 0.0) THEN ln("DT_Output_3"."P_1789-08-14T00:00:00.000000000") ELSE '-Infinity'::float8 END AS "LogProba_1789-08-14T00:00:00.000000000", CASE WHEN ("DT_Output_3"."P_1789-09-14T00:00:00.000000000" IS NULL OR "DT_Output_3"."P_1789-09-14T00:00:00.000000000" > 0.0) THEN ln("DT_Output_3"."P_1789-09-14T00:00:00.000000000") ELSE '-Infinity'::float8 END AS "LogProba_1789-09-14T00:00:00.000000000", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."P_1789-07-14T00:00:00.000000000") AS "ScoreOrProba_1789-07-14T00:00:00.000000000", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."P_1789-08-14T00:00:00.000000000") AS "ScoreOrProba_1789-08-14T00:00:00.000000000", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."P_1789-09-14T00:00:00.000000000") AS "ScoreOrProba_1789-09-14T00:00:00.000000000" 
FROM "DT_Output_3"), 
sigmoid_calibration_3 AS 
(SELECT "Calibrated_Model_3"."KEY" AS "KEY", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(5.442417342523718 * "Calibrated_Model_3"."ScoreOrProba_1789-07-14T00:00:00.000000000" + -3.0445224878196573))))) AS "Proba_1789-07-14T00:00:00.000000000", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(4.346958263204307 * "Calibrated_Model_3"."ScoreOrProba_1789-08-14T00:00:00.000000000" + -1.9490625020164078))))) AS "Proba_1789-08-14T00:00:00.000000000", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(4.261122708431462 * "Calibrated_Model_3"."ScoreOrProba_1789-09-14T00:00:00.000000000" + -3.0445238393052825))))) AS "Proba_1789-09-14T00:00:00.000000000" 
FROM "Calibrated_Model_3"), 
"Normalized_Probas_3" AS 
(SELECT sigmoid_calibration_3."KEY" AS "KEY", sigmoid_calibration_3."Proba_1789-07-14T00:00:00.000000000" / (sigmoid_calibration_3."Proba_1789-07-14T00:00:00.000000000" + sigmoid_calibration_3."Proba_1789-08-14T00:00:00.000000000" + sigmoid_calibration_3."Proba_1789-09-14T00:00:00.000000000") AS "Proba_1789-07-14T00:00:00.000000000", sigmoid_calibration_3."Proba_1789-08-14T00:00:00.000000000" / (sigmoid_calibration_3."Proba_1789-07-14T00:00:00.000000000" + sigmoid_calibration_3."Proba_1789-08-14T00:00:00.000000000" + sigmoid_calibration_3."Proba_1789-09-14T00:00:00.000000000") AS "Proba_1789-08-14T00:00:00.000000000", sigmoid_calibration_3."Proba_1789-09-14T00:00:00.000000000" / (sigmoid_calibration_3."Proba_1789-07-14T00:00:00.000000000" + sigmoid_calibration_3."Proba_1789-08-14T00:00:00.000000000" + sigmoid_calibration_3."Proba_1789-09-14T00:00:00.000000000") AS "Proba_1789-09-14T00:00:00.000000000" 
FROM sigmoid_calibration_3)
 INSERT INTO "TMP_20221018190504_D2E1A8W_CalProb_B0" ("KEY", "Proba_1789-07-14T00:00:00.000000000", "Proba_1789-08-14T00:00:00.000000000", "Proba_1789-09-14T00:00:00.000000000") SELECT "T"."KEY", "T"."Proba_1789-07-14T00:00:00.000000000", "T"."Proba_1789-08-14T00:00:00.000000000", "T"."Proba_1789-09-14T00:00:00.000000000" 
FROM (SELECT "CalProb_B0"."KEY" AS "KEY", "CalProb_B0"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "CalProb_B0"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "CalProb_B0"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000" 
FROM (SELECT "CalProb_esu_0"."KEY" AS "KEY", "CalProb_esu_0"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "CalProb_esu_0"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "CalProb_esu_0"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000" 
FROM (SELECT "Normalized_Probas"."KEY" AS "KEY", "Normalized_Probas"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "Normalized_Probas"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "Normalized_Probas"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000" 
FROM "Normalized_Probas" UNION ALL SELECT "Normalized_Probas_1"."KEY" AS "KEY", "Normalized_Probas_1"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "Normalized_Probas_1"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "Normalized_Probas_1"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000" 
FROM "Normalized_Probas_1" UNION ALL SELECT "Normalized_Probas_2"."KEY" AS "KEY", "Normalized_Probas_2"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "Normalized_Probas_2"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "Normalized_Probas_2"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000" 
FROM "Normalized_Probas_2" UNION ALL SELECT "Normalized_Probas_3"."KEY" AS "KEY", "Normalized_Probas_3"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "Normalized_Probas_3"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "Normalized_Probas_3"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000" 
FROM "Normalized_Probas_3") AS "CalProb_esu_0") AS "CalProb_B0") AS "T"

-- Code For temporary table TMP_20221018190504_IJG2FOH_CalProb_avg part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190504_IJG2FOH_CalProb_avg" (
	"KEY" BIGINT NOT NULL, 
	"Proba_1789-07-14T00:00:00.000000000" FLOAT, 
	"Proba_1789-08-14T00:00:00.000000000" FLOAT, 
	"Proba_1789-09-14T00:00:00.000000000" FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018190504_IJG2FOH_CalProb_avg part 2. Populate

WITH "CalProb_Union" AS 
(SELECT "CalProb_EnsembleUnion"."KEY" AS "KEY", "CalProb_EnsembleUnion"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "CalProb_EnsembleUnion"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "CalProb_EnsembleUnion"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000" 
FROM (SELECT "CalProb_B0"."KEY" AS "KEY", "CalProb_B0"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "CalProb_B0"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "CalProb_B0"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000" 
FROM "TMP_20221018190504_D2E1A8W_CalProb_B0" AS "CalProb_B0") AS "CalProb_EnsembleUnion")
 INSERT INTO "TMP_20221018190504_IJG2FOH_CalProb_avg" ("KEY", "Proba_1789-07-14T00:00:00.000000000", "Proba_1789-08-14T00:00:00.000000000", "Proba_1789-09-14T00:00:00.000000000") SELECT "T"."KEY", "T"."Proba_1789-07-14T00:00:00.000000000", "T"."Proba_1789-08-14T00:00:00.000000000", "T"."Proba_1789-09-14T00:00:00.000000000" 
FROM (SELECT "CalProb_avg"."KEY" AS "KEY", "CalProb_avg"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "CalProb_avg"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "CalProb_avg"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Proba_1789-07-14T00:00:00.000000000" AS FLOAT) AS "Proba_1789-07-14T00:00:00.000000000", CAST("T"."Proba_1789-08-14T00:00:00.000000000" AS FLOAT) AS "Proba_1789-08-14T00:00:00.000000000", CAST("T"."Proba_1789-09-14T00:00:00.000000000" AS FLOAT) AS "Proba_1789-09-14T00:00:00.000000000" 
FROM (SELECT "CalProb_Union"."KEY" AS "KEY", avg(CAST("CalProb_Union"."Proba_1789-07-14T00:00:00.000000000" AS FLOAT)) AS "Proba_1789-07-14T00:00:00.000000000", avg(CAST("CalProb_Union"."Proba_1789-08-14T00:00:00.000000000" AS FLOAT)) AS "Proba_1789-08-14T00:00:00.000000000", avg(CAST("CalProb_Union"."Proba_1789-09-14T00:00:00.000000000" AS FLOAT)) AS "Proba_1789-09-14T00:00:00.000000000" 
FROM "CalProb_Union" GROUP BY "CalProb_Union"."KEY") AS "T") AS "CalProb_avg") AS "T"

-- Code For temporary table TMP_20221018190504_IJG2FOH_CalProb_avg part 3. Create Index 

CREATE INDEX "ix_TMP_20221018190504_IJG2FOH_CalProb_avg_KEY" ON "TMP_20221018190504_IJG2FOH_CalProb_avg" ("KEY")

-- Model deployment code

WITH orig_cte AS 
(SELECT "CalProb_avg"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "Score_1789-09-14T00:00:00.000000000", "CalProb_avg"."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "CalProb_avg"."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "CalProb_avg"."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "LogProba_1789-07-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "LogProba_1789-08-14T00:00:00.000000000", CAST(NULL AS FLOAT) AS "LogProba_1789-09-14T00:00:00.000000000", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "TMP_20221018190504_IJG2FOH_CalProb_avg" AS "CalProb_avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", '1789-07-14T00:00:00.000000000' AS class, orig_cte."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba", orig_cte."Proba_1789-07-14T00:00:00.000000000" AS "Proba", orig_cte."Score_1789-07-14T00:00:00.000000000" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", '1789-08-14T00:00:00.000000000' AS class, orig_cte."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba", orig_cte."Proba_1789-08-14T00:00:00.000000000" AS "Proba", orig_cte."Score_1789-08-14T00:00:00.000000000" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", '1789-09-14T00:00:00.000000000' AS class, orig_cte."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba", orig_cte."Proba_1789-09-14T00:00:00.000000000" AS "Proba", orig_cte."Score_1789-09-14T00:00:00.000000000" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", orig_cte."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", orig_cte."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", orig_cte."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", orig_cte."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", orig_cte."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", orig_cte."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", orig_cte."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", orig_cte."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", score_max."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", score_max."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", score_max."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", score_max."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", score_max."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", score_max."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", score_max."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", score_max."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", score_max."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", score_max."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", score_max."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", score_max."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", score_max."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", score_max."LogProba_1789-07-14T00:00:00.000000000" AS "LogProba_1789-07-14T00:00:00.000000000", score_max."LogProba_1789-08-14T00:00:00.000000000" AS "LogProba_1789-08-14T00:00:00.000000000", score_max."LogProba_1789-09-14T00:00:00.000000000" AS "LogProba_1789-09-14T00:00:00.000000000", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", max(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."Proba" >= union_with_max."max_Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_1789-07-14T00:00:00.000000000" AS "Score_1789-07-14T00:00:00.000000000", arg_max_cte."Score_1789-08-14T00:00:00.000000000" AS "Score_1789-08-14T00:00:00.000000000", arg_max_cte."Score_1789-09-14T00:00:00.000000000" AS "Score_1789-09-14T00:00:00.000000000", arg_max_cte."Proba_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", arg_max_cte."Proba_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", arg_max_cte."Proba_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", CASE WHEN (arg_max_cte."Proba_1789-07-14T00:00:00.000000000" IS NULL OR arg_max_cte."Proba_1789-07-14T00:00:00.000000000" > 0.0) THEN ln(arg_max_cte."Proba_1789-07-14T00:00:00.000000000") ELSE '-Infinity'::float8 END AS "LogProba_1789-07-14T00:00:00.000000000", CASE WHEN (arg_max_cte."Proba_1789-08-14T00:00:00.000000000" IS NULL OR arg_max_cte."Proba_1789-08-14T00:00:00.000000000" > 0.0) THEN ln(arg_max_cte."Proba_1789-08-14T00:00:00.000000000") ELSE '-Infinity'::float8 END AS "LogProba_1789-08-14T00:00:00.000000000", CASE WHEN (arg_max_cte."Proba_1789-09-14T00:00:00.000000000" IS NULL OR arg_max_cte."Proba_1789-09-14T00:00:00.000000000" > 0.0) THEN ln(arg_max_cte."Proba_1789-09-14T00:00:00.000000000") ELSE '-Infinity'::float8 END AS "LogProba_1789-09-14T00:00:00.000000000", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte