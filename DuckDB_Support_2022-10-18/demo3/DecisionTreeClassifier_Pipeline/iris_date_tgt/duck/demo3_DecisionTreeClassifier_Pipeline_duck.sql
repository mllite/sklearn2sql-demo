-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : DecisionTreeClassifier_Pipeline
-- Dataset : iris_date_tgt
-- Database : duck


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018190518_X7U1V58_ADS_imp_1_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190518_X7U1V58_ADS_imp_1_OUT" (
	"KEY" BIGINT NOT NULL, 
	imputer_output_2 DOUBLE, 
	imputer_output_3 DOUBLE, 
	imputer_output_4 DOUBLE, 
	imputer_output_5 DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018190518_X7U1V58_ADS_imp_1_OUT part 2. Populate

INSERT INTO "TMP_20221018190518_X7U1V58_ADS_imp_1_OUT" ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5) SELECT "T"."KEY", "T".imputer_output_2, "T".imputer_output_3, "T".imputer_output_4, "T".imputer_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".imputer_output_2 AS imputer_output_2, "ADS_imp_1_OUT".imputer_output_3 AS imputer_output_3, "ADS_imp_1_OUT".imputer_output_4 AS imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 AS imputer_output_5 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 5.8474999999999975 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 3.040833333333332 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 3.844166666666667 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 1.2458333333333336 ELSE "ADS"."Feature_3" END AS imputer_output_5 
FROM iris_date_tgt AS "ADS") AS "ADS_imp_1_OUT") AS "T"

-- Code For temporary table TMP_20221018190518_X7U1V58_ADS_imp_1_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018190518_X7U1V58_ADS_imp_1_OUT_KEY" ON "TMP_20221018190518_X7U1V58_ADS_imp_1_OUT" ("KEY")

-- Code For temporary table TMP_20221018190518_SKPKRCO_ADS_sca_2_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190518_SKPKRCO_ADS_sca_2_OUT" (
	"KEY" BIGINT NOT NULL, 
	scaler_output_2 DOUBLE, 
	scaler_output_3 DOUBLE, 
	scaler_output_4 DOUBLE, 
	scaler_output_5 DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018190518_SKPKRCO_ADS_sca_2_OUT part 2. Populate

INSERT INTO "TMP_20221018190518_SKPKRCO_ADS_sca_2_OUT" ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5) SELECT "T"."KEY", "T".scaler_output_2, "T".scaler_output_3, "T".scaler_output_4, "T".scaler_output_5 
FROM (SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", "ADS_sca_2_OUT".scaler_output_2 AS scaler_output_2, "ADS_sca_2_OUT".scaler_output_3 AS scaler_output_3, "ADS_sca_2_OUT".scaler_output_4 AS scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 AS scaler_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS DOUBLE) - 5.8474999999999975) / 0.827039146594646 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS DOUBLE) - 3.040833333333332) / 0.43922200789830873 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS DOUBLE) - 3.844166666666667) / 1.7109839193347847 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS DOUBLE) - 1.2458333333333336) / 0.7486538845747673 AS scaler_output_5 
FROM "TMP_20221018190518_X7U1V58_ADS_imp_1_OUT" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "T"

-- Code For temporary table TMP_20221018190518_SKPKRCO_ADS_sca_2_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018190518_SKPKRCO_ADS_sca_2_OUT_KEY" ON "TMP_20221018190518_SKPKRCO_ADS_sca_2_OUT" ("KEY")

-- Model deployment code

WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.5955132991075516) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.5878683626651764) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5398578494787216) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.13470788672566414) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.6734309196472168) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.7047601938247681) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.572856843471527) THEN 11 ELSE 12 END ELSE 13 END ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018190518_SKPKRCO_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."P_1789-07-14T00:00:00.000000000" AS "P_1789-07-14T00:00:00.000000000", "Values"."P_1789-08-14T00:00:00.000000000" AS "P_1789-08-14T00:00:00.000000000", "Values"."P_1789-09-14T00:00:00.000000000" AS "P_1789-09-14T00:00:00.000000000", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 1.0 AS "P_1789-07-14T00:00:00.000000000", 0.0 AS "P_1789-08-14T00:00:00.000000000", 0.0 AS "P_1789-09-14T00:00:00.000000000", '1789-07-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 4 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 1.0 AS "P_1789-08-14T00:00:00.000000000", 0.0 AS "P_1789-09-14T00:00:00.000000000", '1789-08-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 0.0 AS "P_1789-08-14T00:00:00.000000000", 1.0 AS "P_1789-09-14T00:00:00.000000000", '1789-09-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 1.0 AS "P_1789-08-14T00:00:00.000000000", 0.0 AS "P_1789-09-14T00:00:00.000000000", '1789-08-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 0.0 AS "P_1789-08-14T00:00:00.000000000", 1.0 AS "P_1789-09-14T00:00:00.000000000", '1789-09-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 1.0 AS "P_1789-08-14T00:00:00.000000000", 0.0 AS "P_1789-09-14T00:00:00.000000000", '1789-08-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 0.0 AS "P_1789-08-14T00:00:00.000000000", 1.0 AS "P_1789-09-14T00:00:00.000000000", '1789-09-14T00:00:00.000000000' AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_1789-07-14T00:00:00.000000000", 0.0 AS "P_1789-08-14T00:00:00.000000000", 1.0 AS "P_1789-09-14T00:00:00.000000000", '1789-09-14T00:00:00.000000000' AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."P_1789-07-14T00:00:00.000000000" AS "P_1789-07-14T00:00:00.000000000", "DT_node_data"."P_1789-08-14T00:00:00.000000000" AS "P_1789-08-14T00:00:00.000000000", "DT_node_data"."P_1789-09-14T00:00:00.000000000" AS "P_1789-09-14T00:00:00.000000000", "DT_node_data"."D" AS "D", "DT_node_data"."DP" AS "DP" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid)
 SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_1789-07-14T00:00:00.000000000", CAST(NULL AS DOUBLE) AS "Score_1789-08-14T00:00:00.000000000", CAST(NULL AS DOUBLE) AS "Score_1789-09-14T00:00:00.000000000", "DT_Output"."P_1789-07-14T00:00:00.000000000" AS "Proba_1789-07-14T00:00:00.000000000", "DT_Output"."P_1789-08-14T00:00:00.000000000" AS "Proba_1789-08-14T00:00:00.000000000", "DT_Output"."P_1789-09-14T00:00:00.000000000" AS "Proba_1789-09-14T00:00:00.000000000", CASE WHEN ("DT_Output"."P_1789-07-14T00:00:00.000000000" IS NULL OR "DT_Output"."P_1789-07-14T00:00:00.000000000" > 0.0) THEN ln("DT_Output"."P_1789-07-14T00:00:00.000000000") ELSE '-Infinity'::float8 END AS "LogProba_1789-07-14T00:00:00.000000000", CASE WHEN ("DT_Output"."P_1789-08-14T00:00:00.000000000" IS NULL OR "DT_Output"."P_1789-08-14T00:00:00.000000000" > 0.0) THEN ln("DT_Output"."P_1789-08-14T00:00:00.000000000") ELSE '-Infinity'::float8 END AS "LogProba_1789-08-14T00:00:00.000000000", CASE WHEN ("DT_Output"."P_1789-09-14T00:00:00.000000000" IS NULL OR "DT_Output"."P_1789-09-14T00:00:00.000000000" > 0.0) THEN ln("DT_Output"."P_1789-09-14T00:00:00.000000000") ELSE '-Infinity'::float8 END AS "LogProba_1789-09-14T00:00:00.000000000", "DT_Output"."D" AS "Decision", "DT_Output"."DP" AS "DecisionProba" 
FROM "DT_Output"