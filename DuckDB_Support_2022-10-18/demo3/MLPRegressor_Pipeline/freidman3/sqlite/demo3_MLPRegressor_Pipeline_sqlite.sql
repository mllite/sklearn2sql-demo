-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : MLPRegressor_Pipeline
-- Dataset : freidman3
-- Database : sqlite


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018190316_BSPF8BN_ADS_imp_1_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190316_BSPF8BN_ADS_imp_1_OUT" (
	"KEY" BIGINT NOT NULL, 
	imputer_output_2 FLOAT, 
	imputer_output_3 FLOAT, 
	imputer_output_4 FLOAT, 
	imputer_output_5 FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20221018190316_BSPF8BN_ADS_imp_1_OUT part 2. Populate

INSERT INTO "TMP_20221018190316_BSPF8BN_ADS_imp_1_OUT" ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5) SELECT "T"."KEY", "T".imputer_output_2, "T".imputer_output_3, "T".imputer_output_4, "T".imputer_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".imputer_output_2 AS imputer_output_2, "ADS_imp_1_OUT".imputer_output_3 AS imputer_output_3, "ADS_imp_1_OUT".imputer_output_4 AS imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 AS imputer_output_5 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 43.79128122207401 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 945.9672833084396 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.5310009099975209 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 6.139967152050499 ELSE "ADS"."Feature_3" END AS imputer_output_5 
FROM freidman3 AS "ADS") AS "ADS_imp_1_OUT") AS "T"

-- Code For temporary table TMP_20221018190316_BSPF8BN_ADS_imp_1_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018190316_BSPF8BN_ADS_imp_1_OUT_KEY" ON "TMP_20221018190316_BSPF8BN_ADS_imp_1_OUT" ("KEY")

-- Code For temporary table TMP_20221018190316_8HIXWWS_ADS_sca_2_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190316_8HIXWWS_ADS_sca_2_OUT" (
	"KEY" BIGINT NOT NULL, 
	scaler_output_2 FLOAT, 
	scaler_output_3 FLOAT, 
	scaler_output_4 FLOAT, 
	scaler_output_5 FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20221018190316_8HIXWWS_ADS_sca_2_OUT part 2. Populate

INSERT INTO "TMP_20221018190316_8HIXWWS_ADS_sca_2_OUT" ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5) SELECT "T"."KEY", "T".scaler_output_2, "T".scaler_output_3, "T".scaler_output_4, "T".scaler_output_5 
FROM (SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", "ADS_sca_2_OUT".scaler_output_2 AS scaler_output_2, "ADS_sca_2_OUT".scaler_output_3 AS scaler_output_3, "ADS_sca_2_OUT".scaler_output_4 AS scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 AS scaler_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS FLOAT) - 43.79128122207401) / 26.03562357622511 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS FLOAT) - 945.9672833084396) / 461.4552766146446 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS FLOAT) - 0.5310009099975209) / 0.2901863282144786 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS FLOAT) - 6.139967152050499) / 3.072917242564058 AS scaler_output_5 
FROM "TMP_20221018190316_BSPF8BN_ADS_imp_1_OUT" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "T"

-- Code For temporary table TMP_20221018190316_8HIXWWS_ADS_sca_2_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018190316_8HIXWWS_ADS_sca_2_OUT_KEY" ON "TMP_20221018190316_8HIXWWS_ADS_sca_2_OUT" ("KEY")

-- Code For temporary table TMP_20221018190316_JL67XGV_HL_1_relu_1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190316_JL67XGV_HL_1_relu_1" (
	"KEY" BIGINT NOT NULL, 
	"NEUR_1_1" FLOAT, 
	"NEUR_1_2" FLOAT, 
	"NEUR_1_3" FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20221018190316_JL67XGV_HL_1_relu_1 part 2. Populate

WITH "IL" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CAST("ADS_sca_2_OUT".scaler_output_2 AS FLOAT) AS scaler_output_2, CAST("ADS_sca_2_OUT".scaler_output_3 AS FLOAT) AS scaler_output_3, CAST("ADS_sca_2_OUT".scaler_output_4 AS FLOAT) AS scaler_output_4, CAST("ADS_sca_2_OUT".scaler_output_5 AS FLOAT) AS scaler_output_5 
FROM "TMP_20221018190316_8HIXWWS_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 0.7889919345077481 * "IL".scaler_output_2 + -1.0544279477324954 * "IL".scaler_output_3 + -1.2070650059858294 * "IL".scaler_output_4 + -0.421942674124477 * "IL".scaler_output_5 + -0.03426047651936991 AS "NEUR_1_1", -0.06006880803514351 * "IL".scaler_output_2 + 0.3256608535821793 * "IL".scaler_output_3 + -1.6826418672139047 * "IL".scaler_output_4 + 0.10730959167261139 * "IL".scaler_output_5 + -1.5938086025648788 AS "NEUR_1_2", -0.03174345823089892 * "IL".scaler_output_2 + -0.9294512909871802 * "IL".scaler_output_3 + 0.9493400405416361 * "IL".scaler_output_4 + 0.5621296328614194 * "IL".scaler_output_5 + -0.6994705531614669 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", max("HL_BA_1"."NEUR_1_1", 0) AS "NEUR_1_1", max("HL_BA_1"."NEUR_1_2", 0) AS "NEUR_1_2", max("HL_BA_1"."NEUR_1_3", 0) AS "NEUR_1_3" 
FROM "HL_BA_1")
 INSERT INTO "TMP_20221018190316_JL67XGV_HL_1_relu_1" ("KEY", "NEUR_1_1", "NEUR_1_2", "NEUR_1_3") SELECT "T"."KEY", "T"."NEUR_1_1", "T"."NEUR_1_2", "T"."NEUR_1_3" 
FROM (SELECT "HL_1_relu_1"."KEY" AS "KEY", "HL_1_relu_1"."NEUR_1_1" AS "NEUR_1_1", "HL_1_relu_1"."NEUR_1_2" AS "NEUR_1_2", "HL_1_relu_1"."NEUR_1_3" AS "NEUR_1_3" 
FROM (SELECT "HL_1_relu"."KEY" AS "KEY", "HL_1_relu"."NEUR_1_1" AS "NEUR_1_1", "HL_1_relu"."NEUR_1_2" AS "NEUR_1_2", "HL_1_relu"."NEUR_1_3" AS "NEUR_1_3" 
FROM "HL_1_relu") AS "HL_1_relu_1") AS "T"

-- Code For temporary table TMP_20221018190316_JL67XGV_HL_1_relu_1 part 3. Create Index 

CREATE INDEX "ix_TMP_20221018190316_JL67XGV_HL_1_relu_1_KEY" ON "TMP_20221018190316_JL67XGV_HL_1_relu_1" ("KEY")

-- Code For temporary table TMP_20221018190316_KDB5TKV_OL_identity_1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190316_KDB5TKV_OL_identity_1" (
	"KEY" BIGINT NOT NULL, 
	"NEUR_3_1" FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20221018190316_KDB5TKV_OL_identity_1 part 2. Populate

WITH "HL_BA_2" AS 
(SELECT "HL_1_relu_1"."KEY" AS "KEY", 0.4246281490062538 * "HL_1_relu_1"."NEUR_1_1" + 1.1766050565174682 * "HL_1_relu_1"."NEUR_1_2" + 0.8671207680340339 * "HL_1_relu_1"."NEUR_1_3" + -1.7870886895453773 AS "NEUR_2_1", 1.027081060185108 * "HL_1_relu_1"."NEUR_1_1" + 0.5515504584365538 * "HL_1_relu_1"."NEUR_1_2" + -0.21303672874336985 * "HL_1_relu_1"."NEUR_1_3" + -0.2913789484545672 AS "NEUR_2_2", -0.30063148784704224 * "HL_1_relu_1"."NEUR_1_1" + -0.8271023148052874 * "HL_1_relu_1"."NEUR_1_2" + -0.30095786146820175 * "HL_1_relu_1"."NEUR_1_3" + -0.010394282503777497 AS "NEUR_2_3", -0.3412311990153894 * "HL_1_relu_1"."NEUR_1_1" + -0.5187474009217526 * "HL_1_relu_1"."NEUR_1_2" + -0.12229381817700281 * "HL_1_relu_1"."NEUR_1_3" + -0.7406283496068888 AS "NEUR_2_4", -0.27847463450756804 * "HL_1_relu_1"."NEUR_1_1" + 0.08492373453675439 * "HL_1_relu_1"."NEUR_1_2" + -0.0026061436020341695 * "HL_1_relu_1"."NEUR_1_3" + -0.6536311329303577 AS "NEUR_2_5" 
FROM "TMP_20221018190316_JL67XGV_HL_1_relu_1" AS "HL_1_relu_1"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", max("HL_BA_2"."NEUR_2_1", 0) AS "NEUR_2_1", max("HL_BA_2"."NEUR_2_2", 0) AS "NEUR_2_2", max("HL_BA_2"."NEUR_2_3", 0) AS "NEUR_2_3", max("HL_BA_2"."NEUR_2_4", 0) AS "NEUR_2_4", max("HL_BA_2"."NEUR_2_5", 0) AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", -1.149395745144783 * "HL_2_relu"."NEUR_2_1" + -0.1444240074384612 * "HL_2_relu"."NEUR_2_2" + -0.7181846306844716 * "HL_2_relu"."NEUR_2_3" + 0.6827592817304139 * "HL_2_relu"."NEUR_2_4" + 0.4101030612711134 * "HL_2_relu"."NEUR_2_5" + 1.5165908594591493 AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_BA")
 INSERT INTO "TMP_20221018190316_KDB5TKV_OL_identity_1" ("KEY", "NEUR_3_1") SELECT "T"."KEY", "T"."NEUR_3_1" 
FROM (SELECT "OL_identity_1"."KEY" AS "KEY", "OL_identity_1"."NEUR_3_1" AS "NEUR_3_1" 
FROM (SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_identity") AS "OL_identity_1") AS "T"

-- Code For temporary table TMP_20221018190316_KDB5TKV_OL_identity_1 part 3. Create Index 

CREATE INDEX "ix_TMP_20221018190316_KDB5TKV_OL_identity_1_KEY" ON "TMP_20221018190316_KDB5TKV_OL_identity_1" ("KEY")

-- Model deployment code

SELECT "OL_identity_1"."KEY" AS "KEY", "OL_identity_1"."NEUR_3_1" AS "Estimator" 
FROM "TMP_20221018190316_KDB5TKV_OL_identity_1" AS "OL_identity_1"