-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : MLPRegressor_Pipeline
-- Dataset : diabetes
-- Database : pgsql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018185821_FKNEFND_ADS_imp_1_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185821_FKNEFND_ADS_imp_1_OUT" (
	"KEY" BIGINT NOT NULL, 
	imputer_output_2 FLOAT, 
	imputer_output_3 FLOAT, 
	imputer_output_4 FLOAT, 
	imputer_output_5 FLOAT, 
	imputer_output_6 FLOAT, 
	imputer_output_7 FLOAT, 
	imputer_output_8 FLOAT, 
	imputer_output_9 FLOAT, 
	imputer_output_10 FLOAT, 
	imputer_output_11 FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185821_FKNEFND_ADS_imp_1_OUT part 2. Populate

INSERT INTO "TMP_20221018185821_FKNEFND_ADS_imp_1_OUT" ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5, imputer_output_6, imputer_output_7, imputer_output_8, imputer_output_9, imputer_output_10, imputer_output_11) SELECT "T"."KEY", "T".imputer_output_2, "T".imputer_output_3, "T".imputer_output_4, "T".imputer_output_5, "T".imputer_output_6, "T".imputer_output_7, "T".imputer_output_8, "T".imputer_output_9, "T".imputer_output_10, "T".imputer_output_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".imputer_output_2 AS imputer_output_2, "ADS_imp_1_OUT".imputer_output_3 AS imputer_output_3, "ADS_imp_1_OUT".imputer_output_4 AS imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 AS imputer_output_5, "ADS_imp_1_OUT".imputer_output_6 AS imputer_output_6, "ADS_imp_1_OUT".imputer_output_7 AS imputer_output_7, "ADS_imp_1_OUT".imputer_output_8 AS imputer_output_8, "ADS_imp_1_OUT".imputer_output_9 AS imputer_output_9, "ADS_imp_1_OUT".imputer_output_10 AS imputer_output_10, "ADS_imp_1_OUT".imputer_output_11 AS imputer_output_11 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0002686932066656524 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.0007239580580638301 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.0007280719825591873 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.0010135851598460544 ELSE "ADS"."Feature_3" END AS imputer_output_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0009763580732882766 ELSE "ADS"."Feature_4" END AS imputer_output_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.0017643808242336471 ELSE "ADS"."Feature_5" END AS imputer_output_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.0016512815450559991 ELSE "ADS"."Feature_6" END AS imputer_output_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.001390550198338443 ELSE "ADS"."Feature_7" END AS imputer_output_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.0012727412281983582 ELSE "ADS"."Feature_8" END AS imputer_output_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.0010344250056819138 ELSE "ADS"."Feature_9" END AS imputer_output_11 
FROM diabetes AS "ADS") AS "ADS_imp_1_OUT") AS "T"

-- Code For temporary table TMP_20221018185821_FKNEFND_ADS_imp_1_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185821_FKNEFND_ADS_imp_1_OUT_KEY" ON "TMP_20221018185821_FKNEFND_ADS_imp_1_OUT" ("KEY")

-- Code For temporary table TMP_20221018185821_MJ7WVOQ_ADS_sca_2_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185821_MJ7WVOQ_ADS_sca_2_OUT" (
	"KEY" BIGINT NOT NULL, 
	scaler_output_2 FLOAT, 
	scaler_output_3 FLOAT, 
	scaler_output_4 FLOAT, 
	scaler_output_5 FLOAT, 
	scaler_output_6 FLOAT, 
	scaler_output_7 FLOAT, 
	scaler_output_8 FLOAT, 
	scaler_output_9 FLOAT, 
	scaler_output_10 FLOAT, 
	scaler_output_11 FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185821_MJ7WVOQ_ADS_sca_2_OUT part 2. Populate

INSERT INTO "TMP_20221018185821_MJ7WVOQ_ADS_sca_2_OUT" ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11) SELECT "T"."KEY", "T".scaler_output_2, "T".scaler_output_3, "T".scaler_output_4, "T".scaler_output_5, "T".scaler_output_6, "T".scaler_output_7, "T".scaler_output_8, "T".scaler_output_9, "T".scaler_output_10, "T".scaler_output_11 
FROM (SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", "ADS_sca_2_OUT".scaler_output_2 AS scaler_output_2, "ADS_sca_2_OUT".scaler_output_3 AS scaler_output_3, "ADS_sca_2_OUT".scaler_output_4 AS scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 AS scaler_output_5, "ADS_sca_2_OUT".scaler_output_6 AS scaler_output_6, "ADS_sca_2_OUT".scaler_output_7 AS scaler_output_7, "ADS_sca_2_OUT".scaler_output_8 AS scaler_output_8, "ADS_sca_2_OUT".scaler_output_9 AS scaler_output_9, "ADS_sca_2_OUT".scaler_output_10 AS scaler_output_10, "ADS_sca_2_OUT".scaler_output_11 AS scaler_output_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS FLOAT) - 0.0002686932066656524) / 0.047242095836536116 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS FLOAT) - 0.0007239580580638301) / 0.047605576685039 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS FLOAT) - 0.0007280719825591873) / 0.04693591143936429 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS FLOAT) - 0.0010135851598460544) / 0.04833530116894073 AS scaler_output_5, (CAST("ADS_imp_1_OUT".imputer_output_6 AS FLOAT) - 0.0009763580732882766) / 0.04805076200970219 AS scaler_output_6, (CAST("ADS_imp_1_OUT".imputer_output_7 AS FLOAT) - 0.0017643808242336471) / 0.048060808731544384 AS scaler_output_7, (CAST("ADS_imp_1_OUT".imputer_output_8 AS FLOAT) - -0.0016512815450559991) / 0.04620240378042887 AS scaler_output_8, (CAST("ADS_imp_1_OUT".imputer_output_9 AS FLOAT) - 0.001390550198338443) / 0.047363093040532836 AS scaler_output_9, (CAST("ADS_imp_1_OUT".imputer_output_10 AS FLOAT) - 0.0012727412281983582) / 0.045892845781363927 AS scaler_output_10, (CAST("ADS_imp_1_OUT".imputer_output_11 AS FLOAT) - 0.0010344250056819138) / 0.04776158519570336 AS scaler_output_11 
FROM "TMP_20221018185821_FKNEFND_ADS_imp_1_OUT" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "T"

-- Code For temporary table TMP_20221018185821_MJ7WVOQ_ADS_sca_2_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185821_MJ7WVOQ_ADS_sca_2_OUT_KEY" ON "TMP_20221018185821_MJ7WVOQ_ADS_sca_2_OUT" ("KEY")

-- Code For temporary table TMP_20221018185821_GRW9I4Z_HL_1_relu_1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185821_GRW9I4Z_HL_1_relu_1" (
	"KEY" BIGINT NOT NULL, 
	"NEUR_1_1" FLOAT, 
	"NEUR_1_2" FLOAT, 
	"NEUR_1_3" FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185821_GRW9I4Z_HL_1_relu_1 part 2. Populate

WITH "IL" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CAST("ADS_sca_2_OUT".scaler_output_2 AS FLOAT) AS scaler_output_2, CAST("ADS_sca_2_OUT".scaler_output_3 AS FLOAT) AS scaler_output_3, CAST("ADS_sca_2_OUT".scaler_output_4 AS FLOAT) AS scaler_output_4, CAST("ADS_sca_2_OUT".scaler_output_5 AS FLOAT) AS scaler_output_5, CAST("ADS_sca_2_OUT".scaler_output_6 AS FLOAT) AS scaler_output_6, CAST("ADS_sca_2_OUT".scaler_output_7 AS FLOAT) AS scaler_output_7, CAST("ADS_sca_2_OUT".scaler_output_8 AS FLOAT) AS scaler_output_8, CAST("ADS_sca_2_OUT".scaler_output_9 AS FLOAT) AS scaler_output_9, CAST("ADS_sca_2_OUT".scaler_output_10 AS FLOAT) AS scaler_output_10, CAST("ADS_sca_2_OUT".scaler_output_11 AS FLOAT) AS scaler_output_11 
FROM "TMP_20221018185821_MJ7WVOQ_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", -1.8026831844543378 * "IL".scaler_output_2 + -4.165373431227281 * "IL".scaler_output_3 + 1.1913253250364622 * "IL".scaler_output_4 + 0.4538848164097683 * "IL".scaler_output_5 + -1.1902234001776082 * "IL".scaler_output_6 + 0.9732696990624801 * "IL".scaler_output_7 + -0.9678249842589978 * "IL".scaler_output_8 + 0.5963033159265391 * "IL".scaler_output_9 + 0.23284700537945663 * "IL".scaler_output_10 + -0.6071359051958473 * "IL".scaler_output_11 + -3.2369086787137142 AS "NEUR_1_1", -1.3001265115002343 * "IL".scaler_output_2 + -2.1450311922693293 * "IL".scaler_output_3 + -2.934291966519401 * "IL".scaler_output_4 + -4.105063596133639 * "IL".scaler_output_5 + -0.670803931209771 * "IL".scaler_output_6 + -1.2238294833597254 * "IL".scaler_output_7 + 0.254562011267853 * "IL".scaler_output_8 + 1.9024945887334552 * "IL".scaler_output_9 + -1.648608507184486 * "IL".scaler_output_10 + -1.6250620292983255 * "IL".scaler_output_11 + -4.529537854556797 AS "NEUR_1_2", 0.5118243221744525 * "IL".scaler_output_2 + 0.013478473927957705 * "IL".scaler_output_3 + 1.377281447197864 * "IL".scaler_output_4 + 0.9824930586269822 * "IL".scaler_output_5 + -3.4229075413920795 * "IL".scaler_output_6 + 2.676621675765541 * "IL".scaler_output_7 + 1.045078083042749 * "IL".scaler_output_8 + 0.2529873138555979 * "IL".scaler_output_9 + 2.6109017290424235 * "IL".scaler_output_10 + 0.46701147250377584 * "IL".scaler_output_11 + 3.6809894548228907 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", greatest("HL_BA_1"."NEUR_1_1", 0) AS "NEUR_1_1", greatest("HL_BA_1"."NEUR_1_2", 0) AS "NEUR_1_2", greatest("HL_BA_1"."NEUR_1_3", 0) AS "NEUR_1_3" 
FROM "HL_BA_1")
 INSERT INTO "TMP_20221018185821_GRW9I4Z_HL_1_relu_1" ("KEY", "NEUR_1_1", "NEUR_1_2", "NEUR_1_3") SELECT "T"."KEY", "T"."NEUR_1_1", "T"."NEUR_1_2", "T"."NEUR_1_3" 
FROM (SELECT "HL_1_relu_1"."KEY" AS "KEY", "HL_1_relu_1"."NEUR_1_1" AS "NEUR_1_1", "HL_1_relu_1"."NEUR_1_2" AS "NEUR_1_2", "HL_1_relu_1"."NEUR_1_3" AS "NEUR_1_3" 
FROM (SELECT "HL_1_relu"."KEY" AS "KEY", "HL_1_relu"."NEUR_1_1" AS "NEUR_1_1", "HL_1_relu"."NEUR_1_2" AS "NEUR_1_2", "HL_1_relu"."NEUR_1_3" AS "NEUR_1_3" 
FROM "HL_1_relu") AS "HL_1_relu_1") AS "T"

-- Code For temporary table TMP_20221018185821_GRW9I4Z_HL_1_relu_1 part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185821_GRW9I4Z_HL_1_relu_1_KEY" ON "TMP_20221018185821_GRW9I4Z_HL_1_relu_1" ("KEY")

-- Code For temporary table TMP_20221018185821_H6CPYUW_OL_identity_1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185821_H6CPYUW_OL_identity_1" (
	"KEY" BIGINT NOT NULL, 
	"NEUR_3_1" FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185821_H6CPYUW_OL_identity_1 part 2. Populate

WITH "HL_BA_2" AS 
(SELECT "HL_1_relu_1"."KEY" AS "KEY", -0.7797568879771527 * "HL_1_relu_1"."NEUR_1_1" + -0.06785048753668912 * "HL_1_relu_1"."NEUR_1_2" + -0.21851587843435571 * "HL_1_relu_1"."NEUR_1_3" + -0.533470773904563 AS "NEUR_2_1", -2.020051430300993 * "HL_1_relu_1"."NEUR_1_1" + -1.2532357181841418 * "HL_1_relu_1"."NEUR_1_2" + -1.1272184860325762 * "HL_1_relu_1"."NEUR_1_3" + -6.187389333470535 AS "NEUR_2_2", 0.7323742191511545 * "HL_1_relu_1"."NEUR_1_1" + 2.0710923860314376 * "HL_1_relu_1"."NEUR_1_2" + 2.509021487608399 * "HL_1_relu_1"."NEUR_1_3" + 4.681025891574233 AS "NEUR_2_3", 0.11108979702912206 * "HL_1_relu_1"."NEUR_1_1" + -0.5047401138474552 * "HL_1_relu_1"."NEUR_1_2" + -0.4066296342136866 * "HL_1_relu_1"."NEUR_1_3" + -0.7964330424336139 AS "NEUR_2_4", -2.797846334058093 * "HL_1_relu_1"."NEUR_1_1" + 2.649693775963864 * "HL_1_relu_1"."NEUR_1_2" + -3.851943982619489 * "HL_1_relu_1"."NEUR_1_3" + -2.9567898369922228 AS "NEUR_2_5" 
FROM "TMP_20221018185821_GRW9I4Z_HL_1_relu_1" AS "HL_1_relu_1"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", greatest("HL_BA_2"."NEUR_2_1", 0) AS "NEUR_2_1", greatest("HL_BA_2"."NEUR_2_2", 0) AS "NEUR_2_2", greatest("HL_BA_2"."NEUR_2_3", 0) AS "NEUR_2_3", greatest("HL_BA_2"."NEUR_2_4", 0) AS "NEUR_2_4", greatest("HL_BA_2"."NEUR_2_5", 0) AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", 0.48633525049207094 * "HL_2_relu"."NEUR_2_1" + 2.0764812798278784 * "HL_2_relu"."NEUR_2_2" + 8.19281544073304 * "HL_2_relu"."NEUR_2_3" + 0.7008383422512217 * "HL_2_relu"."NEUR_2_4" + -6.3365002785101705 * "HL_2_relu"."NEUR_2_5" + 18.450841273306672 AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_BA")
 INSERT INTO "TMP_20221018185821_H6CPYUW_OL_identity_1" ("KEY", "NEUR_3_1") SELECT "T"."KEY", "T"."NEUR_3_1" 
FROM (SELECT "OL_identity_1"."KEY" AS "KEY", "OL_identity_1"."NEUR_3_1" AS "NEUR_3_1" 
FROM (SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_identity") AS "OL_identity_1") AS "T"

-- Code For temporary table TMP_20221018185821_H6CPYUW_OL_identity_1 part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185821_H6CPYUW_OL_identity_1_KEY" ON "TMP_20221018185821_H6CPYUW_OL_identity_1" ("KEY")

-- Model deployment code

SELECT "OL_identity_1"."KEY" AS "KEY", "OL_identity_1"."NEUR_3_1" AS "Estimator" 
FROM "TMP_20221018185821_H6CPYUW_OL_identity_1" AS "OL_identity_1"