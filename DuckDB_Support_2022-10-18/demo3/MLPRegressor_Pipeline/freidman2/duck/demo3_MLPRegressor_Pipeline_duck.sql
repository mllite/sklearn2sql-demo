-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : MLPRegressor_Pipeline
-- Dataset : freidman2
-- Database : duck


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018190220_5P5ESO3_ADS_imp_1_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190220_5P5ESO3_ADS_imp_1_OUT" (
	"KEY" BIGINT NOT NULL, 
	imputer_output_2 DOUBLE, 
	imputer_output_3 DOUBLE, 
	imputer_output_4 DOUBLE, 
	imputer_output_5 DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018190220_5P5ESO3_ADS_imp_1_OUT part 2. Populate

INSERT INTO "TMP_20221018190220_5P5ESO3_ADS_imp_1_OUT" ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5) SELECT "T"."KEY", "T".imputer_output_2, "T".imputer_output_3, "T".imputer_output_4, "T".imputer_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".imputer_output_2 AS imputer_output_2, "ADS_imp_1_OUT".imputer_output_3 AS imputer_output_3, "ADS_imp_1_OUT".imputer_output_4 AS imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 AS imputer_output_5 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 43.79128122207401 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 945.9672833084396 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.5310009099975209 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 6.139967152050499 ELSE "ADS"."Feature_3" END AS imputer_output_5 
FROM freidman2 AS "ADS") AS "ADS_imp_1_OUT") AS "T"

-- Code For temporary table TMP_20221018190220_5P5ESO3_ADS_imp_1_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018190220_5P5ESO3_ADS_imp_1_OUT_KEY" ON "TMP_20221018190220_5P5ESO3_ADS_imp_1_OUT" ("KEY")

-- Code For temporary table TMP_20221018190220_B15CGG4_ADS_sca_2_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190220_B15CGG4_ADS_sca_2_OUT" (
	"KEY" BIGINT NOT NULL, 
	scaler_output_2 DOUBLE, 
	scaler_output_3 DOUBLE, 
	scaler_output_4 DOUBLE, 
	scaler_output_5 DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018190220_B15CGG4_ADS_sca_2_OUT part 2. Populate

INSERT INTO "TMP_20221018190220_B15CGG4_ADS_sca_2_OUT" ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5) SELECT "T"."KEY", "T".scaler_output_2, "T".scaler_output_3, "T".scaler_output_4, "T".scaler_output_5 
FROM (SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", "ADS_sca_2_OUT".scaler_output_2 AS scaler_output_2, "ADS_sca_2_OUT".scaler_output_3 AS scaler_output_3, "ADS_sca_2_OUT".scaler_output_4 AS scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 AS scaler_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS DOUBLE) - 43.79128122207401) / 26.03562357622511 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS DOUBLE) - 945.9672833084396) / 461.4552766146446 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS DOUBLE) - 0.5310009099975209) / 0.2901863282144786 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS DOUBLE) - 6.139967152050499) / 3.072917242564058 AS scaler_output_5 
FROM "TMP_20221018190220_5P5ESO3_ADS_imp_1_OUT" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "T"

-- Code For temporary table TMP_20221018190220_B15CGG4_ADS_sca_2_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018190220_B15CGG4_ADS_sca_2_OUT_KEY" ON "TMP_20221018190220_B15CGG4_ADS_sca_2_OUT" ("KEY")

-- Code For temporary table TMP_20221018190220_XQ4GUCO_HL_1_relu_1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190220_XQ4GUCO_HL_1_relu_1" (
	"KEY" BIGINT NOT NULL, 
	"NEUR_1_1" DOUBLE, 
	"NEUR_1_2" DOUBLE, 
	"NEUR_1_3" DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018190220_XQ4GUCO_HL_1_relu_1 part 2. Populate

WITH "IL" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CAST("ADS_sca_2_OUT".scaler_output_2 AS DOUBLE) AS scaler_output_2, CAST("ADS_sca_2_OUT".scaler_output_3 AS DOUBLE) AS scaler_output_3, CAST("ADS_sca_2_OUT".scaler_output_4 AS DOUBLE) AS scaler_output_4, CAST("ADS_sca_2_OUT".scaler_output_5 AS DOUBLE) AS scaler_output_5 
FROM "TMP_20221018190220_B15CGG4_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", -4.622488278876024 * "IL".scaler_output_2 + 0.7512420707122535 * "IL".scaler_output_3 + 2.5742939001331684 * "IL".scaler_output_4 + -1.745645210191363 * "IL".scaler_output_5 + -0.0364635915655483 AS "NEUR_1_1", -5.2659015658673844 * "IL".scaler_output_2 + 4.861082881174695 * "IL".scaler_output_3 + 7.832530739436679 * "IL".scaler_output_4 + -1.225210998662991 * "IL".scaler_output_5 + 3.8694913302321456 AS "NEUR_1_2", 7.756252786190183 * "IL".scaler_output_2 + 13.008369976403447 * "IL".scaler_output_3 + 10.891005090891584 * "IL".scaler_output_4 + 3.0280181972061344 * "IL".scaler_output_5 + 8.97483083227937 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", greatest("HL_BA_1"."NEUR_1_1", 0) AS "NEUR_1_1", greatest("HL_BA_1"."NEUR_1_2", 0) AS "NEUR_1_2", greatest("HL_BA_1"."NEUR_1_3", 0) AS "NEUR_1_3" 
FROM "HL_BA_1")
 INSERT INTO "TMP_20221018190220_XQ4GUCO_HL_1_relu_1" ("KEY", "NEUR_1_1", "NEUR_1_2", "NEUR_1_3") SELECT "T"."KEY", "T"."NEUR_1_1", "T"."NEUR_1_2", "T"."NEUR_1_3" 
FROM (SELECT "HL_1_relu_1"."KEY" AS "KEY", "HL_1_relu_1"."NEUR_1_1" AS "NEUR_1_1", "HL_1_relu_1"."NEUR_1_2" AS "NEUR_1_2", "HL_1_relu_1"."NEUR_1_3" AS "NEUR_1_3" 
FROM (SELECT "HL_1_relu"."KEY" AS "KEY", "HL_1_relu"."NEUR_1_1" AS "NEUR_1_1", "HL_1_relu"."NEUR_1_2" AS "NEUR_1_2", "HL_1_relu"."NEUR_1_3" AS "NEUR_1_3" 
FROM "HL_1_relu") AS "HL_1_relu_1") AS "T"

-- Code For temporary table TMP_20221018190220_XQ4GUCO_HL_1_relu_1 part 3. Create Index 

CREATE INDEX "ix_TMP_20221018190220_XQ4GUCO_HL_1_relu_1_KEY" ON "TMP_20221018190220_XQ4GUCO_HL_1_relu_1" ("KEY")

-- Code For temporary table TMP_20221018190220_4B2QYHW_OL_identity_1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190220_4B2QYHW_OL_identity_1" (
	"KEY" BIGINT NOT NULL, 
	"NEUR_3_1" DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018190220_4B2QYHW_OL_identity_1 part 2. Populate

WITH "HL_BA_2" AS 
(SELECT "HL_1_relu_1"."KEY" AS "KEY", -5.045944089136265 * "HL_1_relu_1"."NEUR_1_1" + 2.458150624242734 * "HL_1_relu_1"."NEUR_1_2" + -0.8921959740119868 * "HL_1_relu_1"."NEUR_1_3" + 4.5039567820988 AS "NEUR_2_1", -0.051430255681982145 * "HL_1_relu_1"."NEUR_1_1" + -1.1100332888077327 * "HL_1_relu_1"."NEUR_1_2" + -2.302852706742517 * "HL_1_relu_1"."NEUR_1_3" + -1.1582106050950902 AS "NEUR_2_2", -0.30072143806381196 * "HL_1_relu_1"."NEUR_1_1" + -0.8273497873273354 * "HL_1_relu_1"."NEUR_1_2" + -0.30104790933739217 * "HL_1_relu_1"."NEUR_1_3" + -0.010394282503777497 AS "NEUR_2_3", -0.34133329683798025 * "HL_1_relu_1"."NEUR_1_1" + -0.5189026123452256 * "HL_1_relu_1"."NEUR_1_2" + -0.1223304090063084 * "HL_1_relu_1"."NEUR_1_3" + -0.7406283496068888 AS "NEUR_2_4", -0.10434996664616482 * "HL_1_relu_1"."NEUR_1_1" + 11.021826128495794 * "HL_1_relu_1"."NEUR_1_2" + 8.063597320201694 * "HL_1_relu_1"."NEUR_1_3" + 7.569323532804737 AS "NEUR_2_5" 
FROM "TMP_20221018190220_XQ4GUCO_HL_1_relu_1" AS "HL_1_relu_1"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", greatest("HL_BA_2"."NEUR_2_1", 0) AS "NEUR_2_1", greatest("HL_BA_2"."NEUR_2_2", 0) AS "NEUR_2_2", greatest("HL_BA_2"."NEUR_2_3", 0) AS "NEUR_2_3", greatest("HL_BA_2"."NEUR_2_4", 0) AS "NEUR_2_4", greatest("HL_BA_2"."NEUR_2_5", 0) AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", 14.997068796276693 * "HL_2_relu"."NEUR_2_1" + 1.5085114899574776 * "HL_2_relu"."NEUR_2_2" + -0.718399514573431 * "HL_2_relu"."NEUR_2_3" + 0.6829635662045508 * "HL_2_relu"."NEUR_2_4" + 2.351240168225551 * "HL_2_relu"."NEUR_2_5" + 55.061617893955386 AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_BA")
 INSERT INTO "TMP_20221018190220_4B2QYHW_OL_identity_1" ("KEY", "NEUR_3_1") SELECT "T"."KEY", "T"."NEUR_3_1" 
FROM (SELECT "OL_identity_1"."KEY" AS "KEY", "OL_identity_1"."NEUR_3_1" AS "NEUR_3_1" 
FROM (SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_identity") AS "OL_identity_1") AS "T"

-- Code For temporary table TMP_20221018190220_4B2QYHW_OL_identity_1 part 3. Create Index 

CREATE INDEX "ix_TMP_20221018190220_4B2QYHW_OL_identity_1_KEY" ON "TMP_20221018190220_4B2QYHW_OL_identity_1" ("KEY")

-- Model deployment code

SELECT "OL_identity_1"."KEY" AS "KEY", "OL_identity_1"."NEUR_3_1" AS "Estimator" 
FROM "TMP_20221018190220_4B2QYHW_OL_identity_1" AS "OL_identity_1"