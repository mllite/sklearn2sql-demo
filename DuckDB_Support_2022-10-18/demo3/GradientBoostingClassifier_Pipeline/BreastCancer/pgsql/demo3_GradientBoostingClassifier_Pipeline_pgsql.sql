-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : GradientBoostingClassifier_Pipeline
-- Dataset : BreastCancer
-- Database : pgsql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018185050_ADC7UYT_ADS_imp_1_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185050_ADC7UYT_ADS_imp_1_OUT" (
	"KEY" BIGINT NOT NULL, 
	imputer_output_2 FLOAT, 
	imputer_output_3 FLOAT, 
	imputer_output_4 FLOAT, 
	imputer_output_5 FLOAT, 
	imputer_output_6 FLOAT, 
	imputer_output_7 FLOAT, 
	imputer_output_8 FLOAT, 
	imputer_output_9 FLOAT, 
	imputer_output_10 FLOAT, 
	imputer_output_11 FLOAT, 
	imputer_output_12 FLOAT, 
	imputer_output_13 FLOAT, 
	imputer_output_14 FLOAT, 
	imputer_output_15 FLOAT, 
	imputer_output_16 FLOAT, 
	imputer_output_17 FLOAT, 
	imputer_output_18 FLOAT, 
	imputer_output_19 FLOAT, 
	imputer_output_20 FLOAT, 
	imputer_output_21 FLOAT, 
	imputer_output_22 FLOAT, 
	imputer_output_23 FLOAT, 
	imputer_output_24 FLOAT, 
	imputer_output_25 FLOAT, 
	imputer_output_26 FLOAT, 
	imputer_output_27 FLOAT, 
	imputer_output_28 FLOAT, 
	imputer_output_29 FLOAT, 
	imputer_output_30 FLOAT, 
	imputer_output_31 FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185050_ADC7UYT_ADS_imp_1_OUT part 2. Populate

INSERT INTO "TMP_20221018185050_ADC7UYT_ADS_imp_1_OUT" ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5, imputer_output_6, imputer_output_7, imputer_output_8, imputer_output_9, imputer_output_10, imputer_output_11, imputer_output_12, imputer_output_13, imputer_output_14, imputer_output_15, imputer_output_16, imputer_output_17, imputer_output_18, imputer_output_19, imputer_output_20, imputer_output_21, imputer_output_22, imputer_output_23, imputer_output_24, imputer_output_25, imputer_output_26, imputer_output_27, imputer_output_28, imputer_output_29, imputer_output_30, imputer_output_31) SELECT "T"."KEY", "T".imputer_output_2, "T".imputer_output_3, "T".imputer_output_4, "T".imputer_output_5, "T".imputer_output_6, "T".imputer_output_7, "T".imputer_output_8, "T".imputer_output_9, "T".imputer_output_10, "T".imputer_output_11, "T".imputer_output_12, "T".imputer_output_13, "T".imputer_output_14, "T".imputer_output_15, "T".imputer_output_16, "T".imputer_output_17, "T".imputer_output_18, "T".imputer_output_19, "T".imputer_output_20, "T".imputer_output_21, "T".imputer_output_22, "T".imputer_output_23, "T".imputer_output_24, "T".imputer_output_25, "T".imputer_output_26, "T".imputer_output_27, "T".imputer_output_28, "T".imputer_output_29, "T".imputer_output_30, "T".imputer_output_31 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".imputer_output_2 AS imputer_output_2, "ADS_imp_1_OUT".imputer_output_3 AS imputer_output_3, "ADS_imp_1_OUT".imputer_output_4 AS imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 AS imputer_output_5, "ADS_imp_1_OUT".imputer_output_6 AS imputer_output_6, "ADS_imp_1_OUT".imputer_output_7 AS imputer_output_7, "ADS_imp_1_OUT".imputer_output_8 AS imputer_output_8, "ADS_imp_1_OUT".imputer_output_9 AS imputer_output_9, "ADS_imp_1_OUT".imputer_output_10 AS imputer_output_10, "ADS_imp_1_OUT".imputer_output_11 AS imputer_output_11, "ADS_imp_1_OUT".imputer_output_12 AS imputer_output_12, "ADS_imp_1_OUT".imputer_output_13 AS imputer_output_13, "ADS_imp_1_OUT".imputer_output_14 AS imputer_output_14, "ADS_imp_1_OUT".imputer_output_15 AS imputer_output_15, "ADS_imp_1_OUT".imputer_output_16 AS imputer_output_16, "ADS_imp_1_OUT".imputer_output_17 AS imputer_output_17, "ADS_imp_1_OUT".imputer_output_18 AS imputer_output_18, "ADS_imp_1_OUT".imputer_output_19 AS imputer_output_19, "ADS_imp_1_OUT".imputer_output_20 AS imputer_output_20, "ADS_imp_1_OUT".imputer_output_21 AS imputer_output_21, "ADS_imp_1_OUT".imputer_output_22 AS imputer_output_22, "ADS_imp_1_OUT".imputer_output_23 AS imputer_output_23, "ADS_imp_1_OUT".imputer_output_24 AS imputer_output_24, "ADS_imp_1_OUT".imputer_output_25 AS imputer_output_25, "ADS_imp_1_OUT".imputer_output_26 AS imputer_output_26, "ADS_imp_1_OUT".imputer_output_27 AS imputer_output_27, "ADS_imp_1_OUT".imputer_output_28 AS imputer_output_28, "ADS_imp_1_OUT".imputer_output_29 AS imputer_output_29, "ADS_imp_1_OUT".imputer_output_30 AS imputer_output_30, "ADS_imp_1_OUT".imputer_output_31 AS imputer_output_31 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 14.077712087912083 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 19.03905494505495 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 91.66178021978023 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 650.9676923076925 ELSE "ADS"."Feature_3" END AS imputer_output_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.09642184615384615 ELSE "ADS"."Feature_4" END AS imputer_output_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.10441613186813191 ELSE "ADS"."Feature_5" END AS imputer_output_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.08826232681318694 ELSE "ADS"."Feature_6" END AS imputer_output_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.048516399999999966 ELSE "ADS"."Feature_7" END AS imputer_output_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.1815885714285715 ELSE "ADS"."Feature_8" END AS imputer_output_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.06294030769230768 ELSE "ADS"."Feature_9" END AS imputer_output_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.4099173626373627 ELSE "ADS"."Feature_10" END AS imputer_output_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 1.2170694505494501 ELSE "ADS"."Feature_11" END AS imputer_output_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 2.90524901098901 ELSE "ADS"."Feature_12" END AS imputer_output_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 40.87988571428572 ELSE "ADS"."Feature_13" END AS imputer_output_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.007055971428571433 ELSE "ADS"."Feature_14" END AS imputer_output_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.025567830769230776 ELSE "ADS"."Feature_15" END AS imputer_output_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.03199925626373623 ELSE "ADS"."Feature_16" END AS imputer_output_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.011972369230769237 ELSE "ADS"."Feature_17" END AS imputer_output_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.020896200000000014 ELSE "ADS"."Feature_18" END AS imputer_output_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 0.0038465518681318647 ELSE "ADS"."Feature_19" END AS imputer_output_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 16.17776483516484 ELSE "ADS"."Feature_20" END AS imputer_output_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 25.26505494505494 ELSE "ADS"."Feature_21" END AS imputer_output_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 106.68156043956041 ELSE "ADS"."Feature_22" END AS imputer_output_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 870.8639560439567 ELSE "ADS"."Feature_23" END AS imputer_output_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.1318275604395605 ELSE "ADS"."Feature_24" END AS imputer_output_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.24991806593406582 ELSE "ADS"."Feature_25" END AS imputer_output_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.2654615934065932 ELSE "ADS"."Feature_26" END AS imputer_output_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.11348798021978022 ELSE "ADS"."Feature_27" END AS imputer_output_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.2897881318681319 ELSE "ADS"."Feature_28" END AS imputer_output_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.08364145054945049 ELSE "ADS"."Feature_29" END AS imputer_output_31 
FROM "BreastCancer" AS "ADS") AS "ADS_imp_1_OUT") AS "T"

-- Code For temporary table TMP_20221018185050_ADC7UYT_ADS_imp_1_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185050_ADC7UYT_ADS_imp_1_OUT_KEY" ON "TMP_20221018185050_ADC7UYT_ADS_imp_1_OUT" ("KEY")

-- Code For temporary table TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT" (
	"KEY" BIGINT NOT NULL, 
	scaler_output_2 FLOAT, 
	scaler_output_3 FLOAT, 
	scaler_output_4 FLOAT, 
	scaler_output_5 FLOAT, 
	scaler_output_6 FLOAT, 
	scaler_output_7 FLOAT, 
	scaler_output_8 FLOAT, 
	scaler_output_9 FLOAT, 
	scaler_output_10 FLOAT, 
	scaler_output_11 FLOAT, 
	scaler_output_12 FLOAT, 
	scaler_output_13 FLOAT, 
	scaler_output_14 FLOAT, 
	scaler_output_15 FLOAT, 
	scaler_output_16 FLOAT, 
	scaler_output_17 FLOAT, 
	scaler_output_18 FLOAT, 
	scaler_output_19 FLOAT, 
	scaler_output_20 FLOAT, 
	scaler_output_21 FLOAT, 
	scaler_output_22 FLOAT, 
	scaler_output_23 FLOAT, 
	scaler_output_24 FLOAT, 
	scaler_output_25 FLOAT, 
	scaler_output_26 FLOAT, 
	scaler_output_27 FLOAT, 
	scaler_output_28 FLOAT, 
	scaler_output_29 FLOAT, 
	scaler_output_30 FLOAT, 
	scaler_output_31 FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT part 2. Populate

INSERT INTO "TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT" ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11, scaler_output_12, scaler_output_13, scaler_output_14, scaler_output_15, scaler_output_16, scaler_output_17, scaler_output_18, scaler_output_19, scaler_output_20, scaler_output_21, scaler_output_22, scaler_output_23, scaler_output_24, scaler_output_25, scaler_output_26, scaler_output_27, scaler_output_28, scaler_output_29, scaler_output_30, scaler_output_31) SELECT "T"."KEY", "T".scaler_output_2, "T".scaler_output_3, "T".scaler_output_4, "T".scaler_output_5, "T".scaler_output_6, "T".scaler_output_7, "T".scaler_output_8, "T".scaler_output_9, "T".scaler_output_10, "T".scaler_output_11, "T".scaler_output_12, "T".scaler_output_13, "T".scaler_output_14, "T".scaler_output_15, "T".scaler_output_16, "T".scaler_output_17, "T".scaler_output_18, "T".scaler_output_19, "T".scaler_output_20, "T".scaler_output_21, "T".scaler_output_22, "T".scaler_output_23, "T".scaler_output_24, "T".scaler_output_25, "T".scaler_output_26, "T".scaler_output_27, "T".scaler_output_28, "T".scaler_output_29, "T".scaler_output_30, "T".scaler_output_31 
FROM (SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", "ADS_sca_2_OUT".scaler_output_2 AS scaler_output_2, "ADS_sca_2_OUT".scaler_output_3 AS scaler_output_3, "ADS_sca_2_OUT".scaler_output_4 AS scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 AS scaler_output_5, "ADS_sca_2_OUT".scaler_output_6 AS scaler_output_6, "ADS_sca_2_OUT".scaler_output_7 AS scaler_output_7, "ADS_sca_2_OUT".scaler_output_8 AS scaler_output_8, "ADS_sca_2_OUT".scaler_output_9 AS scaler_output_9, "ADS_sca_2_OUT".scaler_output_10 AS scaler_output_10, "ADS_sca_2_OUT".scaler_output_11 AS scaler_output_11, "ADS_sca_2_OUT".scaler_output_12 AS scaler_output_12, "ADS_sca_2_OUT".scaler_output_13 AS scaler_output_13, "ADS_sca_2_OUT".scaler_output_14 AS scaler_output_14, "ADS_sca_2_OUT".scaler_output_15 AS scaler_output_15, "ADS_sca_2_OUT".scaler_output_16 AS scaler_output_16, "ADS_sca_2_OUT".scaler_output_17 AS scaler_output_17, "ADS_sca_2_OUT".scaler_output_18 AS scaler_output_18, "ADS_sca_2_OUT".scaler_output_19 AS scaler_output_19, "ADS_sca_2_OUT".scaler_output_20 AS scaler_output_20, "ADS_sca_2_OUT".scaler_output_21 AS scaler_output_21, "ADS_sca_2_OUT".scaler_output_22 AS scaler_output_22, "ADS_sca_2_OUT".scaler_output_23 AS scaler_output_23, "ADS_sca_2_OUT".scaler_output_24 AS scaler_output_24, "ADS_sca_2_OUT".scaler_output_25 AS scaler_output_25, "ADS_sca_2_OUT".scaler_output_26 AS scaler_output_26, "ADS_sca_2_OUT".scaler_output_27 AS scaler_output_27, "ADS_sca_2_OUT".scaler_output_28 AS scaler_output_28, "ADS_sca_2_OUT".scaler_output_29 AS scaler_output_29, "ADS_sca_2_OUT".scaler_output_30 AS scaler_output_30, "ADS_sca_2_OUT".scaler_output_31 AS scaler_output_31 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS FLOAT) - 14.077712087912083) / 3.5451492987000814 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS FLOAT) - 19.03905494505495) / 4.1622971504218205 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS FLOAT) - 91.66178021978023) / 24.503971943475648 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS FLOAT) - 650.9676923076925) / 355.702823163891 AS scaler_output_5, (CAST("ADS_imp_1_OUT".imputer_output_6 AS FLOAT) - 0.09642184615384615) / 0.014197819663072304 AS scaler_output_6, (CAST("ADS_imp_1_OUT".imputer_output_7 AS FLOAT) - 0.10441613186813191) / 0.05340369466973436 AS scaler_output_7, (CAST("ADS_imp_1_OUT".imputer_output_8 AS FLOAT) - 0.08826232681318694) / 0.08191200162631372 AS scaler_output_8, (CAST("ADS_imp_1_OUT".imputer_output_9 AS FLOAT) - 0.048516399999999966) / 0.039373117396730245 AS scaler_output_9, (CAST("ADS_imp_1_OUT".imputer_output_10 AS FLOAT) - 0.1815885714285715) / 0.02779005832874822 AS scaler_output_10, (CAST("ADS_imp_1_OUT".imputer_output_11 AS FLOAT) - 0.06294030769230768) / 0.007019354586172742 AS scaler_output_11, (CAST("ADS_imp_1_OUT".imputer_output_12 AS FLOAT) - 0.4099173626373627) / 0.29120400836827026 AS scaler_output_12, (CAST("ADS_imp_1_OUT".imputer_output_13 AS FLOAT) - 1.2170694505494501) / 0.5363896396336265 AS scaler_output_13, (CAST("ADS_imp_1_OUT".imputer_output_14 AS FLOAT) - 2.90524901098901) / 2.1424944299808626 AS scaler_output_14, (CAST("ADS_imp_1_OUT".imputer_output_15 AS FLOAT) - 40.87988571428572) / 48.224754479577314 AS scaler_output_15, (CAST("ADS_imp_1_OUT".imputer_output_16 AS FLOAT) - 0.007055971428571433) / 0.002863651656569403 AS scaler_output_16, (CAST("ADS_imp_1_OUT".imputer_output_17 AS FLOAT) - 0.025567830769230776) / 0.017947013631032318 AS scaler_output_17, (CAST("ADS_imp_1_OUT".imputer_output_18 AS FLOAT) - 0.03199925626373623) / 0.03166493672136351 AS scaler_output_18, (CAST("ADS_imp_1_OUT".imputer_output_19 AS FLOAT) - 0.011972369230769237) / 0.006392005589396607 AS scaler_output_19, (CAST("ADS_imp_1_OUT".imputer_output_20 AS FLOAT) - 0.020896200000000014) / 0.008582910079869234 AS scaler_output_20, (CAST("ADS_imp_1_OUT".imputer_output_21 AS FLOAT) - 0.0038465518681318647) / 0.0027436075866190575 AS scaler_output_21, (CAST("ADS_imp_1_OUT".imputer_output_22 AS FLOAT) - 16.17776483516484) / 4.817458816201383 AS scaler_output_22, (CAST("ADS_imp_1_OUT".imputer_output_23 AS FLOAT) - 25.26505494505494) / 5.92332412866667 AS scaler_output_23, (CAST("ADS_imp_1_OUT".imputer_output_24 AS FLOAT) - 106.68156043956041) / 33.70385837605481 AS scaler_output_24, (CAST("ADS_imp_1_OUT".imputer_output_25 AS FLOAT) - 870.8639560439567) / 566.9950559872813 AS scaler_output_25, (CAST("ADS_imp_1_OUT".imputer_output_26 AS FLOAT) - 0.1318275604395605) / 0.02274820752228878 AS scaler_output_26, (CAST("ADS_imp_1_OUT".imputer_output_27 AS FLOAT) - 0.24991806593406582) / 0.15246893644279044 AS scaler_output_27, (CAST("ADS_imp_1_OUT".imputer_output_28 AS FLOAT) - 0.2654615934065932) / 0.20692568678204093 AS scaler_output_28, (CAST("ADS_imp_1_OUT".imputer_output_29 AS FLOAT) - 0.11348798021978022) / 0.06638141278520703 AS scaler_output_29, (CAST("ADS_imp_1_OUT".imputer_output_30 AS FLOAT) - 0.2897881318681319) / 0.06220470665051894 AS scaler_output_30, (CAST("ADS_imp_1_OUT".imputer_output_31 AS FLOAT) - 0.08364145054945049) / 0.01706514580694785 AS scaler_output_31 
FROM "TMP_20221018185050_ADC7UYT_ADS_imp_1_OUT" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "T"

-- Code For temporary table TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT_KEY" ON "TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT" ("KEY")

-- Code For temporary table TMP_20221018185050_1GD74ZH_GB_B0 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185050_1GD74ZH_GB_B0" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185050_1GD74ZH_GB_B0 part 2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_29 <= 0.48149049282073975) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_25 <= 0.15994150936603546) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_12 <= 2.189642369747162) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_26 <= -1.9275171756744385) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_18 <= 3.2733601331710815) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_28 <= -0.2999221310019493) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_23 <= -0.3359692692756653) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.4672680374970977 AS "E" UNION ALL SELECT 4 AS nid, -2.84375 AS "E" UNION ALL SELECT 6 AS nid, 1.542372881355932 AS "E" UNION ALL SELECT 7 AS nid, -2.5513418079096044 AS "E" UNION ALL SELECT 10 AS nid, 1.542372881355932 AS "E" UNION ALL SELECT 11 AS nid, -2.8126427455222975 AS "E" UNION ALL SELECT 13 AS nid, 1.542372881355932 AS "E" UNION ALL SELECT 14 AS nid, 1.542372881355932 AS "E") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."E" AS "E" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"GB_Model_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", -"DT_Output"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output"), 
"GB_Model_0_1" AS 
(SELECT "DT_Output"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output"."E" AS "Score_1" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_29 <= 0.48149049282073975) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_25 <= 0.3300488144159317) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_15 <= 0.16786222159862518) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -1.4659906029701233) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_18 <= 3.2733601331710815) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_28 <= -0.2999221310019493) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.3910810640434235 AS "E" UNION ALL SELECT 4 AS nid, -0.6596363687823121 AS "E" UNION ALL SELECT 6 AS nid, -2.4285605948643654 AS "E" UNION ALL SELECT 7 AS nid, -2.4285605948643654 AS "E" UNION ALL SELECT 10 AS nid, 1.4648507794791157 AS "E" UNION ALL SELECT 11 AS nid, -2.3625649177559 AS "E" UNION ALL SELECT 12 AS nid, 1.4648507794791157 AS "E") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."E" AS "E" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"GB_Model_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", -"DT_Output_1"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_1"), 
"GB_Model_1_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_1"."E" AS "Score_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_29 <= 0.48149049282073975) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_22 <= 0.32013458013534546) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_12 <= 2.189642369747162) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_28 <= -0.3612968176603317) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_18 <= 3.2733601331710815) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_28 <= -0.2999221310019493) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.325752981201139 AS "E" UNION ALL SELECT 4 AS nid, -2.298828759622404 AS "E" UNION ALL SELECT 6 AS nid, -0.41581243138643514 AS "E" UNION ALL SELECT 7 AS nid, -2.1796581996190336 AS "E" UNION ALL SELECT 10 AS nid, 1.4015095712340189 AS "E" UNION ALL SELECT 11 AS nid, -2.0704363544628133 AS "E" UNION ALL SELECT 12 AS nid, 1.4015095712340189 AS "E") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."E" AS "E" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"GB_Model_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", -"DT_Output_2"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_2"), 
"GB_Model_2_1" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_2"."E" AS "Score_1" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_29 <= 0.48149049282073975) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_25 <= 0.15994150936603546) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_15 <= -0.16329550743103027) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_13 <= 0.40815581381320953) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_18 <= 3.2733601331710815) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_28 <= -0.2999221310019493) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.8648066222667694) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.337391257440793 AS "E" UNION ALL SELECT 4 AS nid, 0.5259058848218274 AS "E" UNION ALL SELECT 6 AS nid, -1.964524712944416 AS "E" UNION ALL SELECT 7 AS nid, -0.3250280638871503 AS "E" UNION ALL SELECT 10 AS nid, 1.3490029638835017 AS "E" UNION ALL SELECT 11 AS nid, -1.864903415871084 AS "E" UNION ALL SELECT 13 AS nid, 1.3490029638835017 AS "E" UNION ALL SELECT 14 AS nid, 1.349002963883502 AS "E") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."E" AS "E" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"GB_Model_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", -"DT_Output_3"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_3"), 
"GB_Model_3_1" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_3"."E" AS "Score_1" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_29 <= 0.48149049282073975) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_24 <= 0.45598456263542175) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_15 <= 0.16786222159862518) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_28 <= -0.46350742876529694) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_18 <= 3.2733601331710815) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_28 <= -0.2999221310019493) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.2252582301094506 AS "E" UNION ALL SELECT 4 AS nid, -0.6444012093376688 AS "E" UNION ALL SELECT 6 AS nid, -1.8831833870360208 AS "E" UNION ALL SELECT 7 AS nid, -1.7537720394216378 AS "E" UNION ALL SELECT 10 AS nid, 1.304959846853716 AS "E" UNION ALL SELECT 11 AS nid, -1.7123629964831781 AS "E" UNION ALL SELECT 12 AS nid, 1.304959846853716 AS "E") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."E" AS "E" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"GB_Model_4_0" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", -"DT_Output_4"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_4"), 
"GB_Model_4_1" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_4"."E" AS "Score_1" 
FROM "DT_Output_4")
 INSERT INTO "TMP_20221018185050_1GD74ZH_GB_B0" ("KEY", "Score_0", "Score_1") SELECT "T"."KEY", "T"."Score_0", "T"."Score_1" 
FROM (SELECT "GB_B0"."KEY" AS "KEY", "GB_B0"."Score_0" AS "Score_0", "GB_B0"."Score_1" AS "Score_1" 
FROM (SELECT "GB_esu_0"."KEY" AS "KEY", "GB_esu_0"."Score_0" AS "Score_0", "GB_esu_0"."Score_1" AS "Score_1" 
FROM (SELECT "GB_Model_0_0"."KEY" AS "KEY", "GB_Model_0_0"."Score_0" AS "Score_0", "GB_Model_0_0"."Score_1" AS "Score_1" 
FROM "GB_Model_0_0" UNION ALL SELECT "GB_Model_0_1"."KEY" AS "KEY", "GB_Model_0_1"."Score_0" AS "Score_0", "GB_Model_0_1"."Score_1" AS "Score_1" 
FROM "GB_Model_0_1" UNION ALL SELECT "GB_Model_1_0"."KEY" AS "KEY", "GB_Model_1_0"."Score_0" AS "Score_0", "GB_Model_1_0"."Score_1" AS "Score_1" 
FROM "GB_Model_1_0" UNION ALL SELECT "GB_Model_1_1"."KEY" AS "KEY", "GB_Model_1_1"."Score_0" AS "Score_0", "GB_Model_1_1"."Score_1" AS "Score_1" 
FROM "GB_Model_1_1" UNION ALL SELECT "GB_Model_2_0"."KEY" AS "KEY", "GB_Model_2_0"."Score_0" AS "Score_0", "GB_Model_2_0"."Score_1" AS "Score_1" 
FROM "GB_Model_2_0" UNION ALL SELECT "GB_Model_2_1"."KEY" AS "KEY", "GB_Model_2_1"."Score_0" AS "Score_0", "GB_Model_2_1"."Score_1" AS "Score_1" 
FROM "GB_Model_2_1" UNION ALL SELECT "GB_Model_3_0"."KEY" AS "KEY", "GB_Model_3_0"."Score_0" AS "Score_0", "GB_Model_3_0"."Score_1" AS "Score_1" 
FROM "GB_Model_3_0" UNION ALL SELECT "GB_Model_3_1"."KEY" AS "KEY", "GB_Model_3_1"."Score_0" AS "Score_0", "GB_Model_3_1"."Score_1" AS "Score_1" 
FROM "GB_Model_3_1" UNION ALL SELECT "GB_Model_4_0"."KEY" AS "KEY", "GB_Model_4_0"."Score_0" AS "Score_0", "GB_Model_4_0"."Score_1" AS "Score_1" 
FROM "GB_Model_4_0" UNION ALL SELECT "GB_Model_4_1"."KEY" AS "KEY", "GB_Model_4_1"."Score_0" AS "Score_0", "GB_Model_4_1"."Score_1" AS "Score_1" 
FROM "GB_Model_4_1") AS "GB_esu_0") AS "GB_B0") AS "T"

-- Code For temporary table TMP_20221018185050_MZQOPDI_GB_B1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185050_MZQOPDI_GB_B1" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185050_MZQOPDI_GB_B1 part 2. Populate

WITH "DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_29 <= 0.48149049282073975) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_25 <= 0.15994150936603546) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_29 <= 0.1327482983469963) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_28 <= -0.3612968176603317) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_18 <= 3.2733601331710815) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_28 <= -0.2999221310019493) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3251097798347473) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.2415089447386418 AS "E" UNION ALL SELECT 4 AS nid, 0.30503527183452517 AS "E" UNION ALL SELECT 6 AS nid, -0.2167080980928074 AS "E" UNION ALL SELECT 7 AS nid, -1.7137770178917424 AS "E" UNION ALL SELECT 10 AS nid, 1.2676510643808934 AS "E" UNION ALL SELECT 11 AS nid, -1.5947285027219136 AS "E" UNION ALL SELECT 13 AS nid, 1.2676510643808934 AS "E" UNION ALL SELECT 14 AS nid, 1.2676510643808931 AS "E") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."E" AS "E" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"GB_Model_5_0" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", -"DT_Output_5"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_5"), 
"GB_Model_5_1" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_5"."E" AS "Score_1" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_29 <= 0.48149049282073975) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_25 <= 0.15994150936603546) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_12 <= 2.189642369747162) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_26 <= -1.9275171756744385) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_18 <= 3.2733601331710815) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_28 <= -0.2999221310019493) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.1431754507972833 AS "E" UNION ALL SELECT 4 AS nid, -2.154747136176465 AS "E" UNION ALL SELECT 6 AS nid, 1.3937977212659114 AS "E" UNION ALL SELECT 7 AS nid, -1.4053585903840005 AS "E" UNION ALL SELECT 10 AS nid, 1.2357846827064884 AS "E" UNION ALL SELECT 11 AS nid, -1.5013341803568825 AS "E" UNION ALL SELECT 12 AS nid, 1.2357846827064884 AS "E") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."E" AS "E" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"GB_Model_6_0" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", -"DT_Output_6"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_6"), 
"GB_Model_6_1" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_6"."E" AS "Score_1" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_29 <= 0.48149049282073975) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_24 <= 0.45598456263542175) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_15 <= 0.16786222159862518) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.7014707922935486) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_18 <= 3.2733601331710815) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.029022936709225178) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_30 <= -0.6436511725187302) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.1140638313109361 AS "E" UNION ALL SELECT 4 AS nid, -0.6850547208862369 AS "E" UNION ALL SELECT 6 AS nid, -1.622042151312407 AS "E" UNION ALL SELECT 7 AS nid, -1.4633165699968858 AS "E" UNION ALL SELECT 10 AS nid, -0.6223244208798957 AS "E" UNION ALL SELECT 11 AS nid, -1.458362111766775 AS "E" UNION ALL SELECT 13 AS nid, 1.2083752537625256 AS "E" UNION ALL SELECT 14 AS nid, 1.2083752537625256 AS "E") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."E" AS "E" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"GB_Model_7_0" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", -"DT_Output_7"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_7"), 
"GB_Model_7_1" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_7"."E" AS "Score_1" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_24 <= 0.19191985577344894) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_29 <= 0.3361184895038605) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_15 <= 0.16786222159862518) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_29 <= 0.38507798314094543) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_25 <= -0.10690385475754738) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.8434377312660217) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_13 <= -1.4544826745986938) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.170082852660399 AS "E" UNION ALL SELECT 4 AS nid, -0.7688817876615806 AS "E" UNION ALL SELECT 6 AS nid, -5.312663161823737 AS "E" UNION ALL SELECT 7 AS nid, -0.3499135131559847 AS "E" UNION ALL SELECT 10 AS nid, 1.2604609511249625 AS "E" UNION ALL SELECT 11 AS nid, -1.39616203133061 AS "E" UNION ALL SELECT 13 AS nid, 1.2045413152456894 AS "E" UNION ALL SELECT 14 AS nid, -1.375147552727802 AS "E") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."E" AS "E" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"GB_Model_8_0" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", -"DT_Output_8"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_8"), 
"GB_Model_8_1" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_8"."E" AS "Score_1" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_29 <= 0.48149049282073975) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_24 <= 0.45598456263542175) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_20 <= -1.2304917573928833) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.7014707922935486) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_18 <= 3.2733601331710815) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.029022936709225178) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -1.2313893936130436 AS "E" UNION ALL SELECT 4 AS nid, 1.0404918231271474 AS "E" UNION ALL SELECT 6 AS nid, -1.4609496820265393 AS "E" UNION ALL SELECT 7 AS nid, -1.348935694543427 AS "E" UNION ALL SELECT 10 AS nid, -0.4909139260216936 AS "E" UNION ALL SELECT 11 AS nid, -1.3496117136742996 AS "E" UNION ALL SELECT 12 AS nid, 1.1912333451680777 AS "E") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."E" AS "E" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"GB_Model_9_0" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", -"DT_Output_9"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_9"), 
"GB_Model_9_1" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_9"."E" AS "Score_1" 
FROM "DT_Output_9")
 INSERT INTO "TMP_20221018185050_MZQOPDI_GB_B1" ("KEY", "Score_0", "Score_1") SELECT "T"."KEY", "T"."Score_0", "T"."Score_1" 
FROM (SELECT "GB_B1"."KEY" AS "KEY", "GB_B1"."Score_0" AS "Score_0", "GB_B1"."Score_1" AS "Score_1" 
FROM (SELECT "GB_esu_1"."KEY" AS "KEY", "GB_esu_1"."Score_0" AS "Score_0", "GB_esu_1"."Score_1" AS "Score_1" 
FROM (SELECT "GB_Model_5_0"."KEY" AS "KEY", "GB_Model_5_0"."Score_0" AS "Score_0", "GB_Model_5_0"."Score_1" AS "Score_1" 
FROM "GB_Model_5_0" UNION ALL SELECT "GB_Model_5_1"."KEY" AS "KEY", "GB_Model_5_1"."Score_0" AS "Score_0", "GB_Model_5_1"."Score_1" AS "Score_1" 
FROM "GB_Model_5_1" UNION ALL SELECT "GB_Model_6_0"."KEY" AS "KEY", "GB_Model_6_0"."Score_0" AS "Score_0", "GB_Model_6_0"."Score_1" AS "Score_1" 
FROM "GB_Model_6_0" UNION ALL SELECT "GB_Model_6_1"."KEY" AS "KEY", "GB_Model_6_1"."Score_0" AS "Score_0", "GB_Model_6_1"."Score_1" AS "Score_1" 
FROM "GB_Model_6_1" UNION ALL SELECT "GB_Model_7_0"."KEY" AS "KEY", "GB_Model_7_0"."Score_0" AS "Score_0", "GB_Model_7_0"."Score_1" AS "Score_1" 
FROM "GB_Model_7_0" UNION ALL SELECT "GB_Model_7_1"."KEY" AS "KEY", "GB_Model_7_1"."Score_0" AS "Score_0", "GB_Model_7_1"."Score_1" AS "Score_1" 
FROM "GB_Model_7_1" UNION ALL SELECT "GB_Model_8_0"."KEY" AS "KEY", "GB_Model_8_0"."Score_0" AS "Score_0", "GB_Model_8_0"."Score_1" AS "Score_1" 
FROM "GB_Model_8_0" UNION ALL SELECT "GB_Model_8_1"."KEY" AS "KEY", "GB_Model_8_1"."Score_0" AS "Score_0", "GB_Model_8_1"."Score_1" AS "Score_1" 
FROM "GB_Model_8_1" UNION ALL SELECT "GB_Model_9_0"."KEY" AS "KEY", "GB_Model_9_0"."Score_0" AS "Score_0", "GB_Model_9_0"."Score_1" AS "Score_1" 
FROM "GB_Model_9_0" UNION ALL SELECT "GB_Model_9_1"."KEY" AS "KEY", "GB_Model_9_1"."Score_0" AS "Score_0", "GB_Model_9_1"."Score_1" AS "Score_1" 
FROM "GB_Model_9_1") AS "GB_esu_1") AS "GB_B1") AS "T"

-- Code For temporary table TMP_20221018185050_VJB4Z5F_GB_B2 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185050_VJB4Z5F_GB_B2" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185050_VJB4Z5F_GB_B2 part 2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_24 <= 0.19191985577344894) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_29 <= 0.3361184895038605) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_15 <= -0.04717257060110569) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_29 <= 0.38507798314094543) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_25 <= -0.10690385475754738) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 1.6175634860992432) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_24 <= 0.19488687068223953) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.1573788010278787 AS "E" UNION ALL SELECT 4 AS nid, -0.24332334325649765 AS "E" UNION ALL SELECT 6 AS nid, -3.813244609114664 AS "E" UNION ALL SELECT 7 AS nid, -0.2831153388677476 AS "E" UNION ALL SELECT 10 AS nid, 1.2081843772263323 AS "E" UNION ALL SELECT 11 AS nid, -1.3010408359315533 AS "E" UNION ALL SELECT 13 AS nid, -5.5232853654050516 AS "E" UNION ALL SELECT 14 AS nid, -1.228061813737884 AS "E") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."E" AS "E" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"GB_Model_10_0" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", -"DT_Output_10"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_10"), 
"GB_Model_10_1" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_10"."E" AS "Score_1" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_29 <= 0.48149049282073975) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_24 <= 0.45598456263542175) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_15 <= 0.16786222159862518) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_18 <= -0.5891139805316925) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_18 <= 3.2733601331710815) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_28 <= -0.2999221310019493) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_26 <= -1.3158206343650818) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.0130050080939823 AS "E" UNION ALL SELECT 4 AS nid, -0.6085975537753274 AS "E" UNION ALL SELECT 6 AS nid, -1.35226641067665 AS "E" UNION ALL SELECT 7 AS nid, -1.2697380467331816 AS "E" UNION ALL SELECT 10 AS nid, 1.248133592056964 AS "E" UNION ALL SELECT 11 AS nid, -1.2355331057844585 AS "E" UNION ALL SELECT 13 AS nid, 1.174632293648151 AS "E" UNION ALL SELECT 14 AS nid, 1.1746322936481512 AS "E") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."E" AS "E" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"GB_Model_11_0" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", -"DT_Output_11"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_11"), 
"GB_Model_11_1" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_11"."E" AS "Score_1" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.010250649007502943) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_15 <= 0.1621597558259964) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_22 <= 0.13538987934589386) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_16 <= -0.6887958645820618) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_28 <= -0.19650336354970932) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6667580306529999) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.8682837188243866) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.1129323613426614 AS "E" UNION ALL SELECT 4 AS nid, -0.383312018386236 AS "E" UNION ALL SELECT 6 AS nid, 1.3964432581512807 AS "E" UNION ALL SELECT 7 AS nid, -2.512518864432701 AS "E" UNION ALL SELECT 10 AS nid, 1.175433734908052 AS "E" UNION ALL SELECT 11 AS nid, -1.2330697012930862 AS "E" UNION ALL SELECT 13 AS nid, 0.13615090246014905 AS "E" UNION ALL SELECT 14 AS nid, -1.2503365564467124 AS "E") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."E" AS "E" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"GB_Model_12_0" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", -"DT_Output_12"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_12"), 
"GB_Model_12_1" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_12"."E" AS "Score_1" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_29 <= 0.26380908489227295) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_25 <= 0.3300488144159317) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_16 <= -1.4750297665596008) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.7014707922935486) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_22 <= -0.1479545310139656) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_29 <= 1.0132658779621124) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_23 <= -0.606087863445282) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -1.728247179407999 AS "E" UNION ALL SELECT 4 AS nid, 1.0122933091300323 AS "E" UNION ALL SELECT 6 AS nid, -1.2961392831818677 AS "E" UNION ALL SELECT 7 AS nid, -1.2121769656039518 AS "E" UNION ALL SELECT 10 AS nid, 1.1616683622263535 AS "E" UNION ALL SELECT 11 AS nid, -1.2534007619531753 AS "E" UNION ALL SELECT 13 AS nid, -0.2370429284357813 AS "E" UNION ALL SELECT 14 AS nid, -1.2514709178702146 AS "E") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."E" AS "E" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"GB_Model_13_0" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", -"DT_Output_13"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_13"), 
"GB_Model_13_1" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_13"."E" AS "Score_1" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.010250649007502943) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_15 <= 0.1621597558259964) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_25 <= 0.3300488144159317) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_21 <= 0.1712883859872818) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_25 <= -0.15293600410223007) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_23 <= 0.08102630451321602) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.05291935708373785) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.0153133467649749 AS "E" UNION ALL SELECT 4 AS nid, -1.2320153919118215 AS "E" UNION ALL SELECT 6 AS nid, -2.340648965439501 AS "E" UNION ALL SELECT 7 AS nid, 1.311580978429844 AS "E" UNION ALL SELECT 10 AS nid, 1.4370603152604644 AS "E" UNION ALL SELECT 11 AS nid, -1.0100591137193178 AS "E" UNION ALL SELECT 13 AS nid, -6.67333385029474 AS "E" UNION ALL SELECT 14 AS nid, -1.1537588917855888 AS "E") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."E" AS "E" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"GB_Model_14_0" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", -"DT_Output_14"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_14"), 
"GB_Model_14_1" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_14"."E" AS "Score_1" 
FROM "DT_Output_14")
 INSERT INTO "TMP_20221018185050_VJB4Z5F_GB_B2" ("KEY", "Score_0", "Score_1") SELECT "T"."KEY", "T"."Score_0", "T"."Score_1" 
FROM (SELECT "GB_B2"."KEY" AS "KEY", "GB_B2"."Score_0" AS "Score_0", "GB_B2"."Score_1" AS "Score_1" 
FROM (SELECT "GB_esu_2"."KEY" AS "KEY", "GB_esu_2"."Score_0" AS "Score_0", "GB_esu_2"."Score_1" AS "Score_1" 
FROM (SELECT "GB_Model_10_0"."KEY" AS "KEY", "GB_Model_10_0"."Score_0" AS "Score_0", "GB_Model_10_0"."Score_1" AS "Score_1" 
FROM "GB_Model_10_0" UNION ALL SELECT "GB_Model_10_1"."KEY" AS "KEY", "GB_Model_10_1"."Score_0" AS "Score_0", "GB_Model_10_1"."Score_1" AS "Score_1" 
FROM "GB_Model_10_1" UNION ALL SELECT "GB_Model_11_0"."KEY" AS "KEY", "GB_Model_11_0"."Score_0" AS "Score_0", "GB_Model_11_0"."Score_1" AS "Score_1" 
FROM "GB_Model_11_0" UNION ALL SELECT "GB_Model_11_1"."KEY" AS "KEY", "GB_Model_11_1"."Score_0" AS "Score_0", "GB_Model_11_1"."Score_1" AS "Score_1" 
FROM "GB_Model_11_1" UNION ALL SELECT "GB_Model_12_0"."KEY" AS "KEY", "GB_Model_12_0"."Score_0" AS "Score_0", "GB_Model_12_0"."Score_1" AS "Score_1" 
FROM "GB_Model_12_0" UNION ALL SELECT "GB_Model_12_1"."KEY" AS "KEY", "GB_Model_12_1"."Score_0" AS "Score_0", "GB_Model_12_1"."Score_1" AS "Score_1" 
FROM "GB_Model_12_1" UNION ALL SELECT "GB_Model_13_0"."KEY" AS "KEY", "GB_Model_13_0"."Score_0" AS "Score_0", "GB_Model_13_0"."Score_1" AS "Score_1" 
FROM "GB_Model_13_0" UNION ALL SELECT "GB_Model_13_1"."KEY" AS "KEY", "GB_Model_13_1"."Score_0" AS "Score_0", "GB_Model_13_1"."Score_1" AS "Score_1" 
FROM "GB_Model_13_1" UNION ALL SELECT "GB_Model_14_0"."KEY" AS "KEY", "GB_Model_14_0"."Score_0" AS "Score_0", "GB_Model_14_0"."Score_1" AS "Score_1" 
FROM "GB_Model_14_0" UNION ALL SELECT "GB_Model_14_1"."KEY" AS "KEY", "GB_Model_14_1"."Score_0" AS "Score_0", "GB_Model_14_1"."Score_1" AS "Score_1" 
FROM "GB_Model_14_1") AS "GB_esu_2") AS "GB_B2") AS "T"

-- Code For temporary table TMP_20221018185050_9TGQW4A_GB_B3 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185050_9TGQW4A_GB_B3" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185050_9TGQW4A_GB_B3 part 2. Populate

WITH "DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_24 <= 0.19191985577344894) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_29 <= 0.7051976919174194) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_29 <= 0.6780816614627838) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_17 <= 3.050767660140991) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_24 <= 0.19488687068223953) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.0398393664509058) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20221018185050_0HTJSAG_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 0.8646324817801285 AS "E" UNION ALL SELECT 4 AS nid, 3.5719361261467393 AS "E" UNION ALL SELECT 6 AS nid, -1.2053316906762461 AS "E" UNION ALL SELECT 7 AS nid, 1.111745945147061 AS "E" UNION ALL SELECT 9 AS nid, -3.708144152948965 AS "E" UNION ALL SELECT 11 AS nid, -0.010190020632271308 AS "E" UNION ALL SELECT 12 AS nid, -1.1463063231826622 AS "E") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."E" AS "E" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"GB_Model_15_0" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", -"DT_Output_15"."E" AS "Score_0", 0.0 AS "Score_1" 
FROM "DT_Output_15"), 
"GB_Model_15_1" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_15"."E" AS "Score_1" 
FROM "DT_Output_15")
 INSERT INTO "TMP_20221018185050_9TGQW4A_GB_B3" ("KEY", "Score_0", "Score_1") SELECT "T"."KEY", "T"."Score_0", "T"."Score_1" 
FROM (SELECT "GB_B3"."KEY" AS "KEY", "GB_B3"."Score_0" AS "Score_0", "GB_B3"."Score_1" AS "Score_1" 
FROM (SELECT "GB_esu_3"."KEY" AS "KEY", "GB_esu_3"."Score_0" AS "Score_0", "GB_esu_3"."Score_1" AS "Score_1" 
FROM (SELECT "GB_Model_15_0"."KEY" AS "KEY", "GB_Model_15_0"."Score_0" AS "Score_0", "GB_Model_15_0"."Score_1" AS "Score_1" 
FROM "GB_Model_15_0" UNION ALL SELECT "GB_Model_15_1"."KEY" AS "KEY", "GB_Model_15_1"."Score_0" AS "Score_0", "GB_Model_15_1"."Score_1" AS "Score_1" 
FROM "GB_Model_15_1") AS "GB_esu_3") AS "GB_B3") AS "T"

-- Code For temporary table TMP_20221018185050_2LHBEIC_GB_sum part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185050_2LHBEIC_GB_sum" (
	"KEY" BIGINT NOT NULL, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185050_2LHBEIC_GB_sum part 2. Populate

WITH "GB_Union" AS 
(SELECT "GB_EnsembleUnion"."KEY" AS "KEY", "GB_EnsembleUnion"."Score_0" AS "Score_0", "GB_EnsembleUnion"."Score_1" AS "Score_1" 
FROM (SELECT "GB_B0"."KEY" AS "KEY", "GB_B0"."Score_0" AS "Score_0", "GB_B0"."Score_1" AS "Score_1" 
FROM "TMP_20221018185050_1GD74ZH_GB_B0" AS "GB_B0" UNION ALL SELECT "GB_B1"."KEY" AS "KEY", "GB_B1"."Score_0" AS "Score_0", "GB_B1"."Score_1" AS "Score_1" 
FROM "TMP_20221018185050_MZQOPDI_GB_B1" AS "GB_B1" UNION ALL SELECT "GB_B2"."KEY" AS "KEY", "GB_B2"."Score_0" AS "Score_0", "GB_B2"."Score_1" AS "Score_1" 
FROM "TMP_20221018185050_VJB4Z5F_GB_B2" AS "GB_B2" UNION ALL SELECT "GB_B3"."KEY" AS "KEY", "GB_B3"."Score_0" AS "Score_0", "GB_B3"."Score_1" AS "Score_1" 
FROM "TMP_20221018185050_9TGQW4A_GB_B3" AS "GB_B3") AS "GB_EnsembleUnion")
 INSERT INTO "TMP_20221018185050_2LHBEIC_GB_sum" ("KEY", "Score_0", "Score_1") SELECT "T"."KEY", "T"."Score_0", "T"."Score_1" 
FROM (SELECT "GB_sum"."KEY" AS "KEY", "GB_sum"."Score_0" AS "Score_0", "GB_sum"."Score_1" AS "Score_1" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS FLOAT) AS "Score_0", CAST("T"."Score_1" AS FLOAT) AS "Score_1" 
FROM (SELECT "GB_Union"."KEY" AS "KEY", sum("GB_Union"."Score_0") AS "Score_0", sum("GB_Union"."Score_1") AS "Score_1" 
FROM "GB_Union" GROUP BY "GB_Union"."KEY") AS "T") AS "GB_sum") AS "T"

-- Code For temporary table TMP_20221018185050_2LHBEIC_GB_sum part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185050_2LHBEIC_GB_sum_KEY" ON "TMP_20221018185050_2LHBEIC_GB_sum" ("KEY")

-- Model deployment code

WITH orig_cte AS 
(SELECT "GB_sum"."KEY" AS "KEY", -(0.6483516483516484 + 0.1 * "GB_sum"."Score_1") AS "Score_0", 0.6483516483516484 + 0.1 * "GB_sum"."Score_1" AS "Score_1", 1.0 - 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(0.6483516483516484 + 0.1 * "GB_sum"."Score_1"))))) AS "Proba_0", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -(0.6483516483516484 + 0.1 * "GB_sum"."Score_1"))))) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "TMP_20221018185050_2LHBEIC_GB_sum" AS "GB_sum"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", max(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE '-Infinity'::float8 END AS "LogProba_1", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte