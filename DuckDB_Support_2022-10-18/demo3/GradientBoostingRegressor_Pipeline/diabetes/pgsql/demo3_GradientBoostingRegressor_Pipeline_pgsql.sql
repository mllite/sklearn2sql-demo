-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : GradientBoostingRegressor_Pipeline
-- Dataset : diabetes
-- Database : pgsql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018185806_EMSD13Y_ADS_imp_1_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185806_EMSD13Y_ADS_imp_1_OUT" (
	"KEY" BIGINT NOT NULL, 
	imputer_output_2 FLOAT, 
	imputer_output_3 FLOAT, 
	imputer_output_4 FLOAT, 
	imputer_output_5 FLOAT, 
	imputer_output_6 FLOAT, 
	imputer_output_7 FLOAT, 
	imputer_output_8 FLOAT, 
	imputer_output_9 FLOAT, 
	imputer_output_10 FLOAT, 
	imputer_output_11 FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185806_EMSD13Y_ADS_imp_1_OUT part 2. Populate

INSERT INTO "TMP_20221018185806_EMSD13Y_ADS_imp_1_OUT" ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5, imputer_output_6, imputer_output_7, imputer_output_8, imputer_output_9, imputer_output_10, imputer_output_11) SELECT "T"."KEY", "T".imputer_output_2, "T".imputer_output_3, "T".imputer_output_4, "T".imputer_output_5, "T".imputer_output_6, "T".imputer_output_7, "T".imputer_output_8, "T".imputer_output_9, "T".imputer_output_10, "T".imputer_output_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".imputer_output_2 AS imputer_output_2, "ADS_imp_1_OUT".imputer_output_3 AS imputer_output_3, "ADS_imp_1_OUT".imputer_output_4 AS imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 AS imputer_output_5, "ADS_imp_1_OUT".imputer_output_6 AS imputer_output_6, "ADS_imp_1_OUT".imputer_output_7 AS imputer_output_7, "ADS_imp_1_OUT".imputer_output_8 AS imputer_output_8, "ADS_imp_1_OUT".imputer_output_9 AS imputer_output_9, "ADS_imp_1_OUT".imputer_output_10 AS imputer_output_10, "ADS_imp_1_OUT".imputer_output_11 AS imputer_output_11 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0002686932066656524 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.0007239580580638301 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.0007280719825591873 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.0010135851598460544 ELSE "ADS"."Feature_3" END AS imputer_output_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0009763580732882766 ELSE "ADS"."Feature_4" END AS imputer_output_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.0017643808242336471 ELSE "ADS"."Feature_5" END AS imputer_output_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.0016512815450559991 ELSE "ADS"."Feature_6" END AS imputer_output_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.001390550198338443 ELSE "ADS"."Feature_7" END AS imputer_output_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.0012727412281983582 ELSE "ADS"."Feature_8" END AS imputer_output_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.0010344250056819138 ELSE "ADS"."Feature_9" END AS imputer_output_11 
FROM diabetes AS "ADS") AS "ADS_imp_1_OUT") AS "T"

-- Code For temporary table TMP_20221018185806_EMSD13Y_ADS_imp_1_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185806_EMSD13Y_ADS_imp_1_OUT_KEY" ON "TMP_20221018185806_EMSD13Y_ADS_imp_1_OUT" ("KEY")

-- Code For temporary table TMP_20221018185806_DERCK0D_ADS_sca_2_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185806_DERCK0D_ADS_sca_2_OUT" (
	"KEY" BIGINT NOT NULL, 
	scaler_output_2 FLOAT, 
	scaler_output_3 FLOAT, 
	scaler_output_4 FLOAT, 
	scaler_output_5 FLOAT, 
	scaler_output_6 FLOAT, 
	scaler_output_7 FLOAT, 
	scaler_output_8 FLOAT, 
	scaler_output_9 FLOAT, 
	scaler_output_10 FLOAT, 
	scaler_output_11 FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185806_DERCK0D_ADS_sca_2_OUT part 2. Populate

INSERT INTO "TMP_20221018185806_DERCK0D_ADS_sca_2_OUT" ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11) SELECT "T"."KEY", "T".scaler_output_2, "T".scaler_output_3, "T".scaler_output_4, "T".scaler_output_5, "T".scaler_output_6, "T".scaler_output_7, "T".scaler_output_8, "T".scaler_output_9, "T".scaler_output_10, "T".scaler_output_11 
FROM (SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", "ADS_sca_2_OUT".scaler_output_2 AS scaler_output_2, "ADS_sca_2_OUT".scaler_output_3 AS scaler_output_3, "ADS_sca_2_OUT".scaler_output_4 AS scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 AS scaler_output_5, "ADS_sca_2_OUT".scaler_output_6 AS scaler_output_6, "ADS_sca_2_OUT".scaler_output_7 AS scaler_output_7, "ADS_sca_2_OUT".scaler_output_8 AS scaler_output_8, "ADS_sca_2_OUT".scaler_output_9 AS scaler_output_9, "ADS_sca_2_OUT".scaler_output_10 AS scaler_output_10, "ADS_sca_2_OUT".scaler_output_11 AS scaler_output_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS FLOAT) - 0.0002686932066656524) / 0.047242095836536116 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS FLOAT) - 0.0007239580580638301) / 0.047605576685039 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS FLOAT) - 0.0007280719825591873) / 0.04693591143936429 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS FLOAT) - 0.0010135851598460544) / 0.04833530116894073 AS scaler_output_5, (CAST("ADS_imp_1_OUT".imputer_output_6 AS FLOAT) - 0.0009763580732882766) / 0.04805076200970219 AS scaler_output_6, (CAST("ADS_imp_1_OUT".imputer_output_7 AS FLOAT) - 0.0017643808242336471) / 0.048060808731544384 AS scaler_output_7, (CAST("ADS_imp_1_OUT".imputer_output_8 AS FLOAT) - -0.0016512815450559991) / 0.04620240378042887 AS scaler_output_8, (CAST("ADS_imp_1_OUT".imputer_output_9 AS FLOAT) - 0.001390550198338443) / 0.047363093040532836 AS scaler_output_9, (CAST("ADS_imp_1_OUT".imputer_output_10 AS FLOAT) - 0.0012727412281983582) / 0.045892845781363927 AS scaler_output_10, (CAST("ADS_imp_1_OUT".imputer_output_11 AS FLOAT) - 0.0010344250056819138) / 0.04776158519570336 AS scaler_output_11 
FROM "TMP_20221018185806_EMSD13Y_ADS_imp_1_OUT" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "T"

-- Code For temporary table TMP_20221018185806_DERCK0D_ADS_sca_2_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185806_DERCK0D_ADS_sca_2_OUT_KEY" ON "TMP_20221018185806_DERCK0D_ADS_sca_2_OUT" ("KEY")

-- Code For temporary table TMP_20221018185806_P50FF7Z_GB_B0 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185806_P50FF7Z_GB_B0" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185806_P50FF7Z_GB_B0 part 2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.01226147881243378) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.11634615436196327) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 2.307655453681946) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.7755948901176453) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.1726664304733276) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7520720660686493) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.43114182353019714) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185806_DERCK0D_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -56.26206018803645 AS "E" UNION ALL SELECT 4 AS nid, 98.92634560906515 AS "E" UNION ALL SELECT 6 AS nid, 147.92634560906515 AS "E" UNION ALL SELECT 7 AS nid, 4.5749942577138 AS "E" UNION ALL SELECT 10 AS nid, 10.468012275731821 AS "E" UNION ALL SELECT 11 AS nid, 58.926345609065194 AS "E" UNION ALL SELECT 13 AS nid, 122.05134560906521 AS "E" UNION ALL SELECT 14 AS nid, 66.05134560906515 AS "E") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."E" AS "E" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"GB_Model_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."E" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.03142907749861479) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.11634615436196327) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.49086402356624603) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.7755948901176453) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.9889585971832275) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.4807044416666031) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.43114182353019714) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185806_DERCK0D_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -37.89909893573828 AS "E" UNION ALL SELECT 4 AS nid, -63.205024129706885 AS "E" UNION ALL SELECT 6 AS nid, 133.13371104815863 AS "E" UNION ALL SELECT 7 AS nid, 4.117494831942426 AS "E" UNION ALL SELECT 10 AS nid, -14.908867076841354 AS "E" UNION ALL SELECT 11 AS nid, 31.375443762530647 AS "E" UNION ALL SELECT 13 AS nid, 108.54701233020995 AS "E" UNION ALL SELECT 14 AS nid, 54.678457424970226 AS "E") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."E" AS "E" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"GB_Model_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."E" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.23323509097099304) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.11634615436196327) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 2.307655453681946) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.7618405520915985) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.4482282400131226) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7520720660686493) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.43114182353019714) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185806_DERCK0D_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -49.766609329091665 AS "E" UNION ALL SELECT 4 AS nid, 92.82362094173246 AS "E" UNION ALL SELECT 6 AS nid, 17.59555823856106 AS "E" UNION ALL SELECT 7 AS nid, -45.60956996656714 AS "E" UNION ALL SELECT 10 AS nid, 7.324309607101875 AS "E" UNION ALL SELECT 11 AS nid, 50.25051607768055 AS "E" UNION ALL SELECT 13 AS nid, 110.4290098151377 AS "E" UNION ALL SELECT 14 AS nid, 68.87188634151958 AS "E") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."E" AS "E" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"GB_Model_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."E" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.01226147881243378) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.11634615436196327) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.49086402356624603) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.434483140707016) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.9889585971832275) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.4807044416666031) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.77745521068573) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185806_DERCK0D_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -29.566777184999317 AS "E" UNION ALL SELECT 4 AS nid, -52.40540745223855 AS "E" UNION ALL SELECT 6 AS nid, -19.417554600564852 AS "E" UNION ALL SELECT 7 AS nid, 20.648083697077215 AS "E" UNION ALL SELECT 10 AS nid, -14.821133305970196 AS "E" UNION ALL SELECT 11 AS nid, 26.37345823008113 AS "E" UNION ALL SELECT 13 AS nid, 84.93432962632869 AS "E" UNION ALL SELECT 14 AS nid, 37.90132752479809 AS "E") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."E" AS "E" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"GB_Model_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."E" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.23323509097099304) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.11634615436196327) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 2.307655453681946) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.7618405520915985) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.4482282400131226) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.9365843236446381) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.43954937160015106) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185806_DERCK0D_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -40.71874552064135 AS "E" UNION ALL SELECT 4 AS nid, 86.49793656605914 AS "E" UNION ALL SELECT 6 AS nid, 15.312180133368075 AS "E" UNION ALL SELECT 7 AS nid, -41.110139424736026 AS "E" UNION ALL SELECT 10 AS nid, 4.746341702913099 AS "E" UNION ALL SELECT 11 AS nid, 42.05141431656915 AS "E" UNION ALL SELECT 13 AS nid, 119.83017587099098 AS "E" UNION ALL SELECT 14 AS nid, 69.47888906512253 AS "E") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."E" AS "E" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"GB_Model_4_0" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."E" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.23323509097099304) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.11634615436196327) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 2.4259417057037354) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.6849485635757446) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.4482282400131226) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7520720660686493) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.1220130324363708) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185806_DERCK0D_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -36.69086722310085 AS "E" UNION ALL SELECT 4 AS nid, 83.34767472491586 AS "E" UNION ALL SELECT 6 AS nid, 14.783877471914003 AS "E" UNION ALL SELECT 7 AS nid, -33.32666779580165 AS "E" UNION ALL SELECT 10 AS nid, 3.8042906775333662 AS "E" UNION ALL SELECT 11 AS nid, 40.23523176236177 AS "E" UNION ALL SELECT 13 AS nid, 19.711765593120287 AS "E" UNION ALL SELECT 14 AS nid, 75.43609750017677 AS "E") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."E" AS "E" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"GB_Model_5_0" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."E" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.4441855847835541) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.09338266775012016) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.632691353559494) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.32470107078552246) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.2745330929756165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.9434657096862793) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 1.8636871576309204) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185806_DERCK0D_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -31.279874986673047 AS "E" UNION ALL SELECT 4 AS nid, 2.4527301036017364 AS "E" UNION ALL SELECT 6 AS nid, -8.30307922706563 AS "E" UNION ALL SELECT 7 AS nid, 39.13706168830357 AS "E" UNION ALL SELECT 10 AS nid, 52.50060169065488 AS "E" UNION ALL SELECT 11 AS nid, 8.413298807774964 AS "E" UNION ALL SELECT 13 AS nid, 75.78197438705396 AS "E" UNION ALL SELECT 14 AS nid, 25.68904818988106 AS "E") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."E" AS "E" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"GB_Model_6_0" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."E" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.23323509097099304) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.0922942757606506) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.49086402356624603) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.2534725754521787) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.482673466205597) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7759335935115814) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.43114182353019714) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185806_DERCK0D_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -17.426369357520855 AS "E" UNION ALL SELECT 4 AS nid, -36.986863239305734 AS "E" UNION ALL SELECT 6 AS nid, -18.034420078142336 AS "E" UNION ALL SELECT 7 AS nid, 80.70942057717716 AS "E" UNION ALL SELECT 10 AS nid, 2.9134087249073 AS "E" UNION ALL SELECT 11 AS nid, 33.8014852495471 AS "E" UNION ALL SELECT 13 AS nid, 75.18125910884453 AS "E" UNION ALL SELECT 14 AS nid, 40.167650576359556 AS "E") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."E" AS "E" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"GB_Model_7_0" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."E" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.4441855847835541) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.09338266775012016) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.632691353559494) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.32470107078552246) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.2745330929756165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.9434657096862793) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 2.0372549891471863) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185806_DERCK0D_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -26.117185459809097 AS "E" UNION ALL SELECT 4 AS nid, 2.1900367455021534 AS "E" UNION ALL SELECT 6 AS nid, -6.346655746923814 AS "E" UNION ALL SELECT 7 AS nid, 32.9936028985348 AS "E" UNION ALL SELECT 10 AS nid, 45.40469807715848 AS "E" UNION ALL SELECT 11 AS nid, 5.976521749405772 AS "E" UNION ALL SELECT 13 AS nid, 62.31807548501923 AS "E" UNION ALL SELECT 14 AS nid, 8.823510772118468 AS "E") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."E" AS "E" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"GB_Model_8_0" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."E" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.23323509097099304) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.0922942757606506) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 1.2793537378311157) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.2534725754521787) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 0.6929373443126678) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.016887754201889) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.09338266775012016) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185806_DERCK0D_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -23.0931689623177 AS "E" UNION ALL SELECT 4 AS nid, 40.281136267916146 AS "E" UNION ALL SELECT 6 AS nid, -15.596312495635733 AS "E" UNION ALL SELECT 7 AS nid, 69.33911822960594 AS "E" UNION ALL SELECT 10 AS nid, -30.77310860197734 AS "E" UNION ALL SELECT 11 AS nid, 10.467580885327717 AS "E" UNION ALL SELECT 13 AS nid, 6.807544145521914 AS "E" UNION ALL SELECT 14 AS nid, 48.92363191950647 AS "E") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."E" AS "E" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"GB_Model_9_0" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."E" AS "Estimator" 
FROM "DT_Output_9")
 INSERT INTO "TMP_20221018185806_P50FF7Z_GB_B0" ("KEY", "Estimator") SELECT "T"."KEY", "T"."Estimator" 
FROM (SELECT "GB_B0"."KEY" AS "KEY", "GB_B0"."Estimator" AS "Estimator" 
FROM (SELECT "GB_esu_0"."KEY" AS "KEY", "GB_esu_0"."Estimator" AS "Estimator" 
FROM (SELECT "GB_Model_0_0"."KEY" AS "KEY", "GB_Model_0_0"."Estimator" AS "Estimator" 
FROM "GB_Model_0_0" UNION ALL SELECT "GB_Model_1_0"."KEY" AS "KEY", "GB_Model_1_0"."Estimator" AS "Estimator" 
FROM "GB_Model_1_0" UNION ALL SELECT "GB_Model_2_0"."KEY" AS "KEY", "GB_Model_2_0"."Estimator" AS "Estimator" 
FROM "GB_Model_2_0" UNION ALL SELECT "GB_Model_3_0"."KEY" AS "KEY", "GB_Model_3_0"."Estimator" AS "Estimator" 
FROM "GB_Model_3_0" UNION ALL SELECT "GB_Model_4_0"."KEY" AS "KEY", "GB_Model_4_0"."Estimator" AS "Estimator" 
FROM "GB_Model_4_0" UNION ALL SELECT "GB_Model_5_0"."KEY" AS "KEY", "GB_Model_5_0"."Estimator" AS "Estimator" 
FROM "GB_Model_5_0" UNION ALL SELECT "GB_Model_6_0"."KEY" AS "KEY", "GB_Model_6_0"."Estimator" AS "Estimator" 
FROM "GB_Model_6_0" UNION ALL SELECT "GB_Model_7_0"."KEY" AS "KEY", "GB_Model_7_0"."Estimator" AS "Estimator" 
FROM "GB_Model_7_0" UNION ALL SELECT "GB_Model_8_0"."KEY" AS "KEY", "GB_Model_8_0"."Estimator" AS "Estimator" 
FROM "GB_Model_8_0" UNION ALL SELECT "GB_Model_9_0"."KEY" AS "KEY", "GB_Model_9_0"."Estimator" AS "Estimator" 
FROM "GB_Model_9_0") AS "GB_esu_0") AS "GB_B0") AS "T"

-- Code For temporary table TMP_20221018185806_9KASZ42_GB_B1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185806_9KASZ42_GB_B1" (
	"KEY" BIGINT, 
	"Estimator" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185806_9KASZ42_GB_B1 part 2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.1852366104722023) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.6171091198921204) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.561475396156311) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.8744307160377502) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.46715807914733887) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 0.6062126755714417) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.7249386310577393) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185806_DERCK0D_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -22.496425090209065 AS "E" UNION ALL SELECT 4 AS nid, 14.894847281095188 AS "E" UNION ALL SELECT 6 AS nid, -39.12894278887687 AS "E" UNION ALL SELECT 7 AS nid, 18.976138100439222 AS "E" UNION ALL SELECT 10 AS nid, -6.074903248575574 AS "E" UNION ALL SELECT 11 AS nid, 33.75354539493074 AS "E" UNION ALL SELECT 13 AS nid, -44.26487040338847 AS "E" UNION ALL SELECT 14 AS nid, 41.60118015827299 AS "E") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."E" AS "E" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"GB_Model_10_0" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."E" AS "Estimator" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.1852366104722023) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.6171091198921204) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.0218530297279358) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.22042536735534668) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.46715807914733887) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -1.5012605786323547) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.9638880789279938) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185806_DERCK0D_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.726166201237744 AS "E" UNION ALL SELECT 4 AS nid, -22.865887420805546 AS "E" UNION ALL SELECT 6 AS nid, -38.32849375836015 AS "E" UNION ALL SELECT 7 AS nid, 17.552157262973484 AS "E" UNION ALL SELECT 10 AS nid, 82.74020216266568 AS "E" UNION ALL SELECT 11 AS nid, 1.0395187410446005 AS "E" UNION ALL SELECT 13 AS nid, -75.03019223138226 AS "E" UNION ALL SELECT 14 AS nid, 36.06113962975183 AS "E") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."E" AS "E" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"GB_Model_11_0" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."E" AS "Estimator" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.33553609251976013) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.11634615436196327) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.49086402356624603) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.9556534290313721) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.2745330929756165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 2.081838309764862) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.08397127315402031) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185806_DERCK0D_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -8.112854852767265 AS "E" UNION ALL SELECT 4 AS nid, -26.668026113701202 AS "E" UNION ALL SELECT 6 AS nid, 14.271112732068888 AS "E" UNION ALL SELECT 7 AS nid, -34.95077611886939 AS "E" UNION ALL SELECT 10 AS nid, 4.6271898771974485 AS "E" UNION ALL SELECT 11 AS nid, 53.573970024713866 AS "E" UNION ALL SELECT 13 AS nid, 17.941526241429177 AS "E" UNION ALL SELECT 14 AS nid, 51.356387663010125 AS "E") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."E" AS "E" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"GB_Model_12_0" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."E" AS "Estimator" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.23323509097099304) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.9707407355308533) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.8144451081752777) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.1554343700408936) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 0.6929373443126678) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.2423259019851685) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 1.2879526615142822) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185806_DERCK0D_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -9.629104898627563 AS "E" UNION ALL SELECT 4 AS nid, -34.99450493751931 AS "E" UNION ALL SELECT 6 AS nid, 33.44674128871671 AS "E" UNION ALL SELECT 7 AS nid, -10.547161435064588 AS "E" UNION ALL SELECT 10 AS nid, -37.126802786338196 AS "E" UNION ALL SELECT 11 AS nid, 5.7196996000905775 AS "E" UNION ALL SELECT 13 AS nid, 32.808641998586126 AS "E" UNION ALL SELECT 14 AS nid, -4.234591496761688 AS "E") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."E" AS "E" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"GB_Model_13_0" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."E" AS "Estimator" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.1852366104722023) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.49086402356624603) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 1.9938071370124817) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.9156244993209839) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.46715807914733887) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.6100610792636871) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.6844185292720795) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185806_DERCK0D_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, -2.6856598788351453 AS "E" UNION ALL SELECT 4 AS nid, 70.31024588975691 AS "E" UNION ALL SELECT 6 AS nid, -25.536629455101842 AS "E" UNION ALL SELECT 7 AS nid, -2.1835425615964885 AS "E" UNION ALL SELECT 10 AS nid, 25.252727647580905 AS "E" UNION ALL SELECT 11 AS nid, -7.0606255512410545 AS "E" UNION ALL SELECT 13 AS nid, -31.127167602351324 AS "E" UNION ALL SELECT 14 AS nid, 30.749236372670346 AS "E") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."E" AS "E" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"GB_Model_14_0" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."E" AS "Estimator" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.9889585971832275) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.9707407355308533) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -1.5619036555290222) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.0251108407974243) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.521207794547081) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.0314414300955832) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.0525020062923431) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185806_DERCK0D_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.7413990878232934 AS "E" UNION ALL SELECT 4 AS nid, -27.484854187585654 AS "E" UNION ALL SELECT 6 AS nid, 26.647660932753837 AS "E" UNION ALL SELECT 7 AS nid, -4.382408064172256 AS "E" UNION ALL SELECT 10 AS nid, -71.38797229032185 AS "E" UNION ALL SELECT 11 AS nid, 22.13999113847224 AS "E" UNION ALL SELECT 13 AS nid, -11.875005024029093 AS "E" UNION ALL SELECT 14 AS nid, 31.00983383403771 AS "E") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."E" AS "E" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"GB_Model_15_0" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."E" AS "Estimator" 
FROM "DT_Output_15")
 INSERT INTO "TMP_20221018185806_9KASZ42_GB_B1" ("KEY", "Estimator") SELECT "T"."KEY", "T"."Estimator" 
FROM (SELECT "GB_B1"."KEY" AS "KEY", "GB_B1"."Estimator" AS "Estimator" 
FROM (SELECT "GB_esu_1"."KEY" AS "KEY", "GB_esu_1"."Estimator" AS "Estimator" 
FROM (SELECT "GB_Model_10_0"."KEY" AS "KEY", "GB_Model_10_0"."Estimator" AS "Estimator" 
FROM "GB_Model_10_0" UNION ALL SELECT "GB_Model_11_0"."KEY" AS "KEY", "GB_Model_11_0"."Estimator" AS "Estimator" 
FROM "GB_Model_11_0" UNION ALL SELECT "GB_Model_12_0"."KEY" AS "KEY", "GB_Model_12_0"."Estimator" AS "Estimator" 
FROM "GB_Model_12_0" UNION ALL SELECT "GB_Model_13_0"."KEY" AS "KEY", "GB_Model_13_0"."Estimator" AS "Estimator" 
FROM "GB_Model_13_0" UNION ALL SELECT "GB_Model_14_0"."KEY" AS "KEY", "GB_Model_14_0"."Estimator" AS "Estimator" 
FROM "GB_Model_14_0" UNION ALL SELECT "GB_Model_15_0"."KEY" AS "KEY", "GB_Model_15_0"."Estimator" AS "Estimator" 
FROM "GB_Model_15_0") AS "GB_esu_1") AS "GB_B1") AS "T"

-- Code For temporary table TMP_20221018185806_D3WHDM1_GB_sum part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185806_D3WHDM1_GB_sum" (
	"KEY" BIGINT NOT NULL, 
	"Estimator" FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185806_D3WHDM1_GB_sum part 2. Populate

WITH "GB_Union" AS 
(SELECT "GB_EnsembleUnion"."KEY" AS "KEY", "GB_EnsembleUnion"."Estimator" AS "Estimator" 
FROM (SELECT "GB_B0"."KEY" AS "KEY", "GB_B0"."Estimator" AS "Estimator" 
FROM "TMP_20221018185806_P50FF7Z_GB_B0" AS "GB_B0" UNION ALL SELECT "GB_B1"."KEY" AS "KEY", "GB_B1"."Estimator" AS "Estimator" 
FROM "TMP_20221018185806_9KASZ42_GB_B1" AS "GB_B1") AS "GB_EnsembleUnion")
 INSERT INTO "TMP_20221018185806_D3WHDM1_GB_sum" ("KEY", "Estimator") SELECT "T"."KEY", "T"."Estimator" 
FROM (SELECT "GB_sum"."KEY" AS "KEY", "GB_sum"."Estimator" AS "Estimator" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Estimator" AS FLOAT) AS "Estimator" 
FROM (SELECT "GB_Union"."KEY" AS "KEY", sum("GB_Union"."Estimator") AS "Estimator" 
FROM "GB_Union" GROUP BY "GB_Union"."KEY") AS "T") AS "GB_sum") AS "T"

-- Code For temporary table TMP_20221018185806_D3WHDM1_GB_sum part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185806_D3WHDM1_GB_sum_KEY" ON "TMP_20221018185806_D3WHDM1_GB_sum" ("KEY")

-- Model deployment code

SELECT "GB_sum"."KEY" AS "KEY", 154.07365439093485 + 0.1 * "GB_sum"."Estimator" AS "Estimator" 
FROM "TMP_20221018185806_D3WHDM1_GB_sum" AS "GB_sum"