-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : MLPClassifier_Pipeline
-- Dataset : FourClass_100
-- Database : duck


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018185322_OQ7DOH3_ADS_imp_1_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185322_OQ7DOH3_ADS_imp_1_OUT" (
	"KEY" BIGINT NOT NULL, 
	impter_2 DOUBLE, 
	impter_3 DOUBLE, 
	impter_4 DOUBLE, 
	impter_5 DOUBLE, 
	impter_6 DOUBLE, 
	impter_7 DOUBLE, 
	impter_8 DOUBLE, 
	impter_9 DOUBLE, 
	impter_10 DOUBLE, 
	impter_11 DOUBLE, 
	impter_12 DOUBLE, 
	impter_13 DOUBLE, 
	impter_14 DOUBLE, 
	impter_15 DOUBLE, 
	impter_16 DOUBLE, 
	impter_17 DOUBLE, 
	impter_18 DOUBLE, 
	impter_19 DOUBLE, 
	impter_20 DOUBLE, 
	impter_21 DOUBLE, 
	impter_22 DOUBLE, 
	impter_23 DOUBLE, 
	impter_24 DOUBLE, 
	impter_25 DOUBLE, 
	impter_26 DOUBLE, 
	impter_27 DOUBLE, 
	impter_28 DOUBLE, 
	impter_29 DOUBLE, 
	impter_30 DOUBLE, 
	impter_31 DOUBLE, 
	impter_32 DOUBLE, 
	impter_33 DOUBLE, 
	impter_34 DOUBLE, 
	impter_35 DOUBLE, 
	impter_36 DOUBLE, 
	impter_37 DOUBLE, 
	impter_38 DOUBLE, 
	impter_39 DOUBLE, 
	impter_40 DOUBLE, 
	impter_41 DOUBLE, 
	impter_42 DOUBLE, 
	impter_43 DOUBLE, 
	impter_44 DOUBLE, 
	impter_45 DOUBLE, 
	impter_46 DOUBLE, 
	impter_47 DOUBLE, 
	impter_48 DOUBLE, 
	impter_49 DOUBLE, 
	impter_50 DOUBLE, 
	impter_51 DOUBLE, 
	impter_52 DOUBLE, 
	impter_53 DOUBLE, 
	impter_54 DOUBLE, 
	impter_55 DOUBLE, 
	impter_56 DOUBLE, 
	impter_57 DOUBLE, 
	impter_58 DOUBLE, 
	impter_59 DOUBLE, 
	impter_60 DOUBLE, 
	impter_61 DOUBLE, 
	impter_62 DOUBLE, 
	impter_63 DOUBLE, 
	impter_64 DOUBLE, 
	impter_65 DOUBLE, 
	impter_66 DOUBLE, 
	impter_67 DOUBLE, 
	impter_68 DOUBLE, 
	impter_69 DOUBLE, 
	impter_70 DOUBLE, 
	impter_71 DOUBLE, 
	impter_72 DOUBLE, 
	impter_73 DOUBLE, 
	impter_74 DOUBLE, 
	impter_75 DOUBLE, 
	impter_76 DOUBLE, 
	impter_77 DOUBLE, 
	impter_78 DOUBLE, 
	impter_79 DOUBLE, 
	impter_80 DOUBLE, 
	impter_81 DOUBLE, 
	impter_82 DOUBLE, 
	impter_83 DOUBLE, 
	impter_84 DOUBLE, 
	impter_85 DOUBLE, 
	impter_86 DOUBLE, 
	impter_87 DOUBLE, 
	impter_88 DOUBLE, 
	impter_89 DOUBLE, 
	impter_90 DOUBLE, 
	impter_91 DOUBLE, 
	impter_92 DOUBLE, 
	impter_93 DOUBLE, 
	impter_94 DOUBLE, 
	impter_95 DOUBLE, 
	impter_96 DOUBLE, 
	impter_97 DOUBLE, 
	impter_98 DOUBLE, 
	impter_99 DOUBLE, 
	impter_100 DOUBLE, 
	impter_101 DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185322_OQ7DOH3_ADS_imp_1_OUT part 2. Populate

INSERT INTO "TMP_20221018185322_OQ7DOH3_ADS_imp_1_OUT" ("KEY", impter_2, impter_3, impter_4, impter_5, impter_6, impter_7, impter_8, impter_9, impter_10, impter_11, impter_12, impter_13, impter_14, impter_15, impter_16, impter_17, impter_18, impter_19, impter_20, impter_21, impter_22, impter_23, impter_24, impter_25, impter_26, impter_27, impter_28, impter_29, impter_30, impter_31, impter_32, impter_33, impter_34, impter_35, impter_36, impter_37, impter_38, impter_39, impter_40, impter_41, impter_42, impter_43, impter_44, impter_45, impter_46, impter_47, impter_48, impter_49, impter_50, impter_51, impter_52, impter_53, impter_54, impter_55, impter_56, impter_57, impter_58, impter_59, impter_60, impter_61, impter_62, impter_63, impter_64, impter_65, impter_66, impter_67, impter_68, impter_69, impter_70, impter_71, impter_72, impter_73, impter_74, impter_75, impter_76, impter_77, impter_78, impter_79, impter_80, impter_81, impter_82, impter_83, impter_84, impter_85, impter_86, impter_87, impter_88, impter_89, impter_90, impter_91, impter_92, impter_93, impter_94, impter_95, impter_96, impter_97, impter_98, impter_99, impter_100, impter_101) SELECT "T"."KEY", "T".impter_2, "T".impter_3, "T".impter_4, "T".impter_5, "T".impter_6, "T".impter_7, "T".impter_8, "T".impter_9, "T".impter_10, "T".impter_11, "T".impter_12, "T".impter_13, "T".impter_14, "T".impter_15, "T".impter_16, "T".impter_17, "T".impter_18, "T".impter_19, "T".impter_20, "T".impter_21, "T".impter_22, "T".impter_23, "T".impter_24, "T".impter_25, "T".impter_26, "T".impter_27, "T".impter_28, "T".impter_29, "T".impter_30, "T".impter_31, "T".impter_32, "T".impter_33, "T".impter_34, "T".impter_35, "T".impter_36, "T".impter_37, "T".impter_38, "T".impter_39, "T".impter_40, "T".impter_41, "T".impter_42, "T".impter_43, "T".impter_44, "T".impter_45, "T".impter_46, "T".impter_47, "T".impter_48, "T".impter_49, "T".impter_50, "T".impter_51, "T".impter_52, "T".impter_53, "T".impter_54, "T".impter_55, "T".impter_56, "T".impter_57, "T".impter_58, "T".impter_59, "T".impter_60, "T".impter_61, "T".impter_62, "T".impter_63, "T".impter_64, "T".impter_65, "T".impter_66, "T".impter_67, "T".impter_68, "T".impter_69, "T".impter_70, "T".impter_71, "T".impter_72, "T".impter_73, "T".impter_74, "T".impter_75, "T".impter_76, "T".impter_77, "T".impter_78, "T".impter_79, "T".impter_80, "T".impter_81, "T".impter_82, "T".impter_83, "T".impter_84, "T".impter_85, "T".impter_86, "T".impter_87, "T".impter_88, "T".impter_89, "T".impter_90, "T".impter_91, "T".impter_92, "T".impter_93, "T".impter_94, "T".impter_95, "T".impter_96, "T".impter_97, "T".impter_98, "T".impter_99, "T".impter_100, "T".impter_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impter_2 AS impter_2, "ADS_imp_1_OUT".impter_3 AS impter_3, "ADS_imp_1_OUT".impter_4 AS impter_4, "ADS_imp_1_OUT".impter_5 AS impter_5, "ADS_imp_1_OUT".impter_6 AS impter_6, "ADS_imp_1_OUT".impter_7 AS impter_7, "ADS_imp_1_OUT".impter_8 AS impter_8, "ADS_imp_1_OUT".impter_9 AS impter_9, "ADS_imp_1_OUT".impter_10 AS impter_10, "ADS_imp_1_OUT".impter_11 AS impter_11, "ADS_imp_1_OUT".impter_12 AS impter_12, "ADS_imp_1_OUT".impter_13 AS impter_13, "ADS_imp_1_OUT".impter_14 AS impter_14, "ADS_imp_1_OUT".impter_15 AS impter_15, "ADS_imp_1_OUT".impter_16 AS impter_16, "ADS_imp_1_OUT".impter_17 AS impter_17, "ADS_imp_1_OUT".impter_18 AS impter_18, "ADS_imp_1_OUT".impter_19 AS impter_19, "ADS_imp_1_OUT".impter_20 AS impter_20, "ADS_imp_1_OUT".impter_21 AS impter_21, "ADS_imp_1_OUT".impter_22 AS impter_22, "ADS_imp_1_OUT".impter_23 AS impter_23, "ADS_imp_1_OUT".impter_24 AS impter_24, "ADS_imp_1_OUT".impter_25 AS impter_25, "ADS_imp_1_OUT".impter_26 AS impter_26, "ADS_imp_1_OUT".impter_27 AS impter_27, "ADS_imp_1_OUT".impter_28 AS impter_28, "ADS_imp_1_OUT".impter_29 AS impter_29, "ADS_imp_1_OUT".impter_30 AS impter_30, "ADS_imp_1_OUT".impter_31 AS impter_31, "ADS_imp_1_OUT".impter_32 AS impter_32, "ADS_imp_1_OUT".impter_33 AS impter_33, "ADS_imp_1_OUT".impter_34 AS impter_34, "ADS_imp_1_OUT".impter_35 AS impter_35, "ADS_imp_1_OUT".impter_36 AS impter_36, "ADS_imp_1_OUT".impter_37 AS impter_37, "ADS_imp_1_OUT".impter_38 AS impter_38, "ADS_imp_1_OUT".impter_39 AS impter_39, "ADS_imp_1_OUT".impter_40 AS impter_40, "ADS_imp_1_OUT".impter_41 AS impter_41, "ADS_imp_1_OUT".impter_42 AS impter_42, "ADS_imp_1_OUT".impter_43 AS impter_43, "ADS_imp_1_OUT".impter_44 AS impter_44, "ADS_imp_1_OUT".impter_45 AS impter_45, "ADS_imp_1_OUT".impter_46 AS impter_46, "ADS_imp_1_OUT".impter_47 AS impter_47, "ADS_imp_1_OUT".impter_48 AS impter_48, "ADS_imp_1_OUT".impter_49 AS impter_49, "ADS_imp_1_OUT".impter_50 AS impter_50, "ADS_imp_1_OUT".impter_51 AS impter_51, "ADS_imp_1_OUT".impter_52 AS impter_52, "ADS_imp_1_OUT".impter_53 AS impter_53, "ADS_imp_1_OUT".impter_54 AS impter_54, "ADS_imp_1_OUT".impter_55 AS impter_55, "ADS_imp_1_OUT".impter_56 AS impter_56, "ADS_imp_1_OUT".impter_57 AS impter_57, "ADS_imp_1_OUT".impter_58 AS impter_58, "ADS_imp_1_OUT".impter_59 AS impter_59, "ADS_imp_1_OUT".impter_60 AS impter_60, "ADS_imp_1_OUT".impter_61 AS impter_61, "ADS_imp_1_OUT".impter_62 AS impter_62, "ADS_imp_1_OUT".impter_63 AS impter_63, "ADS_imp_1_OUT".impter_64 AS impter_64, "ADS_imp_1_OUT".impter_65 AS impter_65, "ADS_imp_1_OUT".impter_66 AS impter_66, "ADS_imp_1_OUT".impter_67 AS impter_67, "ADS_imp_1_OUT".impter_68 AS impter_68, "ADS_imp_1_OUT".impter_69 AS impter_69, "ADS_imp_1_OUT".impter_70 AS impter_70, "ADS_imp_1_OUT".impter_71 AS impter_71, "ADS_imp_1_OUT".impter_72 AS impter_72, "ADS_imp_1_OUT".impter_73 AS impter_73, "ADS_imp_1_OUT".impter_74 AS impter_74, "ADS_imp_1_OUT".impter_75 AS impter_75, "ADS_imp_1_OUT".impter_76 AS impter_76, "ADS_imp_1_OUT".impter_77 AS impter_77, "ADS_imp_1_OUT".impter_78 AS impter_78, "ADS_imp_1_OUT".impter_79 AS impter_79, "ADS_imp_1_OUT".impter_80 AS impter_80, "ADS_imp_1_OUT".impter_81 AS impter_81, "ADS_imp_1_OUT".impter_82 AS impter_82, "ADS_imp_1_OUT".impter_83 AS impter_83, "ADS_imp_1_OUT".impter_84 AS impter_84, "ADS_imp_1_OUT".impter_85 AS impter_85, "ADS_imp_1_OUT".impter_86 AS impter_86, "ADS_imp_1_OUT".impter_87 AS impter_87, "ADS_imp_1_OUT".impter_88 AS impter_88, "ADS_imp_1_OUT".impter_89 AS impter_89, "ADS_imp_1_OUT".impter_90 AS impter_90, "ADS_imp_1_OUT".impter_91 AS impter_91, "ADS_imp_1_OUT".impter_92 AS impter_92, "ADS_imp_1_OUT".impter_93 AS impter_93, "ADS_imp_1_OUT".impter_94 AS impter_94, "ADS_imp_1_OUT".impter_95 AS impter_95, "ADS_imp_1_OUT".impter_96 AS impter_96, "ADS_imp_1_OUT".impter_97 AS impter_97, "ADS_imp_1_OUT".impter_98 AS impter_98, "ADS_imp_1_OUT".impter_99 AS impter_99, "ADS_imp_1_OUT".impter_100 AS impter_100, "ADS_imp_1_OUT".impter_101 AS impter_101 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.0014807007689716506 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.08599214990681354 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.006358164676411468 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.024301807422776375 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.015786548044298444 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.13959329445651672 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.06476745048019888 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.025579810774090658 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.03173937260977112 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.1518141420862488 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN -0.13244576558492482 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 0.044172679762224144 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 0.010165946719810038 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.03645872019103299 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.06491512811593925 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN -0.11930146867074032 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.007738863934852773 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.1226774060147726 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.019160881669086405 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.26340351121131067 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 0.035692361937735194 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN -0.010021324964069293 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN -0.1258614387723542 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.09372773898231128 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.1687929597880227 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.10006283199629364 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN -0.10297858086822659 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.19240514535870415 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN -0.052866434246092435 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.2624612146366151 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN 0.002677575140361194 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.09707041941284063 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN -0.032793219857333473 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.003130273745908922 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 0.053446276216279974 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN -0.18668146437412367 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN -0.029335964960866243 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN 0.07219772199502426 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN -0.0007762839781489412 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.08270823712098274 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN 0.10432022852347983 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 0.07058566385022276 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN 0.05096693098357383 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN 0.0660758203367818 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.07075895636353369 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.08422536561649958 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN 0.21367580667795616 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN -0.055897457335624984 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.17453036726139817 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN -0.054944001818473996 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.5961651261710368 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN 0.5020404526565605 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN -0.052340545201383926 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.05294307611674654 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 0.03835884479069335 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.13571979014964694 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN -0.21903068431411843 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN -0.1191752362029383 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN 0.38058346912807667 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN -0.12720928974168508 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.09072936496613782 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.03915125937954538 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN 0.07075412393313481 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.10124894587016948 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.1945661449475579 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.1759482981261233 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN 0.07473228971855511 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN 0.0377705562115906 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN 0.0139470898598917 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN 0.2582685725145942 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN 0.022975786233048922 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN 0.17445434061949525 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN -0.011413879692078346 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN 0.07898984156871978 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN 0.0952547273770713 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN -0.03997776839639901 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.020839895874293496 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.07284631986613152 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN -0.27389951764434384 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.08057287885287609 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN -0.06244274245437891 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN -0.12290855334066887 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN 0.11639531793890918 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN -0.03350462786128603 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN -0.03914049968144583 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.24193903072305167 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN -0.07389719862221904 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN 0.1400756228320113 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN 0.2765301935136145 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN -0.07957147169250885 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN 0.16295767680642717 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN 0.07062813888509549 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN 0.012995630151896219 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN 0.1055212408190415 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.1408434425354362 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.1574012366732725 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN 0.05477536676313335 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN 0.05673272205919614 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN -0.14226649213619527 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN -0.04042675289131955 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "FourClass_100" AS "ADS") AS "ADS_imp_1_OUT") AS "T"

-- Code For temporary table TMP_20221018185322_OQ7DOH3_ADS_imp_1_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185322_OQ7DOH3_ADS_imp_1_OUT_KEY" ON "TMP_20221018185322_OQ7DOH3_ADS_imp_1_OUT" ("KEY")

-- Code For temporary table TMP_20221018185322_GD9XEUN_ADS_sca_2_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185322_GD9XEUN_ADS_sca_2_OUT" (
	"KEY" BIGINT NOT NULL, 
	scaler_2 DOUBLE, 
	scaler_3 DOUBLE, 
	scaler_4 DOUBLE, 
	scaler_5 DOUBLE, 
	scaler_6 DOUBLE, 
	scaler_7 DOUBLE, 
	scaler_8 DOUBLE, 
	scaler_9 DOUBLE, 
	scaler_10 DOUBLE, 
	scaler_11 DOUBLE, 
	scaler_12 DOUBLE, 
	scaler_13 DOUBLE, 
	scaler_14 DOUBLE, 
	scaler_15 DOUBLE, 
	scaler_16 DOUBLE, 
	scaler_17 DOUBLE, 
	scaler_18 DOUBLE, 
	scaler_19 DOUBLE, 
	scaler_20 DOUBLE, 
	scaler_21 DOUBLE, 
	scaler_22 DOUBLE, 
	scaler_23 DOUBLE, 
	scaler_24 DOUBLE, 
	scaler_25 DOUBLE, 
	scaler_26 DOUBLE, 
	scaler_27 DOUBLE, 
	scaler_28 DOUBLE, 
	scaler_29 DOUBLE, 
	scaler_30 DOUBLE, 
	scaler_31 DOUBLE, 
	scaler_32 DOUBLE, 
	scaler_33 DOUBLE, 
	scaler_34 DOUBLE, 
	scaler_35 DOUBLE, 
	scaler_36 DOUBLE, 
	scaler_37 DOUBLE, 
	scaler_38 DOUBLE, 
	scaler_39 DOUBLE, 
	scaler_40 DOUBLE, 
	scaler_41 DOUBLE, 
	scaler_42 DOUBLE, 
	scaler_43 DOUBLE, 
	scaler_44 DOUBLE, 
	scaler_45 DOUBLE, 
	scaler_46 DOUBLE, 
	scaler_47 DOUBLE, 
	scaler_48 DOUBLE, 
	scaler_49 DOUBLE, 
	scaler_50 DOUBLE, 
	scaler_51 DOUBLE, 
	scaler_52 DOUBLE, 
	scaler_53 DOUBLE, 
	scaler_54 DOUBLE, 
	scaler_55 DOUBLE, 
	scaler_56 DOUBLE, 
	scaler_57 DOUBLE, 
	scaler_58 DOUBLE, 
	scaler_59 DOUBLE, 
	scaler_60 DOUBLE, 
	scaler_61 DOUBLE, 
	scaler_62 DOUBLE, 
	scaler_63 DOUBLE, 
	scaler_64 DOUBLE, 
	scaler_65 DOUBLE, 
	scaler_66 DOUBLE, 
	scaler_67 DOUBLE, 
	scaler_68 DOUBLE, 
	scaler_69 DOUBLE, 
	scaler_70 DOUBLE, 
	scaler_71 DOUBLE, 
	scaler_72 DOUBLE, 
	scaler_73 DOUBLE, 
	scaler_74 DOUBLE, 
	scaler_75 DOUBLE, 
	scaler_76 DOUBLE, 
	scaler_77 DOUBLE, 
	scaler_78 DOUBLE, 
	scaler_79 DOUBLE, 
	scaler_80 DOUBLE, 
	scaler_81 DOUBLE, 
	scaler_82 DOUBLE, 
	scaler_83 DOUBLE, 
	scaler_84 DOUBLE, 
	scaler_85 DOUBLE, 
	scaler_86 DOUBLE, 
	scaler_87 DOUBLE, 
	scaler_88 DOUBLE, 
	scaler_89 DOUBLE, 
	scaler_90 DOUBLE, 
	scaler_91 DOUBLE, 
	scaler_92 DOUBLE, 
	scaler_93 DOUBLE, 
	scaler_94 DOUBLE, 
	scaler_95 DOUBLE, 
	scaler_96 DOUBLE, 
	scaler_97 DOUBLE, 
	scaler_98 DOUBLE, 
	scaler_99 DOUBLE, 
	scaler_100 DOUBLE, 
	scaler_101 DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185322_GD9XEUN_ADS_sca_2_OUT part 2. Populate

INSERT INTO "TMP_20221018185322_GD9XEUN_ADS_sca_2_OUT" ("KEY", scaler_2, scaler_3, scaler_4, scaler_5, scaler_6, scaler_7, scaler_8, scaler_9, scaler_10, scaler_11, scaler_12, scaler_13, scaler_14, scaler_15, scaler_16, scaler_17, scaler_18, scaler_19, scaler_20, scaler_21, scaler_22, scaler_23, scaler_24, scaler_25, scaler_26, scaler_27, scaler_28, scaler_29, scaler_30, scaler_31, scaler_32, scaler_33, scaler_34, scaler_35, scaler_36, scaler_37, scaler_38, scaler_39, scaler_40, scaler_41, scaler_42, scaler_43, scaler_44, scaler_45, scaler_46, scaler_47, scaler_48, scaler_49, scaler_50, scaler_51, scaler_52, scaler_53, scaler_54, scaler_55, scaler_56, scaler_57, scaler_58, scaler_59, scaler_60, scaler_61, scaler_62, scaler_63, scaler_64, scaler_65, scaler_66, scaler_67, scaler_68, scaler_69, scaler_70, scaler_71, scaler_72, scaler_73, scaler_74, scaler_75, scaler_76, scaler_77, scaler_78, scaler_79, scaler_80, scaler_81, scaler_82, scaler_83, scaler_84, scaler_85, scaler_86, scaler_87, scaler_88, scaler_89, scaler_90, scaler_91, scaler_92, scaler_93, scaler_94, scaler_95, scaler_96, scaler_97, scaler_98, scaler_99, scaler_100, scaler_101) SELECT "T"."KEY", "T".scaler_2, "T".scaler_3, "T".scaler_4, "T".scaler_5, "T".scaler_6, "T".scaler_7, "T".scaler_8, "T".scaler_9, "T".scaler_10, "T".scaler_11, "T".scaler_12, "T".scaler_13, "T".scaler_14, "T".scaler_15, "T".scaler_16, "T".scaler_17, "T".scaler_18, "T".scaler_19, "T".scaler_20, "T".scaler_21, "T".scaler_22, "T".scaler_23, "T".scaler_24, "T".scaler_25, "T".scaler_26, "T".scaler_27, "T".scaler_28, "T".scaler_29, "T".scaler_30, "T".scaler_31, "T".scaler_32, "T".scaler_33, "T".scaler_34, "T".scaler_35, "T".scaler_36, "T".scaler_37, "T".scaler_38, "T".scaler_39, "T".scaler_40, "T".scaler_41, "T".scaler_42, "T".scaler_43, "T".scaler_44, "T".scaler_45, "T".scaler_46, "T".scaler_47, "T".scaler_48, "T".scaler_49, "T".scaler_50, "T".scaler_51, "T".scaler_52, "T".scaler_53, "T".scaler_54, "T".scaler_55, "T".scaler_56, "T".scaler_57, "T".scaler_58, "T".scaler_59, "T".scaler_60, "T".scaler_61, "T".scaler_62, "T".scaler_63, "T".scaler_64, "T".scaler_65, "T".scaler_66, "T".scaler_67, "T".scaler_68, "T".scaler_69, "T".scaler_70, "T".scaler_71, "T".scaler_72, "T".scaler_73, "T".scaler_74, "T".scaler_75, "T".scaler_76, "T".scaler_77, "T".scaler_78, "T".scaler_79, "T".scaler_80, "T".scaler_81, "T".scaler_82, "T".scaler_83, "T".scaler_84, "T".scaler_85, "T".scaler_86, "T".scaler_87, "T".scaler_88, "T".scaler_89, "T".scaler_90, "T".scaler_91, "T".scaler_92, "T".scaler_93, "T".scaler_94, "T".scaler_95, "T".scaler_96, "T".scaler_97, "T".scaler_98, "T".scaler_99, "T".scaler_100, "T".scaler_101 
FROM (SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", "ADS_sca_2_OUT".scaler_2 AS scaler_2, "ADS_sca_2_OUT".scaler_3 AS scaler_3, "ADS_sca_2_OUT".scaler_4 AS scaler_4, "ADS_sca_2_OUT".scaler_5 AS scaler_5, "ADS_sca_2_OUT".scaler_6 AS scaler_6, "ADS_sca_2_OUT".scaler_7 AS scaler_7, "ADS_sca_2_OUT".scaler_8 AS scaler_8, "ADS_sca_2_OUT".scaler_9 AS scaler_9, "ADS_sca_2_OUT".scaler_10 AS scaler_10, "ADS_sca_2_OUT".scaler_11 AS scaler_11, "ADS_sca_2_OUT".scaler_12 AS scaler_12, "ADS_sca_2_OUT".scaler_13 AS scaler_13, "ADS_sca_2_OUT".scaler_14 AS scaler_14, "ADS_sca_2_OUT".scaler_15 AS scaler_15, "ADS_sca_2_OUT".scaler_16 AS scaler_16, "ADS_sca_2_OUT".scaler_17 AS scaler_17, "ADS_sca_2_OUT".scaler_18 AS scaler_18, "ADS_sca_2_OUT".scaler_19 AS scaler_19, "ADS_sca_2_OUT".scaler_20 AS scaler_20, "ADS_sca_2_OUT".scaler_21 AS scaler_21, "ADS_sca_2_OUT".scaler_22 AS scaler_22, "ADS_sca_2_OUT".scaler_23 AS scaler_23, "ADS_sca_2_OUT".scaler_24 AS scaler_24, "ADS_sca_2_OUT".scaler_25 AS scaler_25, "ADS_sca_2_OUT".scaler_26 AS scaler_26, "ADS_sca_2_OUT".scaler_27 AS scaler_27, "ADS_sca_2_OUT".scaler_28 AS scaler_28, "ADS_sca_2_OUT".scaler_29 AS scaler_29, "ADS_sca_2_OUT".scaler_30 AS scaler_30, "ADS_sca_2_OUT".scaler_31 AS scaler_31, "ADS_sca_2_OUT".scaler_32 AS scaler_32, "ADS_sca_2_OUT".scaler_33 AS scaler_33, "ADS_sca_2_OUT".scaler_34 AS scaler_34, "ADS_sca_2_OUT".scaler_35 AS scaler_35, "ADS_sca_2_OUT".scaler_36 AS scaler_36, "ADS_sca_2_OUT".scaler_37 AS scaler_37, "ADS_sca_2_OUT".scaler_38 AS scaler_38, "ADS_sca_2_OUT".scaler_39 AS scaler_39, "ADS_sca_2_OUT".scaler_40 AS scaler_40, "ADS_sca_2_OUT".scaler_41 AS scaler_41, "ADS_sca_2_OUT".scaler_42 AS scaler_42, "ADS_sca_2_OUT".scaler_43 AS scaler_43, "ADS_sca_2_OUT".scaler_44 AS scaler_44, "ADS_sca_2_OUT".scaler_45 AS scaler_45, "ADS_sca_2_OUT".scaler_46 AS scaler_46, "ADS_sca_2_OUT".scaler_47 AS scaler_47, "ADS_sca_2_OUT".scaler_48 AS scaler_48, "ADS_sca_2_OUT".scaler_49 AS scaler_49, "ADS_sca_2_OUT".scaler_50 AS scaler_50, "ADS_sca_2_OUT".scaler_51 AS scaler_51, "ADS_sca_2_OUT".scaler_52 AS scaler_52, "ADS_sca_2_OUT".scaler_53 AS scaler_53, "ADS_sca_2_OUT".scaler_54 AS scaler_54, "ADS_sca_2_OUT".scaler_55 AS scaler_55, "ADS_sca_2_OUT".scaler_56 AS scaler_56, "ADS_sca_2_OUT".scaler_57 AS scaler_57, "ADS_sca_2_OUT".scaler_58 AS scaler_58, "ADS_sca_2_OUT".scaler_59 AS scaler_59, "ADS_sca_2_OUT".scaler_60 AS scaler_60, "ADS_sca_2_OUT".scaler_61 AS scaler_61, "ADS_sca_2_OUT".scaler_62 AS scaler_62, "ADS_sca_2_OUT".scaler_63 AS scaler_63, "ADS_sca_2_OUT".scaler_64 AS scaler_64, "ADS_sca_2_OUT".scaler_65 AS scaler_65, "ADS_sca_2_OUT".scaler_66 AS scaler_66, "ADS_sca_2_OUT".scaler_67 AS scaler_67, "ADS_sca_2_OUT".scaler_68 AS scaler_68, "ADS_sca_2_OUT".scaler_69 AS scaler_69, "ADS_sca_2_OUT".scaler_70 AS scaler_70, "ADS_sca_2_OUT".scaler_71 AS scaler_71, "ADS_sca_2_OUT".scaler_72 AS scaler_72, "ADS_sca_2_OUT".scaler_73 AS scaler_73, "ADS_sca_2_OUT".scaler_74 AS scaler_74, "ADS_sca_2_OUT".scaler_75 AS scaler_75, "ADS_sca_2_OUT".scaler_76 AS scaler_76, "ADS_sca_2_OUT".scaler_77 AS scaler_77, "ADS_sca_2_OUT".scaler_78 AS scaler_78, "ADS_sca_2_OUT".scaler_79 AS scaler_79, "ADS_sca_2_OUT".scaler_80 AS scaler_80, "ADS_sca_2_OUT".scaler_81 AS scaler_81, "ADS_sca_2_OUT".scaler_82 AS scaler_82, "ADS_sca_2_OUT".scaler_83 AS scaler_83, "ADS_sca_2_OUT".scaler_84 AS scaler_84, "ADS_sca_2_OUT".scaler_85 AS scaler_85, "ADS_sca_2_OUT".scaler_86 AS scaler_86, "ADS_sca_2_OUT".scaler_87 AS scaler_87, "ADS_sca_2_OUT".scaler_88 AS scaler_88, "ADS_sca_2_OUT".scaler_89 AS scaler_89, "ADS_sca_2_OUT".scaler_90 AS scaler_90, "ADS_sca_2_OUT".scaler_91 AS scaler_91, "ADS_sca_2_OUT".scaler_92 AS scaler_92, "ADS_sca_2_OUT".scaler_93 AS scaler_93, "ADS_sca_2_OUT".scaler_94 AS scaler_94, "ADS_sca_2_OUT".scaler_95 AS scaler_95, "ADS_sca_2_OUT".scaler_96 AS scaler_96, "ADS_sca_2_OUT".scaler_97 AS scaler_97, "ADS_sca_2_OUT".scaler_98 AS scaler_98, "ADS_sca_2_OUT".scaler_99 AS scaler_99, "ADS_sca_2_OUT".scaler_100 AS scaler_100, "ADS_sca_2_OUT".scaler_101 AS scaler_101 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS DOUBLE) - -0.0014807007689716506) / 0.9211229790312512 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS DOUBLE) - 0.08599214990681354) / 0.9627516809237073 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS DOUBLE) - -0.006358164676411468) / 0.7890687835102894 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS DOUBLE) - -0.024301807422776375) / 1.0265272189083172 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS DOUBLE) - 0.015786548044298444) / 1.0198090908026474 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS DOUBLE) - -0.13959329445651672) / 0.9185551763293686 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS DOUBLE) - -0.06476745048019888) / 1.0393547249617474 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS DOUBLE) - 0.025579810774090658) / 0.8722131294644917 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS DOUBLE) - -0.03173937260977112) / 1.0164588299091024 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS DOUBLE) - -0.1518141420862488) / 1.0075402114297496 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS DOUBLE) - -0.13244576558492482) / 0.9215325459816371 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS DOUBLE) - 0.044172679762224144) / 0.9053279964066308 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS DOUBLE) - 0.010165946719810038) / 1.2190371046063362 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS DOUBLE) - -0.03645872019103299) / 1.0879005786584215 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS DOUBLE) - 0.06491512811593925) / 1.0274670201407186 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS DOUBLE) - -0.11930146867074032) / 0.9506312349761404 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS DOUBLE) - 0.007738863934852773) / 1.0928477585203984 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS DOUBLE) - -0.1226774060147726) / 0.9830561715965196 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS DOUBLE) - 0.019160881669086405) / 1.2117417920836373 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS DOUBLE) - -0.26340351121131067) / 0.9807419262255984 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS DOUBLE) - 0.035692361937735194) / 1.115824498468156 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS DOUBLE) - -0.010021324964069293) / 1.0790959803413318 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS DOUBLE) - -0.1258614387723542) / 1.0279672611547366 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS DOUBLE) - 0.09372773898231128) / 0.9690760299303989 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS DOUBLE) - -0.1687929597880227) / 0.8845858581996813 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS DOUBLE) - 0.10006283199629364) / 0.9149346104000894 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS DOUBLE) - -0.10297858086822659) / 1.0761397500557328 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS DOUBLE) - 0.19240514535870415) / 2.089882492597775 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS DOUBLE) - -0.052866434246092435) / 1.0030777529896888 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS DOUBLE) - 0.2624612146366151) / 1.9778491038473625 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS DOUBLE) - 0.002677575140361194) / 0.8833924915211555 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS DOUBLE) - 0.09707041941284063) / 0.8720005351713555 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS DOUBLE) - -0.032793219857333473) / 0.8745989090443193 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS DOUBLE) - -0.003130273745908922) / 0.9967699097535561 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS DOUBLE) - 0.053446276216279974) / 0.9997289112199433 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS DOUBLE) - -0.18668146437412367) / 1.0272287171310865 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS DOUBLE) - -0.029335964960866243) / 1.0427555960451658 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS DOUBLE) - 0.07219772199502426) / 0.8328229890456742 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS DOUBLE) - -0.0007762839781489412) / 0.9666524356457794 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS DOUBLE) - 0.08270823712098274) / 1.083670494683493 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS DOUBLE) - 0.10432022852347983) / 1.075472547982714 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS DOUBLE) - 0.07058566385022276) / 0.9993462791463713 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS DOUBLE) - 0.05096693098357383) / 0.8876971252794036 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS DOUBLE) - 0.0660758203367818) / 1.041246125313479 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS DOUBLE) - -0.07075895636353369) / 2.238310207242139 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS DOUBLE) - 0.08422536561649958) / 0.9520959686676432 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS DOUBLE) - 0.21367580667795616) / 0.9907230316111766 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS DOUBLE) - -0.055897457335624984) / 1.0392400714320487 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS DOUBLE) - -0.17453036726139817) / 2.001507098381001 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS DOUBLE) - -0.054944001818473996) / 1.0041645540091246 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS DOUBLE) - -0.5961651261710368) / 2.467511153399545 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS DOUBLE) - 0.5020404526565605) / 2.1929325118287792 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS DOUBLE) - -0.052340545201383926) / 0.98465558791252 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS DOUBLE) - 0.05294307611674654) / 1.8137042567337183 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS DOUBLE) - 0.03835884479069335) / 0.9241326354411343 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS DOUBLE) - -0.13571979014964694) / 0.8679095755948701 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS DOUBLE) - -0.21903068431411843) / 4.150428869748413 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS DOUBLE) - -0.1191752362029383) / 0.9123333408128436 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS DOUBLE) - 0.38058346912807667) / 3.5635011086986927 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS DOUBLE) - -0.12720928974168508) / 0.9301024475991629 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS DOUBLE) - -0.09072936496613782) / 0.9490501277306023 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS DOUBLE) - -0.03915125937954538) / 0.9029504608473613 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS DOUBLE) - 0.07075412393313481) / 0.9726561682528103 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS DOUBLE) - 0.10124894587016948) / 0.9403075920249493 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS DOUBLE) - -0.1945661449475579) / 0.9400903625732654 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS DOUBLE) - -0.1759482981261233) / 0.9435422049943787 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS DOUBLE) - 0.07473228971855511) / 0.8871003964319768 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS DOUBLE) - 0.0377705562115906) / 1.0228978549196588 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS DOUBLE) - 0.0139470898598917) / 0.9465728329079491 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS DOUBLE) - 0.2582685725145942) / 1.1027232016521478 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS DOUBLE) - 0.022975786233048922) / 0.9200436904809381 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS DOUBLE) - 0.17445434061949525) / 0.9009964742482128 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS DOUBLE) - -0.011413879692078346) / 0.9483377025565977 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS DOUBLE) - 0.07898984156871978) / 0.9726668138861088 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS DOUBLE) - 0.0952547273770713) / 0.9607867245873394 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS DOUBLE) - -0.03997776839639901) / 1.0318828686080972 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS DOUBLE) - -0.020839895874293496) / 0.945141993694461 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS DOUBLE) - -0.07284631986613152) / 0.9103416784348913 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS DOUBLE) - -0.27389951764434384) / 2.0362603862996735 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS DOUBLE) - 0.08057287885287609) / 0.9919292944224015 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS DOUBLE) - -0.06244274245437891) / 0.8113039293824552 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS DOUBLE) - -0.12290855334066887) / 1.0307302654711112 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS DOUBLE) - 0.11639531793890918) / 0.9993591951135242 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS DOUBLE) - -0.03350462786128603) / 1.0197598648594488 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS DOUBLE) - -0.03914049968144583) / 0.9022051622058084 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS DOUBLE) - 0.24193903072305167) / 0.9625742678392476 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS DOUBLE) - -0.07389719862221904) / 1.0080070985430696 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS DOUBLE) - 0.1400756228320113) / 0.9315791274848828 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS DOUBLE) - 0.2765301935136145) / 1.9455982323178656 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS DOUBLE) - -0.07957147169250885) / 0.9688848077884671 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS DOUBLE) - 0.16295767680642717) / 0.8952741904110189 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS DOUBLE) - 0.07062813888509549) / 0.8331748322730601 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS DOUBLE) - 0.012995630151896219) / 1.059167248118017 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS DOUBLE) - 0.1055212408190415) / 1.0525988978000902 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS DOUBLE) - -0.1408434425354362) / 0.9172372033996682 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS DOUBLE) - -0.1574012366732725) / 0.9930125433643069 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS DOUBLE) - 0.05477536676313335) / 0.9803136353653645 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS DOUBLE) - 0.05673272205919614) / 0.9296338032188498 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS DOUBLE) - -0.14226649213619527) / 1.174442941822933 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS DOUBLE) - -0.04042675289131955) / 1.983747550989713 AS scaler_101 
FROM "TMP_20221018185322_OQ7DOH3_ADS_imp_1_OUT" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "T"

-- Code For temporary table TMP_20221018185322_GD9XEUN_ADS_sca_2_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185322_GD9XEUN_ADS_sca_2_OUT_KEY" ON "TMP_20221018185322_GD9XEUN_ADS_sca_2_OUT" ("KEY")

-- Code For temporary table TMP_20221018185322_ZUQSFAJ_HL_1_relu_1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185322_ZUQSFAJ_HL_1_relu_1" (
	"KEY" BIGINT NOT NULL, 
	"NEUR_1_1" DOUBLE, 
	"NEUR_1_2" DOUBLE, 
	"NEUR_1_3" DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185322_ZUQSFAJ_HL_1_relu_1 part 2. Populate

WITH "IL" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CAST("ADS_sca_2_OUT".scaler_2 AS DOUBLE) AS scaler_2, CAST("ADS_sca_2_OUT".scaler_3 AS DOUBLE) AS scaler_3, CAST("ADS_sca_2_OUT".scaler_4 AS DOUBLE) AS scaler_4, CAST("ADS_sca_2_OUT".scaler_5 AS DOUBLE) AS scaler_5, CAST("ADS_sca_2_OUT".scaler_6 AS DOUBLE) AS scaler_6, CAST("ADS_sca_2_OUT".scaler_7 AS DOUBLE) AS scaler_7, CAST("ADS_sca_2_OUT".scaler_8 AS DOUBLE) AS scaler_8, CAST("ADS_sca_2_OUT".scaler_9 AS DOUBLE) AS scaler_9, CAST("ADS_sca_2_OUT".scaler_10 AS DOUBLE) AS scaler_10, CAST("ADS_sca_2_OUT".scaler_11 AS DOUBLE) AS scaler_11, CAST("ADS_sca_2_OUT".scaler_12 AS DOUBLE) AS scaler_12, CAST("ADS_sca_2_OUT".scaler_13 AS DOUBLE) AS scaler_13, CAST("ADS_sca_2_OUT".scaler_14 AS DOUBLE) AS scaler_14, CAST("ADS_sca_2_OUT".scaler_15 AS DOUBLE) AS scaler_15, CAST("ADS_sca_2_OUT".scaler_16 AS DOUBLE) AS scaler_16, CAST("ADS_sca_2_OUT".scaler_17 AS DOUBLE) AS scaler_17, CAST("ADS_sca_2_OUT".scaler_18 AS DOUBLE) AS scaler_18, CAST("ADS_sca_2_OUT".scaler_19 AS DOUBLE) AS scaler_19, CAST("ADS_sca_2_OUT".scaler_20 AS DOUBLE) AS scaler_20, CAST("ADS_sca_2_OUT".scaler_21 AS DOUBLE) AS scaler_21, CAST("ADS_sca_2_OUT".scaler_22 AS DOUBLE) AS scaler_22, CAST("ADS_sca_2_OUT".scaler_23 AS DOUBLE) AS scaler_23, CAST("ADS_sca_2_OUT".scaler_24 AS DOUBLE) AS scaler_24, CAST("ADS_sca_2_OUT".scaler_25 AS DOUBLE) AS scaler_25, CAST("ADS_sca_2_OUT".scaler_26 AS DOUBLE) AS scaler_26, CAST("ADS_sca_2_OUT".scaler_27 AS DOUBLE) AS scaler_27, CAST("ADS_sca_2_OUT".scaler_28 AS DOUBLE) AS scaler_28, CAST("ADS_sca_2_OUT".scaler_29 AS DOUBLE) AS scaler_29, CAST("ADS_sca_2_OUT".scaler_30 AS DOUBLE) AS scaler_30, CAST("ADS_sca_2_OUT".scaler_31 AS DOUBLE) AS scaler_31, CAST("ADS_sca_2_OUT".scaler_32 AS DOUBLE) AS scaler_32, CAST("ADS_sca_2_OUT".scaler_33 AS DOUBLE) AS scaler_33, CAST("ADS_sca_2_OUT".scaler_34 AS DOUBLE) AS scaler_34, CAST("ADS_sca_2_OUT".scaler_35 AS DOUBLE) AS scaler_35, CAST("ADS_sca_2_OUT".scaler_36 AS DOUBLE) AS scaler_36, CAST("ADS_sca_2_OUT".scaler_37 AS DOUBLE) AS scaler_37, CAST("ADS_sca_2_OUT".scaler_38 AS DOUBLE) AS scaler_38, CAST("ADS_sca_2_OUT".scaler_39 AS DOUBLE) AS scaler_39, CAST("ADS_sca_2_OUT".scaler_40 AS DOUBLE) AS scaler_40, CAST("ADS_sca_2_OUT".scaler_41 AS DOUBLE) AS scaler_41, CAST("ADS_sca_2_OUT".scaler_42 AS DOUBLE) AS scaler_42, CAST("ADS_sca_2_OUT".scaler_43 AS DOUBLE) AS scaler_43, CAST("ADS_sca_2_OUT".scaler_44 AS DOUBLE) AS scaler_44, CAST("ADS_sca_2_OUT".scaler_45 AS DOUBLE) AS scaler_45, CAST("ADS_sca_2_OUT".scaler_46 AS DOUBLE) AS scaler_46, CAST("ADS_sca_2_OUT".scaler_47 AS DOUBLE) AS scaler_47, CAST("ADS_sca_2_OUT".scaler_48 AS DOUBLE) AS scaler_48, CAST("ADS_sca_2_OUT".scaler_49 AS DOUBLE) AS scaler_49, CAST("ADS_sca_2_OUT".scaler_50 AS DOUBLE) AS scaler_50, CAST("ADS_sca_2_OUT".scaler_51 AS DOUBLE) AS scaler_51, CAST("ADS_sca_2_OUT".scaler_52 AS DOUBLE) AS scaler_52, CAST("ADS_sca_2_OUT".scaler_53 AS DOUBLE) AS scaler_53, CAST("ADS_sca_2_OUT".scaler_54 AS DOUBLE) AS scaler_54, CAST("ADS_sca_2_OUT".scaler_55 AS DOUBLE) AS scaler_55, CAST("ADS_sca_2_OUT".scaler_56 AS DOUBLE) AS scaler_56, CAST("ADS_sca_2_OUT".scaler_57 AS DOUBLE) AS scaler_57, CAST("ADS_sca_2_OUT".scaler_58 AS DOUBLE) AS scaler_58, CAST("ADS_sca_2_OUT".scaler_59 AS DOUBLE) AS scaler_59, CAST("ADS_sca_2_OUT".scaler_60 AS DOUBLE) AS scaler_60, CAST("ADS_sca_2_OUT".scaler_61 AS DOUBLE) AS scaler_61, CAST("ADS_sca_2_OUT".scaler_62 AS DOUBLE) AS scaler_62, CAST("ADS_sca_2_OUT".scaler_63 AS DOUBLE) AS scaler_63, CAST("ADS_sca_2_OUT".scaler_64 AS DOUBLE) AS scaler_64, CAST("ADS_sca_2_OUT".scaler_65 AS DOUBLE) AS scaler_65, CAST("ADS_sca_2_OUT".scaler_66 AS DOUBLE) AS scaler_66, CAST("ADS_sca_2_OUT".scaler_67 AS DOUBLE) AS scaler_67, CAST("ADS_sca_2_OUT".scaler_68 AS DOUBLE) AS scaler_68, CAST("ADS_sca_2_OUT".scaler_69 AS DOUBLE) AS scaler_69, CAST("ADS_sca_2_OUT".scaler_70 AS DOUBLE) AS scaler_70, CAST("ADS_sca_2_OUT".scaler_71 AS DOUBLE) AS scaler_71, CAST("ADS_sca_2_OUT".scaler_72 AS DOUBLE) AS scaler_72, CAST("ADS_sca_2_OUT".scaler_73 AS DOUBLE) AS scaler_73, CAST("ADS_sca_2_OUT".scaler_74 AS DOUBLE) AS scaler_74, CAST("ADS_sca_2_OUT".scaler_75 AS DOUBLE) AS scaler_75, CAST("ADS_sca_2_OUT".scaler_76 AS DOUBLE) AS scaler_76, CAST("ADS_sca_2_OUT".scaler_77 AS DOUBLE) AS scaler_77, CAST("ADS_sca_2_OUT".scaler_78 AS DOUBLE) AS scaler_78, CAST("ADS_sca_2_OUT".scaler_79 AS DOUBLE) AS scaler_79, CAST("ADS_sca_2_OUT".scaler_80 AS DOUBLE) AS scaler_80, CAST("ADS_sca_2_OUT".scaler_81 AS DOUBLE) AS scaler_81, CAST("ADS_sca_2_OUT".scaler_82 AS DOUBLE) AS scaler_82, CAST("ADS_sca_2_OUT".scaler_83 AS DOUBLE) AS scaler_83, CAST("ADS_sca_2_OUT".scaler_84 AS DOUBLE) AS scaler_84, CAST("ADS_sca_2_OUT".scaler_85 AS DOUBLE) AS scaler_85, CAST("ADS_sca_2_OUT".scaler_86 AS DOUBLE) AS scaler_86, CAST("ADS_sca_2_OUT".scaler_87 AS DOUBLE) AS scaler_87, CAST("ADS_sca_2_OUT".scaler_88 AS DOUBLE) AS scaler_88, CAST("ADS_sca_2_OUT".scaler_89 AS DOUBLE) AS scaler_89, CAST("ADS_sca_2_OUT".scaler_90 AS DOUBLE) AS scaler_90, CAST("ADS_sca_2_OUT".scaler_91 AS DOUBLE) AS scaler_91, CAST("ADS_sca_2_OUT".scaler_92 AS DOUBLE) AS scaler_92, CAST("ADS_sca_2_OUT".scaler_93 AS DOUBLE) AS scaler_93, CAST("ADS_sca_2_OUT".scaler_94 AS DOUBLE) AS scaler_94, CAST("ADS_sca_2_OUT".scaler_95 AS DOUBLE) AS scaler_95, CAST("ADS_sca_2_OUT".scaler_96 AS DOUBLE) AS scaler_96, CAST("ADS_sca_2_OUT".scaler_97 AS DOUBLE) AS scaler_97, CAST("ADS_sca_2_OUT".scaler_98 AS DOUBLE) AS scaler_98, CAST("ADS_sca_2_OUT".scaler_99 AS DOUBLE) AS scaler_99, CAST("ADS_sca_2_OUT".scaler_100 AS DOUBLE) AS scaler_100, CAST("ADS_sca_2_OUT".scaler_101 AS DOUBLE) AS scaler_101 
FROM "TMP_20221018185322_GD9XEUN_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", -8.36462481982831 * "IL".scaler_2 + 0.6109442057353095 * "IL".scaler_3 + -0.008641992135613888 * "IL".scaler_4 + -6.970038374096847 * "IL".scaler_5 + -3.8002089110081725 * "IL".scaler_6 + 4.991754079975732 * "IL".scaler_7 + -5.443825564552206 * "IL".scaler_8 + -3.088325786676656 * "IL".scaler_9 + -0.7670865291863581 * "IL".scaler_10 + -0.4089547665866511 * "IL".scaler_11 + -6.876991782477663 * "IL".scaler_12 + 4.572949139199047 * "IL".scaler_13 + 4.915540964217609 * "IL".scaler_14 + 7.373536613089495 * "IL".scaler_15 + 9.361013365371495 * "IL".scaler_16 + -4.973397182890622 * "IL".scaler_17 + -1.0266044290655916 * "IL".scaler_18 + -7.522746337811863 * "IL".scaler_19 + 1.278365054062534 * "IL".scaler_20 + 0.7374466836561955 * "IL".scaler_21 + -1.922359186367148 * "IL".scaler_22 + 1.838123063945476 * "IL".scaler_23 + 5.552080974696428 * "IL".scaler_24 + -4.470018642014792 * "IL".scaler_25 + 5.043136013208282 * "IL".scaler_26 + 5.825909058441193 * "IL".scaler_27 + -1.083399477759773 * "IL".scaler_28 + -2.581121761781073 * "IL".scaler_29 + -0.24725069096972402 * "IL".scaler_30 + 3.441279314251465 * "IL".scaler_31 + -3.272142288566602 * "IL".scaler_32 + -0.1958963041817893 * "IL".scaler_33 + 0.7276505188196302 * "IL".scaler_34 + -9.693058753481017 * "IL".scaler_35 + -1.811867748812597 * "IL".scaler_36 + -1.5564801074796 * "IL".scaler_37 + -3.6342597970099746 * "IL".scaler_38 + 6.186276014767842 * "IL".scaler_39 + -3.666437664064834 * "IL".scaler_40 + -5.8429101295917425 * "IL".scaler_41 + -1.088605993579111 * "IL".scaler_42 + -4.021272374032088 * "IL".scaler_43 + 2.5678974770937155 * "IL".scaler_44 + 5.111141097514785 * "IL".scaler_45 + -3.9118049203078455 * "IL".scaler_46 + 9.598486522088074 * "IL".scaler_47 + 6.550279625467178 * "IL".scaler_48 + 1.8318427190485647 * "IL".scaler_49 + 2.6140841097446423 * "IL".scaler_50 + -6.488591248850395 * "IL".scaler_51 + 1.451527336619407 * "IL".scaler_52 + -5.4139135572703605 * "IL".scaler_53 + 4.355683535306936 * "IL".scaler_54 + -7.676029030805416 * "IL".scaler_55 + -5.729459054074382 * "IL".scaler_56 + -0.286969908097834 * "IL".scaler_57 + -7.189726302035656 * "IL".scaler_58 + 9.871095606506739 * "IL".scaler_59 + 3.19777384413254 * "IL".scaler_60 + -0.1730186387325249 * "IL".scaler_61 + -2.048840276362416 * "IL".scaler_62 + 11.72508140786619 * "IL".scaler_63 + -7.579080130204973 * "IL".scaler_64 + 2.7298498886470757 * "IL".scaler_65 + -8.87623910950877 * "IL".scaler_66 + -4.823265736601733 * "IL".scaler_67 + -5.726851040829976 * "IL".scaler_68 + -3.0547435099422557 * "IL".scaler_69 + 2.3047742783200498 * "IL".scaler_70 + -0.007002854520428179 * "IL".scaler_71 + -0.05448702970653178 * "IL".scaler_72 + 9.108064210327566 * "IL".scaler_73 + -1.7433898663090726 * "IL".scaler_74 + 2.3504126707501 * "IL".scaler_75 + -0.6578274693269826 * "IL".scaler_76 + -10.53129293907916 * "IL".scaler_77 + -7.965088964000008 * "IL".scaler_78 + 2.425553106198184 * "IL".scaler_79 + 5.112633674094213 * "IL".scaler_80 + -1.533324766240347 * "IL".scaler_81 + -2.5398359596090723 * "IL".scaler_82 + 4.449073751898932 * "IL".scaler_83 + -8.850729338069772 * "IL".scaler_84 + 4.0433942236293685 * "IL".scaler_85 + 0.7007340517473557 * "IL".scaler_86 + 3.1882182047055143 * "IL".scaler_87 + 2.242170367402884 * "IL".scaler_88 + -1.8444401733282632 * "IL".scaler_89 + -2.9510827914885014 * "IL".scaler_90 + -7.722588082673039 * "IL".scaler_91 + 2.777812148790139 * "IL".scaler_92 + -6.187995608293532 * "IL".scaler_93 + -4.829412884874208 * "IL".scaler_94 + -2.7156768705386964 * "IL".scaler_95 + 1.8657427134551599 * "IL".scaler_96 + 6.470031719644062 * "IL".scaler_97 + -4.747574750294136 * "IL".scaler_98 + -1.6053891402661682 * "IL".scaler_99 + -13.764315060384481 * "IL".scaler_100 + 7.095865033698774 * "IL".scaler_101 + 3.03852117240119 AS "NEUR_1_1", 1.1984202629286975 * "IL".scaler_2 + 1.2984875761964756 * "IL".scaler_3 + -1.290241042349205 * "IL".scaler_4 + 2.922830764707492 * "IL".scaler_5 + 2.3670809848143706 * "IL".scaler_6 + 3.7471002048301116 * "IL".scaler_7 + 5.950103912045255 * "IL".scaler_8 + 0.5004728698938569 * "IL".scaler_9 + 6.6099345302262025 * "IL".scaler_10 + -2.236630029998867 * "IL".scaler_11 + -0.12436820890353564 * "IL".scaler_12 + -0.5501922721492967 * "IL".scaler_13 + 3.114591973598838 * "IL".scaler_14 + 4.685003016671037 * "IL".scaler_15 + 6.092844627998193 * "IL".scaler_16 + -0.9667541203408949 * "IL".scaler_17 + -4.995045771914267 * "IL".scaler_18 + 3.402584481615278 * "IL".scaler_19 + 0.6029563858232515 * "IL".scaler_20 + 6.966946183566683 * "IL".scaler_21 + -0.09153770125525337 * "IL".scaler_22 + 1.2350904478677707 * "IL".scaler_23 + -1.0681720647700996 * "IL".scaler_24 + 7.9475131400433305 * "IL".scaler_25 + 7.170895127644709 * "IL".scaler_26 + 6.794428561551548 * "IL".scaler_27 + 1.250628372668344 * "IL".scaler_28 + -4.144982315069112 * "IL".scaler_29 + 0.40974808944088464 * "IL".scaler_30 + 3.0890279411482635 * "IL".scaler_31 + -4.0875990293511855 * "IL".scaler_32 + -3.4394077007804507 * "IL".scaler_33 + -1.3661100754131832 * "IL".scaler_34 + 1.924971941466523 * "IL".scaler_35 + 6.9792648695529484 * "IL".scaler_36 + -6.73959213724715 * "IL".scaler_37 + 9.163455231722134 * "IL".scaler_38 + -3.5402430514891967 * "IL".scaler_39 + 6.791618656099171 * "IL".scaler_40 + 7.387517360862464 * "IL".scaler_41 + 5.605356546615227 * "IL".scaler_42 + -0.9884455269245688 * "IL".scaler_43 + 6.617053186642096 * "IL".scaler_44 + 3.022433455847366 * "IL".scaler_45 + 2.4361734080930497 * "IL".scaler_46 + -3.001274583516142 * "IL".scaler_47 + 5.447994541942194 * "IL".scaler_48 + -1.3989570870930612 * "IL".scaler_49 + 1.3882268995535119 * "IL".scaler_50 + 3.133996774260562 * "IL".scaler_51 + 5.887952710082168 * "IL".scaler_52 + 0.19755534040297712 * "IL".scaler_53 + -4.719359066941879 * "IL".scaler_54 + 7.047148757539405 * "IL".scaler_55 + 1.3409478841932998 * "IL".scaler_56 + -5.775609645730823 * "IL".scaler_57 + 3.6311524457484263 * "IL".scaler_58 + -0.48007731944562687 * "IL".scaler_59 + -4.553587468323899 * "IL".scaler_60 + 6.822563964484887 * "IL".scaler_61 + -2.0645825669356226 * "IL".scaler_62 + 0.5897687148499116 * "IL".scaler_63 + -1.6225059719170185 * "IL".scaler_64 + -0.20820191014241263 * "IL".scaler_65 + -2.7735089899772563 * "IL".scaler_66 + -4.801489301953504 * "IL".scaler_67 + -1.6045694367413463 * "IL".scaler_68 + 1.1811426107288254 * "IL".scaler_69 + -2.847114848759261 * "IL".scaler_70 + -2.95824531424065 * "IL".scaler_71 + -1.0860012086099857 * "IL".scaler_72 + 2.030060021166727 * "IL".scaler_73 + 0.06406192374459667 * "IL".scaler_74 + -0.7215755241264968 * "IL".scaler_75 + -5.642856401011065 * "IL".scaler_76 + -0.8732587194634556 * "IL".scaler_77 + 0.6919675383746203 * "IL".scaler_78 + -2.6036814022911736 * "IL".scaler_79 + -4.052399756452892 * "IL".scaler_80 + 0.25596521263032934 * "IL".scaler_81 + 4.099649070805126 * "IL".scaler_82 + -0.9218837429063469 * "IL".scaler_83 + 1.2940473975962252 * "IL".scaler_84 + -2.325921577803567 * "IL".scaler_85 + -0.8225391792883452 * "IL".scaler_86 + -6.140699620609006 * "IL".scaler_87 + -5.715453797603015 * "IL".scaler_88 + -1.0975386162747591 * "IL".scaler_89 + -13.788514982150703 * "IL".scaler_90 + 1.955090600588573 * "IL".scaler_91 + -4.4156006851861065 * "IL".scaler_92 + -1.8826225656674547 * "IL".scaler_93 + -5.087998830093502 * "IL".scaler_94 + -6.285136539035307 * "IL".scaler_95 + -3.638733424647538 * "IL".scaler_96 + 3.4065311299000807 * "IL".scaler_97 + 6.916407548202905 * "IL".scaler_98 + -0.5866643103199671 * "IL".scaler_99 + 1.812712995199031 * "IL".scaler_100 + -3.1803492366336705 * "IL".scaler_101 + 5.1025376674337535 AS "NEUR_1_2", -1.6084857356454272 * "IL".scaler_2 + -3.775883426780466 * "IL".scaler_3 + -4.218224737172105 * "IL".scaler_4 + -0.25977641321579203 * "IL".scaler_5 + -1.3028454340290343 * "IL".scaler_6 + 4.531671116373281 * "IL".scaler_7 + 0.5780128825233914 * "IL".scaler_8 + -1.159419788155616 * "IL".scaler_9 + -1.6264813322085683 * "IL".scaler_10 + 2.81797795327016 * "IL".scaler_11 + -3.0756381474700287 * "IL".scaler_12 + 2.4644870571658006 * "IL".scaler_13 + 0.4614038576904697 * "IL".scaler_14 + -6.535981832625284 * "IL".scaler_15 + -6.26944940857406 * "IL".scaler_16 + -6.569517587776983 * "IL".scaler_17 + -4.367779135964981 * "IL".scaler_18 + -3.802186132862252 * "IL".scaler_19 + -3.483250423040919 * "IL".scaler_20 + -10.122356835594427 * "IL".scaler_21 + 2.968174314379047 * "IL".scaler_22 + -0.15182489395290782 * "IL".scaler_23 + -0.7018981462148456 * "IL".scaler_24 + 1.8770762686436218 * "IL".scaler_25 + -2.394448493710024 * "IL".scaler_26 + 0.14553416078896358 * "IL".scaler_27 + -0.3404197797485362 * "IL".scaler_28 + 4.791967568206279 * "IL".scaler_29 + 8.137277986991686 * "IL".scaler_30 + -4.028837830562767 * "IL".scaler_31 + 4.347978954517314 * "IL".scaler_32 + 1.8223070303372104 * "IL".scaler_33 + 0.8924508519799591 * "IL".scaler_34 + 2.3115949019102913 * "IL".scaler_35 + 1.552372979669872 * "IL".scaler_36 + -5.676672346545127 * "IL".scaler_37 + 2.0442100389073907 * "IL".scaler_38 + -0.4437266652319743 * "IL".scaler_39 + 7.565818924645003 * "IL".scaler_40 + 0.9550171214366696 * "IL".scaler_41 + 1.6326131131597397 * "IL".scaler_42 + 2.076733641910651 * "IL".scaler_43 + -1.1573426033901768 * "IL".scaler_44 + -6.223606543429827 * "IL".scaler_45 + -10.54332344796908 * "IL".scaler_46 + -1.6731405769776915 * "IL".scaler_47 + -2.2947200997062005 * "IL".scaler_48 + 7.107379630036409 * "IL".scaler_49 + -0.7292095511431695 * "IL".scaler_50 + 0.5917036915203026 * "IL".scaler_51 + 1.9818741259683712 * "IL".scaler_52 + 0.7409458271375347 * "IL".scaler_53 + 0.3991942733769846 * "IL".scaler_54 + -2.410101130672098 * "IL".scaler_55 + -5.10688192963009 * "IL".scaler_56 + 3.7686152225487244 * "IL".scaler_57 + -2.776318175434998 * "IL".scaler_58 + -1.7920146568810809 * "IL".scaler_59 + 3.2749239941113535 * "IL".scaler_60 + -3.097843650276284 * "IL".scaler_61 + 0.14953121963587723 * "IL".scaler_62 + -8.335367534763106 * "IL".scaler_63 + 4.928422173450808 * "IL".scaler_64 + -0.06782454047554573 * "IL".scaler_65 + 2.147638916549701 * "IL".scaler_66 + 0.6267020423597691 * "IL".scaler_67 + 2.664309568492984 * "IL".scaler_68 + 3.0927925116962367 * "IL".scaler_69 + -3.9143517414293973 * "IL".scaler_70 + -1.50933644747922 * "IL".scaler_71 + 2.0155106105843457 * "IL".scaler_72 + 4.824544372511082 * "IL".scaler_73 + 5.233887700649583 * "IL".scaler_74 + -4.938017967511396 * "IL".scaler_75 + 3.1447458296020914 * "IL".scaler_76 + -4.972602240973698 * "IL".scaler_77 + 5.780452693516867 * "IL".scaler_78 + -5.543687261756613 * "IL".scaler_79 + -4.584004399930586 * "IL".scaler_80 + 5.821152771357001 * "IL".scaler_81 + 0.22811706405908028 * "IL".scaler_82 + 2.9493893552937136 * "IL".scaler_83 + 2.366275653175625 * "IL".scaler_84 + 0.44278126943819923 * "IL".scaler_85 + -2.9088723635806764 * "IL".scaler_86 + 3.939101147522817 * "IL".scaler_87 + -0.507701976625175 * "IL".scaler_88 + -0.16967279419110207 * "IL".scaler_89 + 0.9834172394647658 * "IL".scaler_90 + 3.8788710655250056 * "IL".scaler_91 + -6.6658056717971 * "IL".scaler_92 + 2.5048700160043795 * "IL".scaler_93 + 2.2490694209058044 * "IL".scaler_94 + 2.3995094598053823 * "IL".scaler_95 + 2.5015449687543074 * "IL".scaler_96 + -0.7756214073608855 * "IL".scaler_97 + 3.9098397633080406 * "IL".scaler_98 + 3.407802719061606 * "IL".scaler_99 + 4.04243265957705 * "IL".scaler_100 + 4.512137772503181 * "IL".scaler_101 + -4.612388181958938 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", greatest("HL_BA_1"."NEUR_1_1", 0) AS "NEUR_1_1", greatest("HL_BA_1"."NEUR_1_2", 0) AS "NEUR_1_2", greatest("HL_BA_1"."NEUR_1_3", 0) AS "NEUR_1_3" 
FROM "HL_BA_1")
 INSERT INTO "TMP_20221018185322_ZUQSFAJ_HL_1_relu_1" ("KEY", "NEUR_1_1", "NEUR_1_2", "NEUR_1_3") SELECT "T"."KEY", "T"."NEUR_1_1", "T"."NEUR_1_2", "T"."NEUR_1_3" 
FROM (SELECT "HL_1_relu_1"."KEY" AS "KEY", "HL_1_relu_1"."NEUR_1_1" AS "NEUR_1_1", "HL_1_relu_1"."NEUR_1_2" AS "NEUR_1_2", "HL_1_relu_1"."NEUR_1_3" AS "NEUR_1_3" 
FROM (SELECT "HL_1_relu"."KEY" AS "KEY", "HL_1_relu"."NEUR_1_1" AS "NEUR_1_1", "HL_1_relu"."NEUR_1_2" AS "NEUR_1_2", "HL_1_relu"."NEUR_1_3" AS "NEUR_1_3" 
FROM "HL_1_relu") AS "HL_1_relu_1") AS "T"

-- Code For temporary table TMP_20221018185322_ZUQSFAJ_HL_1_relu_1 part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185322_ZUQSFAJ_HL_1_relu_1_KEY" ON "TMP_20221018185322_ZUQSFAJ_HL_1_relu_1" ("KEY")

-- Code For temporary table TMP_20221018185322_30YE4F3_OL_softmax_1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185322_30YE4F3_OL_softmax_1" (
	"KEY" BIGINT NOT NULL, 
	"NEUR_3_1" DOUBLE, 
	"NEUR_3_2" DOUBLE, 
	"NEUR_3_3" DOUBLE, 
	"NEUR_3_4" DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185322_30YE4F3_OL_softmax_1 part 2. Populate

WITH "HL_BA_2" AS 
(SELECT "HL_1_relu_1"."KEY" AS "KEY", 0.10049889162123646 * "HL_1_relu_1"."NEUR_1_1" + -2.3218105618333085 * "HL_1_relu_1"."NEUR_1_2" + 8.884210485365143 * "HL_1_relu_1"."NEUR_1_3" + -8.882569834848258 AS "NEUR_2_1", -3.9479026372894404 * "HL_1_relu_1"."NEUR_1_1" + -17.061339264736468 * "HL_1_relu_1"."NEUR_1_2" + 12.351968094240407 * "HL_1_relu_1"."NEUR_1_3" + 30.72311488049496 AS "NEUR_2_2", -4.805257386192304 * "HL_1_relu_1"."NEUR_1_1" + 6.737353845993846 * "HL_1_relu_1"."NEUR_1_2" + 2.088070146091505 * "HL_1_relu_1"."NEUR_1_3" + -13.17266839960382 AS "NEUR_2_3", -0.2034266077277483 * "HL_1_relu_1"."NEUR_1_1" + 15.790082027587273 * "HL_1_relu_1"."NEUR_1_2" + -4.109195448646323 * "HL_1_relu_1"."NEUR_1_3" + 2.900630859990265 AS "NEUR_2_4", -0.6090189512097419 * "HL_1_relu_1"."NEUR_1_1" + -0.3774652917285245 * "HL_1_relu_1"."NEUR_1_2" + -0.6726395698486095 * "HL_1_relu_1"."NEUR_1_3" + -0.01807831622698608 AS "NEUR_2_5" 
FROM "TMP_20221018185322_ZUQSFAJ_HL_1_relu_1" AS "HL_1_relu_1"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", greatest("HL_BA_2"."NEUR_2_1", 0) AS "NEUR_2_1", greatest("HL_BA_2"."NEUR_2_2", 0) AS "NEUR_2_2", greatest("HL_BA_2"."NEUR_2_3", 0) AS "NEUR_2_3", greatest("HL_BA_2"."NEUR_2_4", 0) AS "NEUR_2_4", greatest("HL_BA_2"."NEUR_2_5", 0) AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", 4.829449437722921 * "HL_2_relu"."NEUR_2_1" + -26.546109985513127 * "HL_2_relu"."NEUR_2_2" + -13.021912317694747 * "HL_2_relu"."NEUR_2_3" + 11.542880936852242 * "HL_2_relu"."NEUR_2_4" + 0.5895715991186348 * "HL_2_relu"."NEUR_2_5" + 8.000302197682725 AS "NEUR_3_1", -2.8255643221455102 * "HL_2_relu"."NEUR_2_1" + 11.559079718019461 * "HL_2_relu"."NEUR_2_2" + -4.6878767417755105 * "HL_2_relu"."NEUR_2_3" + -21.76607788027899 * "HL_2_relu"."NEUR_2_4" + 0.3958913247423196 * "HL_2_relu"."NEUR_2_5" + 19.664314965968757 AS "NEUR_3_2", 6.5508077671673375 * "HL_2_relu"."NEUR_2_1" + 4.345237296972434 * "HL_2_relu"."NEUR_2_2" + 2.81575537020309 * "HL_2_relu"."NEUR_2_3" + 6.705059148661602 * "HL_2_relu"."NEUR_2_4" + 0.6631498536135084 * "HL_2_relu"."NEUR_2_5" + -4.669187493387151 AS "NEUR_3_3", -7.9387488954033785 * "HL_2_relu"."NEUR_2_1" + 11.006250986097548 * "HL_2_relu"."NEUR_2_2" + 14.102435708797277 * "HL_2_relu"."NEUR_2_3" + 3.2425164163987543 * "HL_2_relu"."NEUR_2_4" + -0.4852660509977454 * "HL_2_relu"."NEUR_2_5" + -24.31287988991921 AS "NEUR_3_4" 
FROM "HL_2_relu"), 
"OL_softmax" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1", "OL_BA"."NEUR_3_2" AS "NEUR_3_2", "OL_BA"."NEUR_3_3" AS "NEUR_3_3", "OL_BA"."NEUR_3_4" AS "NEUR_3_4" 
FROM "OL_BA")
 INSERT INTO "TMP_20221018185322_30YE4F3_OL_softmax_1" ("KEY", "NEUR_3_1", "NEUR_3_2", "NEUR_3_3", "NEUR_3_4") SELECT "T"."KEY", "T"."NEUR_3_1", "T"."NEUR_3_2", "T"."NEUR_3_3", "T"."NEUR_3_4" 
FROM (SELECT "OL_softmax_1"."KEY" AS "KEY", "OL_softmax_1"."NEUR_3_1" AS "NEUR_3_1", "OL_softmax_1"."NEUR_3_2" AS "NEUR_3_2", "OL_softmax_1"."NEUR_3_3" AS "NEUR_3_3", "OL_softmax_1"."NEUR_3_4" AS "NEUR_3_4" 
FROM (SELECT "OL_softmax"."KEY" AS "KEY", "OL_softmax"."NEUR_3_1" AS "NEUR_3_1", "OL_softmax"."NEUR_3_2" AS "NEUR_3_2", "OL_softmax"."NEUR_3_3" AS "NEUR_3_3", "OL_softmax"."NEUR_3_4" AS "NEUR_3_4" 
FROM "OL_softmax") AS "OL_softmax_1") AS "T"

-- Code For temporary table TMP_20221018185322_30YE4F3_OL_softmax_1 part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185322_30YE4F3_OL_softmax_1_KEY" ON "TMP_20221018185322_30YE4F3_OL_softmax_1" ("KEY")

-- Model deployment code

WITH orig_cte AS 
(SELECT "OL_softmax_1"."KEY" AS "KEY", "OL_softmax_1"."NEUR_3_1" AS "Score_0", "OL_softmax_1"."NEUR_3_2" AS "Score_1", "OL_softmax_1"."NEUR_3_3" AS "Score_2", "OL_softmax_1"."NEUR_3_4" AS "Score_3", CAST(NULL AS DOUBLE) AS "Proba_0", CAST(NULL AS DOUBLE) AS "Proba_1", CAST(NULL AS DOUBLE) AS "Proba_2", CAST(NULL AS DOUBLE) AS "Proba_3", CAST(NULL AS DOUBLE) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "LogProba_1", CAST(NULL AS DOUBLE) AS "LogProba_2", CAST(NULL AS DOUBLE) AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS DOUBLE) AS "DecisionProba" 
FROM "TMP_20221018185322_30YE4F3_OL_softmax_1" AS "OL_softmax_1"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(greatest(-100.0, score_max."Score_0" - score_max."max_Score")) AS "exp_delta_Score_0", exp(greatest(-100.0, score_max."Score_1" - score_max."max_Score")) AS "exp_delta_Score_1", exp(greatest(-100.0, score_max."Score_2" - score_max."max_Score")) AS "exp_delta_Score_2", exp(greatest(-100.0, score_max."Score_3" - score_max."max_Score")) AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS class, score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", max(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."Score" >= union_with_max."max_Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", CAST(NULL AS DOUBLE) AS "Score_1", CAST(NULL AS DOUBLE) AS "Score_2", CAST(NULL AS DOUBLE) AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE '-Infinity'::float8 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision", greatest(arg_max_cte."SoftProba_0", arg_max_cte."SoftProba_1", arg_max_cte."SoftProba_2", arg_max_cte."SoftProba_3") AS "DecisionProba" 
FROM arg_max_cte