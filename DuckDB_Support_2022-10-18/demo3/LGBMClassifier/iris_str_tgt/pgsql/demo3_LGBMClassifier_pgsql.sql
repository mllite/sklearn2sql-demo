-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : LGBMClassifier
-- Dataset : iris_str_tgt
-- Database : pgsql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018190636_3ZUNF38_LGBM_B0 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190636_3ZUNF38_LGBM_B0" (
	"KEY" BIGINT, 
	"Score_CLASS_0" FLOAT, 
	"Score_CLASS_1" FLOAT, 
	"Score_CLASS_2" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018190636_3ZUNF38_LGBM_B0 part 2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 2 ELSE 3 END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS nid, -1.0725789038113565 AS "Score" UNION ALL SELECT 3 AS nid, -1.2247666017833791 AS "Score") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."Score" AS "Score" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"LGBM_Model_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Score" AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 5.050000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 4 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.4500000000000002) THEN 10 ELSE 11 END END ELSE 3 END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS nid, -1.1486122886681098 AS "Score" UNION ALL SELECT 4 AS nid, -1.1446649202470571 AS "Score" UNION ALL SELECT 10 AS nid, -0.9986122886681098 AS "Score" UNION ALL SELECT 11 AS nid, -1.0557551458109669 AS "Score") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."Score" AS "Score" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"LGBM_Model_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", "DT_Output_1"."Score" AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.8500000000000005) THEN CASE WHEN ("ADS"."Feature_2" <= 4.250000000000001) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.9500000000000002) THEN 6 ELSE 7 END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 4 AS nid, -1.0782396760626975 AS "Score" UNION ALL SELECT 5 AS nid, -1.064432885513258 AS "Score" UNION ALL SELECT 6 AS nid, -0.95501407040895 AS "Score" UNION ALL SELECT 7 AS nid, -0.9332683752935828 AS "Score") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."Score" AS "Score" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"LGBM_Model_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", "DT_Output_2"."Score" AS "Score_CLASS_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 2 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.8500000000000005) THEN 6 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.550000000000001) THEN 14 ELSE 15 END END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS nid, 0.09359498705018211 AS "Score" UNION ALL SELECT 6 AS nid, -0.04723395913494894 AS "Score" UNION ALL SELECT 14 AS nid, -0.04698874621475085 AS "Score" UNION ALL SELECT 15 AS nid, -0.04717691313477149 AS "Score") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."Score" AS "Score" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"LGBM_Model_0_1" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Score" AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 1.8) THEN 2 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.8500000000000005) THEN CASE WHEN ("ADS"."Feature_0" <= 5.750000000000001) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.9500000000000002) THEN 14 ELSE 15 END END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS nid, -0.04888473590897671 AS "Score" UNION ALL SELECT 12 AS nid, 0.07152116079239727 AS "Score" UNION ALL SELECT 13 AS nid, 0.08558301823068587 AS "Score" UNION ALL SELECT 14 AS nid, -0.026669314845630416 AS "Score" UNION ALL SELECT 15 AS nid, -0.04884433530690241 AS "Score") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."Score" AS "Score" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"LGBM_Model_1_1" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", "DT_Output_4"."Score" AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.8500000000000005) THEN CASE WHEN ("ADS"."Feature_2" <= 4.250000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 1.8) THEN 8 ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.9500000000000002) THEN 6 ELSE 7 END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS nid, -0.03696039897275105 AS "Score" UNION ALL SELECT 6 AS nid, 0.06600625326049113 AS "Score" UNION ALL SELECT 7 AS nid, 0.08532926587355893 AS "Score" UNION ALL SELECT 8 AS nid, -0.050502984419675295 AS "Score" UNION ALL SELECT 9 AS nid, -0.050491732815137726 AS "Score") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."Score" AS "Score" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"LGBM_Model_2_1" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", "DT_Output_5"."Score" AS "Score_CLASS_2" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 2 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.8500000000000005) THEN 6 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.550000000000001) THEN 14 ELSE 15 END END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS nid, 0.08544669756163331 AS "Score" UNION ALL SELECT 6 AS nid, -0.046308551464330126 AS "Score" UNION ALL SELECT 14 AS nid, -0.04603542940492183 AS "Score" UNION ALL SELECT 15 AS nid, -0.0461895285938716 AS "Score") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."Score" AS "Score" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"LGBM_Model_0_2" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Score" AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.45000000000000007) THEN 2 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.8500000000000005) THEN CASE WHEN ("ADS"."Feature_0" <= 5.750000000000001) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.9500000000000002) THEN 14 ELSE 15 END END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS nid, -0.047896836952521976 AS "Score" UNION ALL SELECT 12 AS nid, 0.06668921583140804 AS "Score" UNION ALL SELECT 13 AS nid, 0.07864737037351849 AS "Score" UNION ALL SELECT 14 AS nid, -0.025583713449880155 AS "Score" UNION ALL SELECT 15 AS nid, -0.04765680379818889 AS "Score") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."Score" AS "Score" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"LGBM_Model_1_2" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", "DT_Output_7"."Score" AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.8500000000000005) THEN CASE WHEN ("ADS"."Feature_2" <= 4.250000000000001) THEN CASE WHEN ("ADS"."Feature_0" <= 5.150000000000001) THEN 8 ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.9500000000000002) THEN 6 ELSE 7 END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS nid, -0.03559897284378803 AS "Score" UNION ALL SELECT 6 AS nid, 0.06122488730021047 AS "Score" UNION ALL SELECT 7 AS nid, 0.07883917171934007 AS "Score" UNION ALL SELECT 8 AS nid, -0.04914497587937476 AS "Score" UNION ALL SELECT 9 AS nid, -0.049253072738880396 AS "Score") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."Score" AS "Score" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"LGBM_Model_2_2" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", "DT_Output_8"."Score" AS "Score_CLASS_2" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 2 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.8500000000000005) THEN 6 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.550000000000001) THEN 14 ELSE 15 END END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS nid, 0.07877884609969812 AS "Score" UNION ALL SELECT 6 AS nid, -0.04544632069307157 AS "Score" UNION ALL SELECT 14 AS nid, -0.04515701924794842 AS "Score" UNION ALL SELECT 15 AS nid, -0.045279222114659234 AS "Score") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."Score" AS "Score" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"LGBM_Model_0_3" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Score" AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_9")
 INSERT INTO "TMP_20221018190636_3ZUNF38_LGBM_B0" ("KEY", "Score_CLASS_0", "Score_CLASS_1", "Score_CLASS_2") SELECT "T"."KEY", "T"."Score_CLASS_0", "T"."Score_CLASS_1", "T"."Score_CLASS_2" 
FROM (SELECT "LGBM_B0"."KEY" AS "KEY", "LGBM_B0"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_B0"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_B0"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM (SELECT "LGBM_esu_0"."KEY" AS "KEY", "LGBM_esu_0"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_esu_0"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_esu_0"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM (SELECT "LGBM_Model_0_0"."KEY" AS "KEY", "LGBM_Model_0_0"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_0_0"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_0_0"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_0_0" UNION ALL SELECT "LGBM_Model_1_0"."KEY" AS "KEY", "LGBM_Model_1_0"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_1_0"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_1_0"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_1_0" UNION ALL SELECT "LGBM_Model_2_0"."KEY" AS "KEY", "LGBM_Model_2_0"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_2_0"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_2_0"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_2_0" UNION ALL SELECT "LGBM_Model_0_1"."KEY" AS "KEY", "LGBM_Model_0_1"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_0_1"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_0_1"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_0_1" UNION ALL SELECT "LGBM_Model_1_1"."KEY" AS "KEY", "LGBM_Model_1_1"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_1_1"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_1_1"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_1_1" UNION ALL SELECT "LGBM_Model_2_1"."KEY" AS "KEY", "LGBM_Model_2_1"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_2_1"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_2_1"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_2_1" UNION ALL SELECT "LGBM_Model_0_2"."KEY" AS "KEY", "LGBM_Model_0_2"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_0_2"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_0_2"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_0_2" UNION ALL SELECT "LGBM_Model_1_2"."KEY" AS "KEY", "LGBM_Model_1_2"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_1_2"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_1_2"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_1_2" UNION ALL SELECT "LGBM_Model_2_2"."KEY" AS "KEY", "LGBM_Model_2_2"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_2_2"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_2_2"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_2_2" UNION ALL SELECT "LGBM_Model_0_3"."KEY" AS "KEY", "LGBM_Model_0_3"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_0_3"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_0_3"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_0_3") AS "LGBM_esu_0") AS "LGBM_B0") AS "T"

-- Code For temporary table TMP_20221018190636_QJCVP07_LGBM_B1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190636_QJCVP07_LGBM_B1" (
	"KEY" BIGINT, 
	"Score_CLASS_0" FLOAT, 
	"Score_CLASS_1" FLOAT, 
	"Score_CLASS_2" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018190636_QJCVP07_LGBM_B1 part 2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 5.050000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 4 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.4500000000000002) THEN 10 ELSE 11 END END ELSE 3 END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS nid, -0.046880425755350584 AS "Score" UNION ALL SELECT 4 AS nid, -0.04279705585395582 AS "Score" UNION ALL SELECT 10 AS nid, 0.07852802054038804 AS "Score" UNION ALL SELECT 11 AS nid, 0.03611647202819481 AS "Score") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."Score" AS "Score" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"LGBM_Model_1_3" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", "DT_Output_10"."Score" AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.8500000000000005) THEN CASE WHEN ("ADS"."Feature_2" <= 4.250000000000001) THEN CASE WHEN ("ADS"."Feature_0" <= 5.150000000000001) THEN 8 ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.9500000000000002) THEN 6 ELSE 7 END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS nid, -0.0342895453842416 AS "Score" UNION ALL SELECT 6 AS nid, 0.05708361030534648 AS "Score" UNION ALL SELECT 7 AS nid, 0.07346199010382722 AS "Score" UNION ALL SELECT 8 AS nid, -0.04792151487600735 AS "Score" UNION ALL SELECT 9 AS nid, -0.04810674261085377 AS "Score") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."Score" AS "Score" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"LGBM_Model_2_3" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", "DT_Output_11"."Score" AS "Score_CLASS_2" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 2 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.8500000000000005) THEN 6 ELSE CASE WHEN ("ADS"."Feature_2" <= 5.550000000000001) THEN 14 ELSE 15 END END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS nid, 0.07311885928142865 AS "Score" UNION ALL SELECT 6 AS nid, -0.044665008716828866 AS "Score" UNION ALL SELECT 14 AS nid, -0.04426506305801862 AS "Score" UNION ALL SELECT 15 AS nid, -0.04447356776999875 AS "Score") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."Score" AS "Score" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"LGBM_Model_0_4" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."Score" AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.45000000000000007) THEN 2 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.6500000000000001) THEN CASE WHEN ("ADS"."Feature_0" <= 5.950000000000001) THEN 12 ELSE 13 END ELSE 7 END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS nid, -0.045964287942774865 AS "Score" UNION ALL SELECT 7 AS nid, -0.039419120655285994 AS "Score" UNION ALL SELECT 12 AS nid, 0.0660820557771981 AS "Score" UNION ALL SELECT 13 AS nid, 0.057097361419591486 AS "Score") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."Score" AS "Score" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"LGBM_Model_1_4" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", "DT_Output_13"."Score" AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 1.6500000000000001) THEN CASE WHEN ("ADS"."Feature_0" <= 5.950000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 8 ELSE 9 END ELSE 5 END ELSE 3 END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS nid, 0.06640135307622978 AS "Score" UNION ALL SELECT 5 AS nid, -0.023260204054418213 AS "Score" UNION ALL SELECT 8 AS nid, -0.046832607974451296 AS "Score" UNION ALL SELECT 9 AS nid, -0.04730328457527984 AS "Score") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."Score" AS "Score" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"LGBM_Model_2_4" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", "DT_Output_14"."Score" AS "Score_CLASS_2" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 2 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.9500000000000002) THEN CASE WHEN ("ADS"."Feature_0" <= 6.050000000000001) THEN 12 ELSE 13 END ELSE 7 END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS nid, 0.06847501582902453 AS "Score" UNION ALL SELECT 7 AS nid, -0.043517855883723956 AS "Score" UNION ALL SELECT 12 AS nid, -0.043996762312437605 AS "Score" UNION ALL SELECT 13 AS nid, -0.043730032078040215 AS "Score") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."Score" AS "Score" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"LGBM_Model_0_5" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."Score" AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_15"), 
"DT_node_lookup_16" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 5.050000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 1.8) THEN 4 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.4500000000000002) THEN 10 ELSE 11 END END ELSE 3 END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_16" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS nid, -0.04528453974694105 AS "Score" UNION ALL SELECT 4 AS nid, -0.04517182403951084 AS "Score" UNION ALL SELECT 10 AS nid, 0.06372784898049755 AS "Score" UNION ALL SELECT 11 AS nid, 0.033053000496566266 AS "Score") AS "Values"), 
"DT_Output_16" AS 
(SELECT "DT_node_lookup_16"."KEY" AS "KEY", "DT_node_lookup_16".node_id_2 AS node_id_2, "DT_node_data_16".nid AS nid, "DT_node_data_16"."Score" AS "Score" 
FROM "DT_node_lookup_16" LEFT OUTER JOIN "DT_node_data_16" ON "DT_node_lookup_16".node_id_2 = "DT_node_data_16".nid), 
"LGBM_Model_1_5" AS 
(SELECT "DT_Output_16"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", "DT_Output_16"."Score" AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_16"), 
"DT_node_lookup_17" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.8500000000000005) THEN CASE WHEN ("ADS"."Feature_2" <= 4.250000000000001) THEN CASE WHEN ("ADS"."Feature_0" <= 5.150000000000001) THEN 8 ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_2" <= 5.550000000000001) THEN 6 ELSE 7 END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_17" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS nid, -0.032682541855207255 AS "Score" UNION ALL SELECT 6 AS nid, 0.051912368215727395 AS "Score" UNION ALL SELECT 7 AS nid, 0.06675037497384309 AS "Score" UNION ALL SELECT 8 AS nid, -0.04580777468247998 AS "Score" UNION ALL SELECT 9 AS nid, -0.0460180153800408 AS "Score") AS "Values"), 
"DT_Output_17" AS 
(SELECT "DT_node_lookup_17"."KEY" AS "KEY", "DT_node_lookup_17".node_id_2 AS node_id_2, "DT_node_data_17".nid AS nid, "DT_node_data_17"."Score" AS "Score" 
FROM "DT_node_lookup_17" LEFT OUTER JOIN "DT_node_data_17" ON "DT_node_lookup_17".node_id_2 = "DT_node_data_17".nid), 
"LGBM_Model_2_5" AS 
(SELECT "DT_Output_17"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", "DT_Output_17"."Score" AS "Score_CLASS_2" 
FROM "DT_Output_17"), 
"DT_node_lookup_18" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 2 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.8500000000000005) THEN 6 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.9500000000000002) THEN 14 ELSE 15 END END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_18" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS nid, 0.06450947865249657 AS "Score" UNION ALL SELECT 6 AS nid, -0.04328087968922458 AS "Score" UNION ALL SELECT 14 AS nid, -0.04300426113125249 AS "Score" UNION ALL SELECT 15 AS nid, -0.04281000726589823 AS "Score") AS "Values"), 
"DT_Output_18" AS 
(SELECT "DT_node_lookup_18"."KEY" AS "KEY", "DT_node_lookup_18".node_id_2 AS node_id_2, "DT_node_data_18".nid AS nid, "DT_node_data_18"."Score" AS "Score" 
FROM "DT_node_lookup_18" LEFT OUTER JOIN "DT_node_data_18" ON "DT_node_lookup_18".node_id_2 = "DT_node_data_18".nid), 
"LGBM_Model_0_6" AS 
(SELECT "DT_Output_18"."KEY" AS "KEY", "DT_Output_18"."Score" AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_18"), 
"DT_node_lookup_19" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 5.050000000000001) THEN CASE WHEN ("ADS"."Feature_3" <= 0.45000000000000007) THEN 4 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.4500000000000002) THEN 10 ELSE 11 END END ELSE 3 END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_19" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS nid, -0.04444114457639038 AS "Score" UNION ALL SELECT 4 AS nid, -0.04434390169581921 AS "Score" UNION ALL SELECT 10 AS nid, 0.06026173886102955 AS "Score" UNION ALL SELECT 11 AS nid, 0.03126663834924019 AS "Score") AS "Values"), 
"DT_Output_19" AS 
(SELECT "DT_node_lookup_19"."KEY" AS "KEY", "DT_node_lookup_19".node_id_2 AS node_id_2, "DT_node_data_19".nid AS nid, "DT_node_data_19"."Score" AS "Score" 
FROM "DT_node_lookup_19" LEFT OUTER JOIN "DT_node_data_19" ON "DT_node_lookup_19".node_id_2 = "DT_node_data_19".nid), 
"LGBM_Model_1_6" AS 
(SELECT "DT_Output_19"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", "DT_Output_19"."Score" AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_19")
 INSERT INTO "TMP_20221018190636_QJCVP07_LGBM_B1" ("KEY", "Score_CLASS_0", "Score_CLASS_1", "Score_CLASS_2") SELECT "T"."KEY", "T"."Score_CLASS_0", "T"."Score_CLASS_1", "T"."Score_CLASS_2" 
FROM (SELECT "LGBM_B1"."KEY" AS "KEY", "LGBM_B1"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_B1"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_B1"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM (SELECT "LGBM_esu_1"."KEY" AS "KEY", "LGBM_esu_1"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_esu_1"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_esu_1"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM (SELECT "LGBM_Model_1_3"."KEY" AS "KEY", "LGBM_Model_1_3"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_1_3"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_1_3"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_1_3" UNION ALL SELECT "LGBM_Model_2_3"."KEY" AS "KEY", "LGBM_Model_2_3"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_2_3"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_2_3"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_2_3" UNION ALL SELECT "LGBM_Model_0_4"."KEY" AS "KEY", "LGBM_Model_0_4"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_0_4"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_0_4"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_0_4" UNION ALL SELECT "LGBM_Model_1_4"."KEY" AS "KEY", "LGBM_Model_1_4"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_1_4"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_1_4"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_1_4" UNION ALL SELECT "LGBM_Model_2_4"."KEY" AS "KEY", "LGBM_Model_2_4"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_2_4"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_2_4"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_2_4" UNION ALL SELECT "LGBM_Model_0_5"."KEY" AS "KEY", "LGBM_Model_0_5"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_0_5"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_0_5"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_0_5" UNION ALL SELECT "LGBM_Model_1_5"."KEY" AS "KEY", "LGBM_Model_1_5"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_1_5"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_1_5"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_1_5" UNION ALL SELECT "LGBM_Model_2_5"."KEY" AS "KEY", "LGBM_Model_2_5"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_2_5"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_2_5"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_2_5" UNION ALL SELECT "LGBM_Model_0_6"."KEY" AS "KEY", "LGBM_Model_0_6"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_0_6"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_0_6"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_0_6" UNION ALL SELECT "LGBM_Model_1_6"."KEY" AS "KEY", "LGBM_Model_1_6"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_1_6"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_1_6"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_1_6") AS "LGBM_esu_1") AS "LGBM_B1") AS "T"

-- Code For temporary table TMP_20221018190636_UKPTB0N_LGBM_B2 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190636_UKPTB0N_LGBM_B2" (
	"KEY" BIGINT, 
	"Score_CLASS_0" FLOAT, 
	"Score_CLASS_1" FLOAT, 
	"Score_CLASS_2" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018190636_UKPTB0N_LGBM_B2 part 2. Populate

WITH "DT_node_lookup_20" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.8500000000000005) THEN CASE WHEN ("ADS"."Feature_2" <= 4.250000000000001) THEN CASE WHEN ("ADS"."Feature_0" <= 5.150000000000001) THEN 8 ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.9500000000000002) THEN 6 ELSE 7 END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_20" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS nid, -0.03168788812468845 AS "Score" UNION ALL SELECT 6 AS nid, 0.048277410928501074 AS "Score" UNION ALL SELECT 7 AS nid, 0.06234781140686793 AS "Score" UNION ALL SELECT 8 AS nid, -0.0448755085735177 AS "Score" UNION ALL SELECT 9 AS nid, -0.04511136218621906 AS "Score") AS "Values"), 
"DT_Output_20" AS 
(SELECT "DT_node_lookup_20"."KEY" AS "KEY", "DT_node_lookup_20".node_id_2 AS node_id_2, "DT_node_data_20".nid AS nid, "DT_node_data_20"."Score" AS "Score" 
FROM "DT_node_lookup_20" LEFT OUTER JOIN "DT_node_data_20" ON "DT_node_lookup_20".node_id_2 = "DT_node_data_20".nid), 
"LGBM_Model_2_6" AS 
(SELECT "DT_Output_20"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", "DT_Output_20"."Score" AS "Score_CLASS_2" 
FROM "DT_Output_20"), 
"DT_node_lookup_21" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 2 ELSE CASE WHEN ("ADS"."Feature_2" <= 4.8500000000000005) THEN 6 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.9500000000000002) THEN 14 ELSE 15 END END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_21" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS nid, 0.061097106466340395 AS "Score" UNION ALL SELECT 6 AS nid, -0.04267465345723612 AS "Score" UNION ALL SELECT 14 AS nid, -0.04237309629247024 AS "Score" UNION ALL SELECT 15 AS nid, -0.04212656703006955 AS "Score") AS "Values"), 
"DT_Output_21" AS 
(SELECT "DT_node_lookup_21"."KEY" AS "KEY", "DT_node_lookup_21".node_id_2 AS node_id_2, "DT_node_data_21".nid AS nid, "DT_node_data_21"."Score" AS "Score" 
FROM "DT_node_lookup_21" LEFT OUTER JOIN "DT_node_data_21" ON "DT_node_lookup_21".node_id_2 = "DT_node_data_21".nid), 
"LGBM_Model_0_7" AS 
(SELECT "DT_Output_21"."KEY" AS "KEY", "DT_Output_21"."Score" AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_21"), 
"DT_node_lookup_22" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 5.050000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 1.8) THEN 4 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.4500000000000002) THEN 10 ELSE 11 END END ELSE 3 END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_22" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS nid, -0.04367376430300085 AS "Score" UNION ALL SELECT 4 AS nid, -0.04367136862954955 AS "Score" UNION ALL SELECT 10 AS nid, 0.05757289662621171 AS "Score" UNION ALL SELECT 11 AS nid, 0.029655934826405102 AS "Score") AS "Values"), 
"DT_Output_22" AS 
(SELECT "DT_node_lookup_22"."KEY" AS "KEY", "DT_node_lookup_22".node_id_2 AS node_id_2, "DT_node_data_22".nid AS nid, "DT_node_data_22"."Score" AS "Score" 
FROM "DT_node_lookup_22" LEFT OUTER JOIN "DT_node_data_22" ON "DT_node_lookup_22".node_id_2 = "DT_node_data_22".nid), 
"LGBM_Model_1_7" AS 
(SELECT "DT_Output_22"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", "DT_Output_22"."Score" AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_22"), 
"DT_node_lookup_23" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 1.6500000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 4.450000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 8 ELSE 9 END ELSE 5 END ELSE 3 END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_23" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS nid, 0.05733004445704255 AS "Score" UNION ALL SELECT 5 AS nid, -0.020077515552878063 AS "Score" UNION ALL SELECT 8 AS nid, -0.04403475826656153 AS "Score" UNION ALL SELECT 9 AS nid, -0.044563944377176645 AS "Score") AS "Values"), 
"DT_Output_23" AS 
(SELECT "DT_node_lookup_23"."KEY" AS "KEY", "DT_node_lookup_23".node_id_2 AS node_id_2, "DT_node_data_23".nid AS nid, "DT_node_data_23"."Score" AS "Score" 
FROM "DT_node_lookup_23" LEFT OUTER JOIN "DT_node_data_23" ON "DT_node_lookup_23".node_id_2 = "DT_node_data_23".nid), 
"LGBM_Model_2_7" AS 
(SELECT "DT_Output_23"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", "DT_Output_23"."Score" AS "Score_CLASS_2" 
FROM "DT_Output_23"), 
"DT_node_lookup_24" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 2 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.9500000000000002) THEN CASE WHEN ("ADS"."Feature_3" <= 1.4500000000000002) THEN 12 ELSE 13 END ELSE 7 END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_24" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS nid, 0.058125069783449126 AS "Score" UNION ALL SELECT 7 AS nid, -0.041509325980505246 AS "Score" UNION ALL SELECT 12 AS nid, -0.04182468905845086 AS "Score" UNION ALL SELECT 13 AS nid, -0.04214572009777749 AS "Score") AS "Values"), 
"DT_Output_24" AS 
(SELECT "DT_node_lookup_24"."KEY" AS "KEY", "DT_node_lookup_24".node_id_2 AS node_id_2, "DT_node_data_24".nid AS nid, "DT_node_data_24"."Score" AS "Score" 
FROM "DT_node_lookup_24" LEFT OUTER JOIN "DT_node_data_24" ON "DT_node_lookup_24".node_id_2 = "DT_node_data_24".nid), 
"LGBM_Model_0_8" AS 
(SELECT "DT_Output_24"."KEY" AS "KEY", "DT_Output_24"."Score" AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_24"), 
"DT_node_lookup_25" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 5.050000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 1.8) THEN 4 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.4500000000000002) THEN 10 ELSE 11 END END ELSE 3 END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_25" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS nid, -0.043009328721651224 AS "Score" UNION ALL SELECT 4 AS nid, -0.04295203303997658 AS "Score" UNION ALL SELECT 10 AS nid, 0.05488841251343207 AS "Score" UNION ALL SELECT 11 AS nid, 0.028325760662625918 AS "Score") AS "Values"), 
"DT_Output_25" AS 
(SELECT "DT_node_lookup_25"."KEY" AS "KEY", "DT_node_lookup_25".node_id_2 AS node_id_2, "DT_node_data_25".nid AS nid, "DT_node_data_25"."Score" AS "Score" 
FROM "DT_node_lookup_25" LEFT OUTER JOIN "DT_node_data_25" ON "DT_node_lookup_25".node_id_2 = "DT_node_data_25".nid), 
"LGBM_Model_1_8" AS 
(SELECT "DT_Output_25"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", "DT_Output_25"."Score" AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_25"), 
"DT_node_lookup_26" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 1.6500000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 4.450000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 8 ELSE 9 END ELSE 5 END ELSE 3 END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_26" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS nid, 0.05485023759942131 AS "Score" UNION ALL SELECT 5 AS nid, -0.019533941576350772 AS "Score" UNION ALL SELECT 8 AS nid, -0.04325661517013361 AS "Score" UNION ALL SELECT 9 AS nid, -0.043771588240706316 AS "Score") AS "Values"), 
"DT_Output_26" AS 
(SELECT "DT_node_lookup_26"."KEY" AS "KEY", "DT_node_lookup_26".node_id_2 AS node_id_2, "DT_node_data_26".nid AS nid, "DT_node_data_26"."Score" AS "Score" 
FROM "DT_node_lookup_26" LEFT OUTER JOIN "DT_node_data_26" ON "DT_node_lookup_26".node_id_2 = "DT_node_data_26".nid), 
"LGBM_Model_2_8" AS 
(SELECT "DT_Output_26"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", "DT_Output_26"."Score" AS "Score_CLASS_2" 
FROM "DT_Output_26"), 
"DT_node_lookup_27" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 2 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.9500000000000002) THEN CASE WHEN ("ADS"."Feature_3" <= 1.4500000000000002) THEN 12 ELSE 13 END ELSE 7 END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_27" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS nid, 0.05552405167894493 AS "Score" UNION ALL SELECT 7 AS nid, -0.04093940325671748 AS "Score" UNION ALL SELECT 12 AS nid, -0.041277565376838486 AS "Score" UNION ALL SELECT 13 AS nid, -0.041630519849428914 AS "Score") AS "Values"), 
"DT_Output_27" AS 
(SELECT "DT_node_lookup_27"."KEY" AS "KEY", "DT_node_lookup_27".node_id_2 AS node_id_2, "DT_node_data_27".nid AS nid, "DT_node_data_27"."Score" AS "Score" 
FROM "DT_node_lookup_27" LEFT OUTER JOIN "DT_node_data_27" ON "DT_node_lookup_27".node_id_2 = "DT_node_data_27".nid), 
"LGBM_Model_0_9" AS 
(SELECT "DT_Output_27"."KEY" AS "KEY", "DT_Output_27"."Score" AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_27"), 
"DT_node_lookup_28" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 5.050000000000001) THEN CASE WHEN ("ADS"."Feature_3" <= 0.45000000000000007) THEN 4 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.4500000000000002) THEN 10 ELSE 11 END END ELSE 3 END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_28" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS nid, -0.04239976615590266 AS "Score" UNION ALL SELECT 4 AS nid, -0.04238215101163526 AS "Score" UNION ALL SELECT 10 AS nid, 0.05283598476198679 AS "Score" UNION ALL SELECT 11 AS nid, 0.027096151122974685 AS "Score") AS "Values"), 
"DT_Output_28" AS 
(SELECT "DT_node_lookup_28"."KEY" AS "KEY", "DT_node_lookup_28".node_id_2 AS node_id_2, "DT_node_data_28".nid AS nid, "DT_node_data_28"."Score" AS "Score" 
FROM "DT_node_lookup_28" LEFT OUTER JOIN "DT_node_data_28" ON "DT_node_lookup_28".node_id_2 = "DT_node_data_28".nid), 
"LGBM_Model_1_9" AS 
(SELECT "DT_Output_28"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", "DT_Output_28"."Score" AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_28"), 
"DT_node_lookup_29" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.8500000000000005) THEN CASE WHEN ("ADS"."Feature_3" <= 1.3500000000000003) THEN CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 8 ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_2" <= 5.550000000000001) THEN 6 ELSE 7 END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_29" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS nid, -0.0273823298868501 AS "Score" UNION ALL SELECT 6 AS nid, 0.043080469501842154 AS "Score" UNION ALL SELECT 7 AS nid, 0.05599408321194959 AS "Score" UNION ALL SELECT 8 AS nid, -0.04254259711476661 AS "Score" UNION ALL SELECT 9 AS nid, -0.0430444653701136 AS "Score") AS "Values"), 
"DT_Output_29" AS 
(SELECT "DT_node_lookup_29"."KEY" AS "KEY", "DT_node_lookup_29".node_id_2 AS node_id_2, "DT_node_data_29".nid AS nid, "DT_node_data_29"."Score" AS "Score" 
FROM "DT_node_lookup_29" LEFT OUTER JOIN "DT_node_data_29" ON "DT_node_lookup_29".node_id_2 = "DT_node_data_29".nid), 
"LGBM_Model_2_9" AS 
(SELECT "DT_Output_29"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", "DT_Output_29"."Score" AS "Score_CLASS_2" 
FROM "DT_Output_29")
 INSERT INTO "TMP_20221018190636_UKPTB0N_LGBM_B2" ("KEY", "Score_CLASS_0", "Score_CLASS_1", "Score_CLASS_2") SELECT "T"."KEY", "T"."Score_CLASS_0", "T"."Score_CLASS_1", "T"."Score_CLASS_2" 
FROM (SELECT "LGBM_B2"."KEY" AS "KEY", "LGBM_B2"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_B2"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_B2"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM (SELECT "LGBM_esu_2"."KEY" AS "KEY", "LGBM_esu_2"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_esu_2"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_esu_2"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM (SELECT "LGBM_Model_2_6"."KEY" AS "KEY", "LGBM_Model_2_6"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_2_6"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_2_6"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_2_6" UNION ALL SELECT "LGBM_Model_0_7"."KEY" AS "KEY", "LGBM_Model_0_7"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_0_7"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_0_7"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_0_7" UNION ALL SELECT "LGBM_Model_1_7"."KEY" AS "KEY", "LGBM_Model_1_7"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_1_7"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_1_7"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_1_7" UNION ALL SELECT "LGBM_Model_2_7"."KEY" AS "KEY", "LGBM_Model_2_7"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_2_7"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_2_7"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_2_7" UNION ALL SELECT "LGBM_Model_0_8"."KEY" AS "KEY", "LGBM_Model_0_8"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_0_8"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_0_8"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_0_8" UNION ALL SELECT "LGBM_Model_1_8"."KEY" AS "KEY", "LGBM_Model_1_8"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_1_8"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_1_8"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_1_8" UNION ALL SELECT "LGBM_Model_2_8"."KEY" AS "KEY", "LGBM_Model_2_8"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_2_8"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_2_8"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_2_8" UNION ALL SELECT "LGBM_Model_0_9"."KEY" AS "KEY", "LGBM_Model_0_9"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_0_9"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_0_9"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_0_9" UNION ALL SELECT "LGBM_Model_1_9"."KEY" AS "KEY", "LGBM_Model_1_9"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_1_9"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_1_9"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_1_9" UNION ALL SELECT "LGBM_Model_2_9"."KEY" AS "KEY", "LGBM_Model_2_9"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_2_9"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_2_9"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_2_9") AS "LGBM_esu_2") AS "LGBM_B2") AS "T"

-- Code For temporary table TMP_20221018190636_C5DHEVA_LGBM_B3 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190636_C5DHEVA_LGBM_B3" (
	"KEY" BIGINT, 
	"Score_CLASS_0" FLOAT, 
	"Score_CLASS_1" FLOAT, 
	"Score_CLASS_2" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018190636_C5DHEVA_LGBM_B3 part 2. Populate

WITH "DT_node_lookup_30" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 2 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.9500000000000002) THEN CASE WHEN ("ADS"."Feature_3" <= 1.4500000000000002) THEN 12 ELSE 13 END ELSE 7 END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_30" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS nid, 0.053222364763404764 AS "Score" UNION ALL SELECT 7 AS nid, -0.04042291444231955 AS "Score" UNION ALL SELECT 12 AS nid, -0.04075019823470703 AS "Score" UNION ALL SELECT 13 AS nid, -0.04114621630292555 AS "Score") AS "Values"), 
"DT_Output_30" AS 
(SELECT "DT_node_lookup_30"."KEY" AS "KEY", "DT_node_lookup_30".node_id_2 AS node_id_2, "DT_node_data_30".nid AS nid, "DT_node_data_30"."Score" AS "Score" 
FROM "DT_node_lookup_30" LEFT OUTER JOIN "DT_node_data_30" ON "DT_node_lookup_30".node_id_2 = "DT_node_data_30".nid), 
"LGBM_Model_0_10" AS 
(SELECT "DT_Output_30"."KEY" AS "KEY", "DT_Output_30"."Score" AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_30"), 
"DT_node_lookup_31" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 5.050000000000001) THEN CASE WHEN ("ADS"."Feature_3" <= 0.45000000000000007) THEN 4 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.4500000000000002) THEN 10 ELSE 11 END END ELSE 3 END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_31" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS nid, -0.04178201455589917 AS "Score" UNION ALL SELECT 4 AS nid, -0.04175899633900593 AS "Score" UNION ALL SELECT 10 AS nid, 0.05070343645308957 AS "Score" UNION ALL SELECT 11 AS nid, 0.025803893429204968 AS "Score") AS "Values"), 
"DT_Output_31" AS 
(SELECT "DT_node_lookup_31"."KEY" AS "KEY", "DT_node_lookup_31".node_id_2 AS node_id_2, "DT_node_data_31".nid AS nid, "DT_node_data_31"."Score" AS "Score" 
FROM "DT_node_lookup_31" LEFT OUTER JOIN "DT_node_data_31" ON "DT_node_lookup_31".node_id_2 = "DT_node_data_31".nid), 
"LGBM_Model_1_10" AS 
(SELECT "DT_Output_31"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", "DT_Output_31"."Score" AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_31"), 
"DT_node_lookup_32" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 1.6500000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 4.450000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 8 ELSE 9 END ELSE 5 END ELSE 3 END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_32" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS nid, 0.05103273624623206 AS "Score" UNION ALL SELECT 5 AS nid, -0.01914149466823603 AS "Score" UNION ALL SELECT 8 AS nid, -0.041886347603138356 AS "Score" UNION ALL SELECT 9 AS nid, -0.042397156253490526 AS "Score") AS "Values"), 
"DT_Output_32" AS 
(SELECT "DT_node_lookup_32"."KEY" AS "KEY", "DT_node_lookup_32".node_id_2 AS node_id_2, "DT_node_data_32".nid AS nid, "DT_node_data_32"."Score" AS "Score" 
FROM "DT_node_lookup_32" LEFT OUTER JOIN "DT_node_data_32" ON "DT_node_lookup_32".node_id_2 = "DT_node_data_32".nid), 
"LGBM_Model_2_10" AS 
(SELECT "DT_Output_32"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", "DT_Output_32"."Score" AS "Score_CLASS_2" 
FROM "DT_Output_32"), 
"DT_node_lookup_33" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 2 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.6500000000000001) THEN CASE WHEN ("ADS"."Feature_3" <= 1.3500000000000003) THEN 12 ELSE 13 END ELSE 7 END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_33" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS nid, 0.05117991802172668 AS "Score" UNION ALL SELECT 7 AS nid, -0.040069773441922474 AS "Score" UNION ALL SELECT 12 AS nid, -0.04025590767766538 AS "Score" UNION ALL SELECT 13 AS nid, -0.04093363801885829 AS "Score") AS "Values"), 
"DT_Output_33" AS 
(SELECT "DT_node_lookup_33"."KEY" AS "KEY", "DT_node_lookup_33".node_id_2 AS node_id_2, "DT_node_data_33".nid AS nid, "DT_node_data_33"."Score" AS "Score" 
FROM "DT_node_lookup_33" LEFT OUTER JOIN "DT_node_data_33" ON "DT_node_lookup_33".node_id_2 = "DT_node_data_33".nid), 
"LGBM_Model_0_11" AS 
(SELECT "DT_Output_33"."KEY" AS "KEY", "DT_Output_33"."Score" AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_33"), 
"DT_node_lookup_34" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 1.8) THEN 2 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.6500000000000001) THEN CASE WHEN ("ADS"."Feature_0" <= 5.950000000000001) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.9500000000000002) THEN 14 ELSE 15 END END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_34" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS nid, -0.041274919374709534 AS "Score" UNION ALL SELECT 12 AS nid, 0.04865477056959784 AS "Score" UNION ALL SELECT 13 AS nid, 0.04270936502171585 AS "Score" UNION ALL SELECT 14 AS nid, -0.02745210838435439 AS "Score" UNION ALL SELECT 15 AS nid, -0.04127824511565989 AS "Score") AS "Values"), 
"DT_Output_34" AS 
(SELECT "DT_node_lookup_34"."KEY" AS "KEY", "DT_node_lookup_34".node_id_2 AS node_id_2, "DT_node_data_34".nid AS nid, "DT_node_data_34"."Score" AS "Score" 
FROM "DT_node_lookup_34" LEFT OUTER JOIN "DT_node_data_34" ON "DT_node_lookup_34".node_id_2 = "DT_node_data_34".nid), 
"LGBM_Model_1_11" AS 
(SELECT "DT_Output_34"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", "DT_Output_34"."Score" AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_34"), 
"DT_node_lookup_35" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 1.6500000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 4.450000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 8 ELSE 9 END ELSE 5 END ELSE 3 END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_35" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS nid, 0.04925172798061002 AS "Score" UNION ALL SELECT 5 AS nid, -0.018627025758374084 AS "Score" UNION ALL SELECT 8 AS nid, -0.04128241827300649 AS "Score" UNION ALL SELECT 9 AS nid, -0.04177391432223283 AS "Score") AS "Values"), 
"DT_Output_35" AS 
(SELECT "DT_node_lookup_35"."KEY" AS "KEY", "DT_node_lookup_35".node_id_2 AS node_id_2, "DT_node_data_35".nid AS nid, "DT_node_data_35"."Score" AS "Score" 
FROM "DT_node_lookup_35" LEFT OUTER JOIN "DT_node_data_35" ON "DT_node_lookup_35".node_id_2 = "DT_node_data_35".nid), 
"LGBM_Model_2_11" AS 
(SELECT "DT_Output_35"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", "DT_Output_35"."Score" AS "Score_CLASS_2" 
FROM "DT_Output_35"), 
"DT_node_lookup_36" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 2 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.6500000000000001) THEN CASE WHEN ("ADS"."Feature_1" <= 2.7500000000000004) THEN 12 ELSE 13 END ELSE 7 END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_36" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS nid, 0.04934792633320993 AS "Score" UNION ALL SELECT 7 AS nid, -0.03963064021208166 AS "Score" UNION ALL SELECT 12 AS nid, -0.039987284030206106 AS "Score" UNION ALL SELECT 13 AS nid, -0.04033889791080418 AS "Score") AS "Values"), 
"DT_Output_36" AS 
(SELECT "DT_node_lookup_36"."KEY" AS "KEY", "DT_node_lookup_36".node_id_2 AS node_id_2, "DT_node_data_36".nid AS nid, "DT_node_data_36"."Score" AS "Score" 
FROM "DT_node_lookup_36" LEFT OUTER JOIN "DT_node_data_36" ON "DT_node_lookup_36".node_id_2 = "DT_node_data_36".nid), 
"LGBM_Model_0_12" AS 
(SELECT "DT_Output_36"."KEY" AS "KEY", "DT_Output_36"."Score" AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_36"), 
"DT_node_lookup_37" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 5.050000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 1.8) THEN 4 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.4500000000000002) THEN 10 ELSE 11 END END ELSE 3 END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_37" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS nid, -0.04094683987094951 AS "Score" UNION ALL SELECT 4 AS nid, -0.04073437006717237 AS "Score" UNION ALL SELECT 10 AS nid, 0.04744012818772769 AS "Score" UNION ALL SELECT 11 AS nid, 0.02427955144125594 AS "Score") AS "Values"), 
"DT_Output_37" AS 
(SELECT "DT_node_lookup_37"."KEY" AS "KEY", "DT_node_lookup_37".node_id_2 AS node_id_2, "DT_node_data_37".nid AS nid, "DT_node_data_37"."Score" AS "Score" 
FROM "DT_node_lookup_37" LEFT OUTER JOIN "DT_node_data_37" ON "DT_node_lookup_37".node_id_2 = "DT_node_data_37".nid), 
"LGBM_Model_1_12" AS 
(SELECT "DT_Output_37"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", "DT_Output_37"."Score" AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_37"), 
"DT_node_lookup_38" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.750000000000001) THEN CASE WHEN ("ADS"."Feature_1" <= 2.7500000000000004) THEN 4 ELSE CASE WHEN ("ADS"."Feature_2" <= 1.8) THEN 10 ELSE 11 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 5.3500000000000005) THEN 6 ELSE 7 END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_38" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 4 AS nid, -0.031351648229417016 AS "Score" UNION ALL SELECT 6 AS nid, 0.03192542853458112 AS "Score" UNION ALL SELECT 7 AS nid, 0.05092126992770805 AS "Score" UNION ALL SELECT 10 AS nid, -0.04081264124807607 AS "Score" UNION ALL SELECT 11 AS nid, -0.042992022728645905 AS "Score") AS "Values"), 
"DT_Output_38" AS 
(SELECT "DT_node_lookup_38"."KEY" AS "KEY", "DT_node_lookup_38".node_id_2 AS node_id_2, "DT_node_data_38".nid AS nid, "DT_node_data_38"."Score" AS "Score" 
FROM "DT_node_lookup_38" LEFT OUTER JOIN "DT_node_data_38" ON "DT_node_lookup_38".node_id_2 = "DT_node_data_38".nid), 
"LGBM_Model_2_12" AS 
(SELECT "DT_Output_38"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", "DT_Output_38"."Score" AS "Score_CLASS_2" 
FROM "DT_Output_38"), 
"DT_node_lookup_39" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 2 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.6500000000000001) THEN CASE WHEN ("ADS"."Feature_1" <= 2.7500000000000004) THEN 12 ELSE 13 END ELSE 7 END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_39" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS nid, 0.04770635479301683 AS "Score" UNION ALL SELECT 7 AS nid, -0.03922459905523648 AS "Score" UNION ALL SELECT 12 AS nid, -0.039550904190829066 AS "Score" UNION ALL SELECT 13 AS nid, -0.03996189529998851 AS "Score") AS "Values"), 
"DT_Output_39" AS 
(SELECT "DT_node_lookup_39"."KEY" AS "KEY", "DT_node_lookup_39".node_id_2 AS node_id_2, "DT_node_data_39".nid AS nid, "DT_node_data_39"."Score" AS "Score" 
FROM "DT_node_lookup_39" LEFT OUTER JOIN "DT_node_data_39" ON "DT_node_lookup_39".node_id_2 = "DT_node_data_39".nid), 
"LGBM_Model_0_13" AS 
(SELECT "DT_Output_39"."KEY" AS "KEY", "DT_Output_39"."Score" AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_39")
 INSERT INTO "TMP_20221018190636_C5DHEVA_LGBM_B3" ("KEY", "Score_CLASS_0", "Score_CLASS_1", "Score_CLASS_2") SELECT "T"."KEY", "T"."Score_CLASS_0", "T"."Score_CLASS_1", "T"."Score_CLASS_2" 
FROM (SELECT "LGBM_B3"."KEY" AS "KEY", "LGBM_B3"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_B3"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_B3"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM (SELECT "LGBM_esu_3"."KEY" AS "KEY", "LGBM_esu_3"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_esu_3"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_esu_3"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM (SELECT "LGBM_Model_0_10"."KEY" AS "KEY", "LGBM_Model_0_10"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_0_10"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_0_10"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_0_10" UNION ALL SELECT "LGBM_Model_1_10"."KEY" AS "KEY", "LGBM_Model_1_10"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_1_10"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_1_10"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_1_10" UNION ALL SELECT "LGBM_Model_2_10"."KEY" AS "KEY", "LGBM_Model_2_10"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_2_10"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_2_10"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_2_10" UNION ALL SELECT "LGBM_Model_0_11"."KEY" AS "KEY", "LGBM_Model_0_11"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_0_11"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_0_11"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_0_11" UNION ALL SELECT "LGBM_Model_1_11"."KEY" AS "KEY", "LGBM_Model_1_11"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_1_11"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_1_11"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_1_11" UNION ALL SELECT "LGBM_Model_2_11"."KEY" AS "KEY", "LGBM_Model_2_11"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_2_11"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_2_11"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_2_11" UNION ALL SELECT "LGBM_Model_0_12"."KEY" AS "KEY", "LGBM_Model_0_12"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_0_12"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_0_12"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_0_12" UNION ALL SELECT "LGBM_Model_1_12"."KEY" AS "KEY", "LGBM_Model_1_12"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_1_12"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_1_12"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_1_12" UNION ALL SELECT "LGBM_Model_2_12"."KEY" AS "KEY", "LGBM_Model_2_12"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_2_12"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_2_12"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_2_12" UNION ALL SELECT "LGBM_Model_0_13"."KEY" AS "KEY", "LGBM_Model_0_13"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_0_13"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_0_13"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_0_13") AS "LGBM_esu_3") AS "LGBM_B3") AS "T"

-- Code For temporary table TMP_20221018190636_U1T81LX_LGBM_B4 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190636_U1T81LX_LGBM_B4" (
	"KEY" BIGINT, 
	"Score_CLASS_0" FLOAT, 
	"Score_CLASS_1" FLOAT, 
	"Score_CLASS_2" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018190636_U1T81LX_LGBM_B4 part 2. Populate

WITH "DT_node_lookup_40" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 5.050000000000001) THEN CASE WHEN ("ADS"."Feature_3" <= 0.45000000000000007) THEN 4 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.4500000000000002) THEN 10 ELSE 11 END END ELSE 3 END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_40" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS nid, -0.040448243524624464 AS "Score" UNION ALL SELECT 4 AS nid, -0.04032694506221224 AS "Score" UNION ALL SELECT 10 AS nid, 0.04620892252467809 AS "Score" UNION ALL SELECT 11 AS nid, 0.023112037599982302 AS "Score") AS "Values"), 
"DT_Output_40" AS 
(SELECT "DT_node_lookup_40"."KEY" AS "KEY", "DT_node_lookup_40".node_id_2 AS node_id_2, "DT_node_data_40".nid AS nid, "DT_node_data_40"."Score" AS "Score" 
FROM "DT_node_lookup_40" LEFT OUTER JOIN "DT_node_data_40" ON "DT_node_lookup_40".node_id_2 = "DT_node_data_40".nid), 
"LGBM_Model_1_13" AS 
(SELECT "DT_Output_40"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", "DT_Output_40"."Score" AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_40"), 
"DT_node_lookup_41" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 1.6500000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 4.450000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 8 ELSE 9 END ELSE 5 END ELSE 3 END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_41" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS nid, 0.0461385652865441 AS "Score" UNION ALL SELECT 5 AS nid, -0.017565375490564805 AS "Score" UNION ALL SELECT 8 AS nid, -0.040214060903720955 AS "Score" UNION ALL SELECT 9 AS nid, -0.04071292542266822 AS "Score") AS "Values"), 
"DT_Output_41" AS 
(SELECT "DT_node_lookup_41"."KEY" AS "KEY", "DT_node_lookup_41".node_id_2 AS node_id_2, "DT_node_data_41".nid AS nid, "DT_node_data_41"."Score" AS "Score" 
FROM "DT_node_lookup_41" LEFT OUTER JOIN "DT_node_data_41" ON "DT_node_lookup_41".node_id_2 = "DT_node_data_41".nid), 
"LGBM_Model_2_13" AS 
(SELECT "DT_Output_41"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", "DT_Output_41"."Score" AS "Score_CLASS_2" 
FROM "DT_Output_41"), 
"DT_node_lookup_42" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 2 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.6500000000000001) THEN CASE WHEN ("ADS"."Feature_1" <= 2.7500000000000004) THEN 12 ELSE 13 END ELSE 7 END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_42" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS nid, 0.04621448114267493 AS "Score" UNION ALL SELECT 7 AS nid, -0.03882488187031315 AS "Score" UNION ALL SELECT 12 AS nid, -0.03919024727402175 AS "Score" UNION ALL SELECT 13 AS nid, -0.03962908563915685 AS "Score") AS "Values"), 
"DT_Output_42" AS 
(SELECT "DT_node_lookup_42"."KEY" AS "KEY", "DT_node_lookup_42".node_id_2 AS node_id_2, "DT_node_data_42".nid AS nid, "DT_node_data_42"."Score" AS "Score" 
FROM "DT_node_lookup_42" LEFT OUTER JOIN "DT_node_data_42" ON "DT_node_lookup_42".node_id_2 = "DT_node_data_42".nid), 
"LGBM_Model_0_14" AS 
(SELECT "DT_Output_42"."KEY" AS "KEY", "DT_Output_42"."Score" AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_42"), 
"DT_node_lookup_43" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 5.050000000000001) THEN CASE WHEN ("ADS"."Feature_3" <= 0.45000000000000007) THEN 4 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.4500000000000002) THEN 10 ELSE 11 END END ELSE 3 END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_43" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS nid, -0.04004563334458157 AS "Score" UNION ALL SELECT 4 AS nid, -0.03985689772254396 AS "Score" UNION ALL SELECT 10 AS nid, 0.0447918433121099 AS "Score" UNION ALL SELECT 11 AS nid, 0.02224532224363114 AS "Score") AS "Values"), 
"DT_Output_43" AS 
(SELECT "DT_node_lookup_43"."KEY" AS "KEY", "DT_node_lookup_43".node_id_2 AS node_id_2, "DT_node_data_43".nid AS nid, "DT_node_data_43"."Score" AS "Score" 
FROM "DT_node_lookup_43" LEFT OUTER JOIN "DT_node_data_43" ON "DT_node_lookup_43".node_id_2 = "DT_node_data_43".nid), 
"LGBM_Model_1_14" AS 
(SELECT "DT_Output_43"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", "DT_Output_43"."Score" AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_43"), 
"DT_node_lookup_44" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 4.8500000000000005) THEN CASE WHEN ("ADS"."Feature_2" <= 4.450000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 8 ELSE 9 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_2" <= 5.550000000000001) THEN 6 ELSE 7 END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_44" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 5 AS nid, -0.02307904581687334 AS "Score" UNION ALL SELECT 6 AS nid, 0.03593333857404521 AS "Score" UNION ALL SELECT 7 AS nid, 0.04841035500049562 AS "Score" UNION ALL SELECT 8 AS nid, -0.039739946938296355 AS "Score" UNION ALL SELECT 9 AS nid, -0.04021512136588427 AS "Score") AS "Values"), 
"DT_Output_44" AS 
(SELECT "DT_node_lookup_44"."KEY" AS "KEY", "DT_node_lookup_44".node_id_2 AS node_id_2, "DT_node_data_44".nid AS nid, "DT_node_data_44"."Score" AS "Score" 
FROM "DT_node_lookup_44" LEFT OUTER JOIN "DT_node_data_44" ON "DT_node_lookup_44".node_id_2 = "DT_node_data_44".nid), 
"LGBM_Model_2_14" AS 
(SELECT "DT_Output_44"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", "DT_Output_44"."Score" AS "Score_CLASS_2" 
FROM "DT_Output_44"), 
"DT_node_lookup_45" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 2 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.6500000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 4.450000000000001) THEN 12 ELSE 13 END ELSE 7 END END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_45" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 2 AS nid, 0.044860597134896624 AS "Score" UNION ALL SELECT 7 AS nid, -0.03848041684361572 AS "Score" UNION ALL SELECT 12 AS nid, -0.03869042423475023 AS "Score" UNION ALL SELECT 13 AS nid, -0.039452821797556874 AS "Score") AS "Values"), 
"DT_Output_45" AS 
(SELECT "DT_node_lookup_45"."KEY" AS "KEY", "DT_node_lookup_45".node_id_2 AS node_id_2, "DT_node_data_45".nid AS nid, "DT_node_data_45"."Score" AS "Score" 
FROM "DT_node_lookup_45" LEFT OUTER JOIN "DT_node_data_45" ON "DT_node_lookup_45".node_id_2 = "DT_node_data_45".nid), 
"LGBM_Model_0_15" AS 
(SELECT "DT_Output_45"."KEY" AS "KEY", "DT_Output_45"."Score" AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_45"), 
"DT_node_lookup_46" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 5.050000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 1.8) THEN 4 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.4500000000000002) THEN 10 ELSE 11 END END ELSE 3 END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_46" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS nid, -0.039609937513561566 AS "Score" UNION ALL SELECT 4 AS nid, -0.03951251825145426 AS "Score" UNION ALL SELECT 10 AS nid, 0.04376911098366712 AS "Score" UNION ALL SELECT 11 AS nid, 0.021279420825077888 AS "Score") AS "Values"), 
"DT_Output_46" AS 
(SELECT "DT_node_lookup_46"."KEY" AS "KEY", "DT_node_lookup_46".node_id_2 AS node_id_2, "DT_node_data_46".nid AS nid, "DT_node_data_46"."Score" AS "Score" 
FROM "DT_node_lookup_46" LEFT OUTER JOIN "DT_node_data_46" ON "DT_node_lookup_46".node_id_2 = "DT_node_data_46".nid), 
"LGBM_Model_1_15" AS 
(SELECT "DT_Output_46"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", "DT_Output_46"."Score" AS "Score_CLASS_1", 0.0 AS "Score_CLASS_2" 
FROM "DT_Output_46"), 
"DT_node_lookup_47" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 1.6500000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 4.450000000000001) THEN CASE WHEN ("ADS"."Feature_2" <= 3.1500000000000004) THEN 8 ELSE 9 END ELSE 5 END ELSE 3 END AS node_id_2 
FROM iris_str_tgt AS "ADS"), 
"DT_node_data_47" AS 
(SELECT "Values".nid AS nid, "Values"."Score" AS "Score" 
FROM (SELECT 3 AS nid, 0.043863348204189447 AS "Score" UNION ALL SELECT 5 AS nid, -0.01729978810470091 AS "Score" UNION ALL SELECT 8 AS nid, -0.03930178655939222 AS "Score" UNION ALL SELECT 9 AS nid, -0.03975498526833156 AS "Score") AS "Values"), 
"DT_Output_47" AS 
(SELECT "DT_node_lookup_47"."KEY" AS "KEY", "DT_node_lookup_47".node_id_2 AS node_id_2, "DT_node_data_47".nid AS nid, "DT_node_data_47"."Score" AS "Score" 
FROM "DT_node_lookup_47" LEFT OUTER JOIN "DT_node_data_47" ON "DT_node_lookup_47".node_id_2 = "DT_node_data_47".nid), 
"LGBM_Model_2_15" AS 
(SELECT "DT_Output_47"."KEY" AS "KEY", 0.0 AS "Score_CLASS_0", 0.0 AS "Score_CLASS_1", "DT_Output_47"."Score" AS "Score_CLASS_2" 
FROM "DT_Output_47")
 INSERT INTO "TMP_20221018190636_U1T81LX_LGBM_B4" ("KEY", "Score_CLASS_0", "Score_CLASS_1", "Score_CLASS_2") SELECT "T"."KEY", "T"."Score_CLASS_0", "T"."Score_CLASS_1", "T"."Score_CLASS_2" 
FROM (SELECT "LGBM_B4"."KEY" AS "KEY", "LGBM_B4"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_B4"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_B4"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM (SELECT "LGBM_esu_4"."KEY" AS "KEY", "LGBM_esu_4"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_esu_4"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_esu_4"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM (SELECT "LGBM_Model_1_13"."KEY" AS "KEY", "LGBM_Model_1_13"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_1_13"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_1_13"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_1_13" UNION ALL SELECT "LGBM_Model_2_13"."KEY" AS "KEY", "LGBM_Model_2_13"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_2_13"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_2_13"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_2_13" UNION ALL SELECT "LGBM_Model_0_14"."KEY" AS "KEY", "LGBM_Model_0_14"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_0_14"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_0_14"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_0_14" UNION ALL SELECT "LGBM_Model_1_14"."KEY" AS "KEY", "LGBM_Model_1_14"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_1_14"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_1_14"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_1_14" UNION ALL SELECT "LGBM_Model_2_14"."KEY" AS "KEY", "LGBM_Model_2_14"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_2_14"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_2_14"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_2_14" UNION ALL SELECT "LGBM_Model_0_15"."KEY" AS "KEY", "LGBM_Model_0_15"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_0_15"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_0_15"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_0_15" UNION ALL SELECT "LGBM_Model_1_15"."KEY" AS "KEY", "LGBM_Model_1_15"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_1_15"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_1_15"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_1_15" UNION ALL SELECT "LGBM_Model_2_15"."KEY" AS "KEY", "LGBM_Model_2_15"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_Model_2_15"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_Model_2_15"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "LGBM_Model_2_15") AS "LGBM_esu_4") AS "LGBM_B4") AS "T"

-- Code For temporary table TMP_20221018190636_C08JQRD_LGBM_sum part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190636_C08JQRD_LGBM_sum" (
	"KEY" BIGINT NOT NULL, 
	"Score_CLASS_0" FLOAT, 
	"Score_CLASS_1" FLOAT, 
	"Score_CLASS_2" FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018190636_C08JQRD_LGBM_sum part 2. Populate

WITH "LGBM_Union" AS 
(SELECT "LGBM_EnsembleUnion"."KEY" AS "KEY", "LGBM_EnsembleUnion"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_EnsembleUnion"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_EnsembleUnion"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM (SELECT "LGBM_B0"."KEY" AS "KEY", "LGBM_B0"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_B0"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_B0"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "TMP_20221018190636_3ZUNF38_LGBM_B0" AS "LGBM_B0" UNION ALL SELECT "LGBM_B1"."KEY" AS "KEY", "LGBM_B1"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_B1"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_B1"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "TMP_20221018190636_QJCVP07_LGBM_B1" AS "LGBM_B1" UNION ALL SELECT "LGBM_B2"."KEY" AS "KEY", "LGBM_B2"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_B2"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_B2"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "TMP_20221018190636_UKPTB0N_LGBM_B2" AS "LGBM_B2" UNION ALL SELECT "LGBM_B3"."KEY" AS "KEY", "LGBM_B3"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_B3"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_B3"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "TMP_20221018190636_C5DHEVA_LGBM_B3" AS "LGBM_B3" UNION ALL SELECT "LGBM_B4"."KEY" AS "KEY", "LGBM_B4"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_B4"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_B4"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM "TMP_20221018190636_U1T81LX_LGBM_B4" AS "LGBM_B4") AS "LGBM_EnsembleUnion")
 INSERT INTO "TMP_20221018190636_C08JQRD_LGBM_sum" ("KEY", "Score_CLASS_0", "Score_CLASS_1", "Score_CLASS_2") SELECT "T"."KEY", "T"."Score_CLASS_0", "T"."Score_CLASS_1", "T"."Score_CLASS_2" 
FROM (SELECT "LGBM_sum"."KEY" AS "KEY", "LGBM_sum"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_sum"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_sum"."Score_CLASS_2" AS "Score_CLASS_2" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Score_CLASS_0" AS FLOAT) AS "Score_CLASS_0", CAST("T"."Score_CLASS_1" AS FLOAT) AS "Score_CLASS_1", CAST("T"."Score_CLASS_2" AS FLOAT) AS "Score_CLASS_2" 
FROM (SELECT "LGBM_Union"."KEY" AS "KEY", sum("LGBM_Union"."Score_CLASS_0") AS "Score_CLASS_0", sum("LGBM_Union"."Score_CLASS_1") AS "Score_CLASS_1", sum("LGBM_Union"."Score_CLASS_2") AS "Score_CLASS_2" 
FROM "LGBM_Union" GROUP BY "LGBM_Union"."KEY") AS "T") AS "LGBM_sum") AS "T"

-- Code For temporary table TMP_20221018190636_C08JQRD_LGBM_sum part 3. Create Index 

CREATE INDEX "ix_TMP_20221018190636_C08JQRD_LGBM_sum_KEY" ON "TMP_20221018190636_C08JQRD_LGBM_sum" ("KEY")

-- Model deployment code

WITH orig_cte AS 
(SELECT "LGBM_sum"."KEY" AS "KEY", "LGBM_sum"."Score_CLASS_0" AS "Score_CLASS_0", "LGBM_sum"."Score_CLASS_1" AS "Score_CLASS_1", "LGBM_sum"."Score_CLASS_2" AS "Score_CLASS_2", CAST(NULL AS FLOAT) AS "Proba_CLASS_0", CAST(NULL AS FLOAT) AS "Proba_CLASS_1", CAST(NULL AS FLOAT) AS "Proba_CLASS_2", CAST(NULL AS FLOAT) AS "LogProba_CLASS_0", CAST(NULL AS FLOAT) AS "LogProba_CLASS_1", CAST(NULL AS FLOAT) AS "LogProba_CLASS_2", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "TMP_20221018190636_C08JQRD_LGBM_sum" AS "LGBM_sum"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 'CLASS_0' AS class, orig_cte."LogProba_CLASS_0" AS "LogProba", orig_cte."Proba_CLASS_0" AS "Proba", orig_cte."Score_CLASS_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 'CLASS_1' AS class, orig_cte."LogProba_CLASS_1" AS "LogProba", orig_cte."Proba_CLASS_1" AS "Proba", orig_cte."Score_CLASS_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 'CLASS_2' AS class, orig_cte."LogProba_CLASS_2" AS "LogProba", orig_cte."Proba_CLASS_2" AS "Proba", orig_cte."Score_CLASS_2" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_CLASS_0" AS "Score_CLASS_0", orig_cte."Score_CLASS_1" AS "Score_CLASS_1", orig_cte."Score_CLASS_2" AS "Score_CLASS_2", orig_cte."Proba_CLASS_0" AS "Proba_CLASS_0", orig_cte."Proba_CLASS_1" AS "Proba_CLASS_1", orig_cte."Proba_CLASS_2" AS "Proba_CLASS_2", orig_cte."LogProba_CLASS_0" AS "LogProba_CLASS_0", orig_cte."LogProba_CLASS_1" AS "LogProba_CLASS_1", orig_cte."LogProba_CLASS_2" AS "LogProba_CLASS_2", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_CLASS_0" AS "Score_CLASS_0", score_max."Score_CLASS_1" AS "Score_CLASS_1", score_max."Score_CLASS_2" AS "Score_CLASS_2", score_max."Proba_CLASS_0" AS "Proba_CLASS_0", score_max."Proba_CLASS_1" AS "Proba_CLASS_1", score_max."Proba_CLASS_2" AS "Proba_CLASS_2", score_max."LogProba_CLASS_0" AS "LogProba_CLASS_0", score_max."LogProba_CLASS_1" AS "LogProba_CLASS_1", score_max."LogProba_CLASS_2" AS "LogProba_CLASS_2", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(greatest(-100.0, score_max."Score_CLASS_0" - score_max."max_Score")) AS "exp_delta_Score_CLASS_0", exp(greatest(-100.0, score_max."Score_CLASS_1" - score_max."max_Score")) AS "exp_delta_Score_CLASS_1", exp(greatest(-100.0, score_max."Score_CLASS_2" - score_max."max_Score")) AS "exp_delta_Score_CLASS_2" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 'CLASS_0' AS class, score_soft_max_deltas."exp_delta_Score_CLASS_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 'CLASS_1' AS class, score_soft_max_deltas."exp_delta_Score_CLASS_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 'CLASS_2' AS class, score_soft_max_deltas."exp_delta_Score_CLASS_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_CLASS_0" AS "Score_CLASS_0", score_soft_max_deltas."Score_CLASS_1" AS "Score_CLASS_1", score_soft_max_deltas."Score_CLASS_2" AS "Score_CLASS_2", score_soft_max_deltas."Proba_CLASS_0" AS "Proba_CLASS_0", score_soft_max_deltas."Proba_CLASS_1" AS "Proba_CLASS_1", score_soft_max_deltas."Proba_CLASS_2" AS "Proba_CLASS_2", score_soft_max_deltas."LogProba_CLASS_0" AS "LogProba_CLASS_0", score_soft_max_deltas."LogProba_CLASS_1" AS "LogProba_CLASS_1", score_soft_max_deltas."LogProba_CLASS_2" AS "LogProba_CLASS_2", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_CLASS_0" AS "exp_delta_Score_CLASS_0", score_soft_max_deltas."exp_delta_Score_CLASS_1" AS "exp_delta_Score_CLASS_1", score_soft_max_deltas."exp_delta_Score_CLASS_2" AS "exp_delta_Score_CLASS_2", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_CLASS_0" AS "Score_CLASS_0", score_soft_max."Score_CLASS_1" AS "Score_CLASS_1", score_soft_max."Score_CLASS_2" AS "Score_CLASS_2", score_soft_max."Proba_CLASS_0" AS "Proba_CLASS_0", score_soft_max."Proba_CLASS_1" AS "Proba_CLASS_1", score_soft_max."Proba_CLASS_2" AS "Proba_CLASS_2", score_soft_max."LogProba_CLASS_0" AS "LogProba_CLASS_0", score_soft_max."LogProba_CLASS_1" AS "LogProba_CLASS_1", score_soft_max."LogProba_CLASS_2" AS "LogProba_CLASS_2", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_CLASS_0" AS "exp_delta_Score_CLASS_0", score_soft_max."exp_delta_Score_CLASS_1" AS "exp_delta_Score_CLASS_1", score_soft_max."exp_delta_Score_CLASS_2" AS "exp_delta_Score_CLASS_2", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_CLASS_0" AS "Score_CLASS_0", score_soft_max."Score_CLASS_1" AS "Score_CLASS_1", score_soft_max."Score_CLASS_2" AS "Score_CLASS_2", score_soft_max."Proba_CLASS_0" AS "Proba_CLASS_0", score_soft_max."Proba_CLASS_1" AS "Proba_CLASS_1", score_soft_max."Proba_CLASS_2" AS "Proba_CLASS_2", score_soft_max."LogProba_CLASS_0" AS "LogProba_CLASS_0", score_soft_max."LogProba_CLASS_1" AS "LogProba_CLASS_1", score_soft_max."LogProba_CLASS_2" AS "LogProba_CLASS_2", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_CLASS_0" AS "exp_delta_Score_CLASS_0", score_soft_max."exp_delta_Score_CLASS_1" AS "exp_delta_Score_CLASS_1", score_soft_max."exp_delta_Score_CLASS_2" AS "exp_delta_Score_CLASS_2", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_CLASS_0" AS "SoftProba_CLASS_0", soft_max_comp."SoftProba_CLASS_1" AS "SoftProba_CLASS_1", soft_max_comp."SoftProba_CLASS_2" AS "SoftProba_CLASS_2" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", max(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."Score" >= union_with_max."max_Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_CLASS_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_CLASS_0", score_soft_max."exp_delta_Score_CLASS_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_CLASS_1", score_soft_max."exp_delta_Score_CLASS_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_CLASS_2" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_CLASS_0", CAST(NULL AS FLOAT) AS "Score_CLASS_1", CAST(NULL AS FLOAT) AS "Score_CLASS_2", arg_max_cte."SoftProba_CLASS_0" AS "Proba_CLASS_0", arg_max_cte."SoftProba_CLASS_1" AS "Proba_CLASS_1", arg_max_cte."SoftProba_CLASS_2" AS "Proba_CLASS_2", CASE WHEN (arg_max_cte."SoftProba_CLASS_0" IS NULL OR arg_max_cte."SoftProba_CLASS_0" > 0.0) THEN ln(arg_max_cte."SoftProba_CLASS_0") ELSE '-Infinity'::float8 END AS "LogProba_CLASS_0", CASE WHEN (arg_max_cte."SoftProba_CLASS_1" IS NULL OR arg_max_cte."SoftProba_CLASS_1" > 0.0) THEN ln(arg_max_cte."SoftProba_CLASS_1") ELSE '-Infinity'::float8 END AS "LogProba_CLASS_1", CASE WHEN (arg_max_cte."SoftProba_CLASS_2" IS NULL OR arg_max_cte."SoftProba_CLASS_2" > 0.0) THEN ln(arg_max_cte."SoftProba_CLASS_2") ELSE '-Infinity'::float8 END AS "LogProba_CLASS_2", arg_max_cte."arg_max_Score" AS "Decision", greatest(arg_max_cte."SoftProba_CLASS_0", arg_max_cte."SoftProba_CLASS_1", arg_max_cte."SoftProba_CLASS_2") AS "DecisionProba" 
FROM arg_max_cte