-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : AdaBoostRegressor_Pipeline
-- Dataset : freidman3
-- Database : sqlite


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018190250_Z48DHAW_ADS_imp_1_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190250_Z48DHAW_ADS_imp_1_OUT" (
	"KEY" BIGINT NOT NULL, 
	imputer_output_2 FLOAT, 
	imputer_output_3 FLOAT, 
	imputer_output_4 FLOAT, 
	imputer_output_5 FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20221018190250_Z48DHAW_ADS_imp_1_OUT part 2. Populate

INSERT INTO "TMP_20221018190250_Z48DHAW_ADS_imp_1_OUT" ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5) SELECT "T"."KEY", "T".imputer_output_2, "T".imputer_output_3, "T".imputer_output_4, "T".imputer_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".imputer_output_2 AS imputer_output_2, "ADS_imp_1_OUT".imputer_output_3 AS imputer_output_3, "ADS_imp_1_OUT".imputer_output_4 AS imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 AS imputer_output_5 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 43.79128122207401 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 945.9672833084396 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.5310009099975209 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 6.139967152050499 ELSE "ADS"."Feature_3" END AS imputer_output_5 
FROM freidman3 AS "ADS") AS "ADS_imp_1_OUT") AS "T"

-- Code For temporary table TMP_20221018190250_Z48DHAW_ADS_imp_1_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018190250_Z48DHAW_ADS_imp_1_OUT_KEY" ON "TMP_20221018190250_Z48DHAW_ADS_imp_1_OUT" ("KEY")

-- Code For temporary table TMP_20221018190250_7NAHR36_ADS_sca_2_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190250_7NAHR36_ADS_sca_2_OUT" (
	"KEY" BIGINT NOT NULL, 
	scaler_output_2 FLOAT, 
	scaler_output_3 FLOAT, 
	scaler_output_4 FLOAT, 
	scaler_output_5 FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20221018190250_7NAHR36_ADS_sca_2_OUT part 2. Populate

INSERT INTO "TMP_20221018190250_7NAHR36_ADS_sca_2_OUT" ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5) SELECT "T"."KEY", "T".scaler_output_2, "T".scaler_output_3, "T".scaler_output_4, "T".scaler_output_5 
FROM (SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", "ADS_sca_2_OUT".scaler_output_2 AS scaler_output_2, "ADS_sca_2_OUT".scaler_output_3 AS scaler_output_3, "ADS_sca_2_OUT".scaler_output_4 AS scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 AS scaler_output_5 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS FLOAT) - 43.79128122207401) / 26.03562357622511 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS FLOAT) - 945.9672833084396) / 461.4552766146446 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS FLOAT) - 0.5310009099975209) / 0.2901863282144786 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS FLOAT) - 6.139967152050499) / 3.072917242564058 AS scaler_output_5 
FROM "TMP_20221018190250_Z48DHAW_ADS_imp_1_OUT" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "T"

-- Code For temporary table TMP_20221018190250_7NAHR36_ADS_sca_2_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018190250_7NAHR36_ADS_sca_2_OUT_KEY" ON "TMP_20221018190250_7NAHR36_ADS_sca_2_OUT" ("KEY")

-- Code For temporary table TMP_20221018190250_LYBYBHH_WE_B0 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190250_LYBYBHH_WE_B0" (
	"KEY" BIGINT, 
	"Estimator" FLOAT, 
	"Weight" FLOAT, 
	est_index BIGINT
)



-- Code For temporary table TMP_20221018190250_LYBYBHH_WE_B0 part 2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.128638505935669) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.80410435795784) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7836979031562805) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.7431707978248596) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.0727011263370514) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.09143403545022011) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.03369589429348707) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018190250_7NAHR36_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 0.7050714675464733 AS "E" UNION ALL SELECT 4 AS nid, 0.43001724369176697 AS "E" UNION ALL SELECT 6 AS nid, 0.6100168381304848 AS "E" UNION ALL SELECT 7 AS nid, 1.2443297616327034 AS "E" UNION ALL SELECT 10 AS nid, 1.4733555133692287 AS "E" UNION ALL SELECT 11 AS nid, 1.1552266207505864 AS "E" UNION ALL SELECT 13 AS nid, 1.5354636129407508 AS "E" UNION ALL SELECT 14 AS nid, 1.4648826319981552 AS "E") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."E" AS "E" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"ADB_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."E" AS "Estimator", 0.051954275848813736 AS "Weight", 0 AS est_index 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.6865600943565369) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.15695498138666153) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.7780995666980743) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.9312378764152527) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.10460701026022434) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "TMP_20221018190250_7NAHR36_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 2 AS nid, 0.38342473185592096 AS "E" UNION ALL SELECT 3 AS nid, 0.4848669214064692 AS "E" UNION ALL SELECT 6 AS nid, 0.5915392445044317 AS "E" UNION ALL SELECT 7 AS nid, 1.2541519017473017 AS "E" UNION ALL SELECT 9 AS nid, 1.5287311749770354 AS "E" UNION ALL SELECT 10 AS nid, 1.3679828024550929 AS "E") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."E" AS "E" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"ADB_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."E" AS "Estimator", 0.0372441445409521 AS "Weight", 1 AS est_index 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.6865600943565369) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.0818820148706436) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.15695498138666153) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.38784922659397125) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.6357912421226501) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.1697484254837036) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20221018190250_7NAHR36_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 0.38342473185592096 AS "E" UNION ALL SELECT 4 AS nid, 0.4848669214064692 AS "E" UNION ALL SELECT 5 AS nid, 0.6100168381304848 AS "E" UNION ALL SELECT 8 AS nid, 0.3751675659770648 AS "E" UNION ALL SELECT 9 AS nid, 1.2189678231486023 AS "E" UNION ALL SELECT 11 AS nid, 1.377641769292083 AS "E" UNION ALL SELECT 12 AS nid, 1.5145094173378104 AS "E") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."E" AS "E" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"ADB_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."E" AS "Estimator", 0.05272668474595339 AS "Weight", 2 AS est_index 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.4309000372886658) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.6357912421226501) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.14987096190452576) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.9296590089797974) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.20899805426597595) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.3182087540626526) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.20774032175540924) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018190250_7NAHR36_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 0.4848669214064692 AS "E" UNION ALL SELECT 4 AS nid, 0.38177329868014975 AS "E" UNION ALL SELECT 6 AS nid, 0.7736311045366903 AS "E" UNION ALL SELECT 7 AS nid, 1.2168500273152194 AS "E" UNION ALL SELECT 10 AS nid, 1.4286748402499525 AS "E" UNION ALL SELECT 11 AS nid, 1.5097423878118206 AS "E" UNION ALL SELECT 13 AS nid, 1.142622893040531 AS "E" UNION ALL SELECT 14 AS nid, 1.398314530314508 AS "E") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."E" AS "E" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"ADB_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."E" AS "Estimator", 0.0843236269469388 AS "Weight", 3 AS est_index 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.4017176181077957) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5372049435973167) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.1455585360527039) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.4386940598487854) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.2677711248397827) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5181461721658707) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.801533967256546) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018190250_7NAHR36_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.4455967910671395 AS "E" UNION ALL SELECT 4 AS nid, 1.3284094170198377 AS "E" UNION ALL SELECT 6 AS nid, 0.8079109230317987 AS "E" UNION ALL SELECT 7 AS nid, 1.1484121598646297 AS "E" UNION ALL SELECT 10 AS nid, 1.225018295065725 AS "E" UNION ALL SELECT 11 AS nid, 1.448477991055055 AS "E" UNION ALL SELECT 13 AS nid, 1.5608250367469139 AS "E" UNION ALL SELECT 14 AS nid, 1.5038401763272644 AS "E") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."E" AS "E" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"ADB_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."E" AS "Estimator", 0.07947676307318342 AS "Weight", 4 AS est_index 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.7298851609230042) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.0818820148706436) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.10987233370542526) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.3585509061813354) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.4309000372886658) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "TMP_20221018190250_7NAHR36_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 2 AS nid, 0.38342473185592096 AS "E" UNION ALL SELECT 3 AS nid, 0.6100168381304848 AS "E" UNION ALL SELECT 6 AS nid, 1.3689832528589367 AS "E" UNION ALL SELECT 7 AS nid, 1.493650541136645 AS "E" UNION ALL SELECT 9 AS nid, 0.7186471209417888 AS "E" UNION ALL SELECT 10 AS nid, 1.2565834181238955 AS "E") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."E" AS "E" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"ADB_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."E" AS "Estimator", 0.07262877233372339 AS "Weight", 5 AS est_index 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.4309000372886658) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5874325856566429) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.7431707978248596) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.7836979031562805) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.4988391995429993) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6530774086713791) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.6660747826099396) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018190250_7NAHR36_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 0.6100168381304848 AS "E" UNION ALL SELECT 4 AS nid, 1.3683914441949208 AS "E" UNION ALL SELECT 6 AS nid, 0.7393512860415817 AS "E" UNION ALL SELECT 7 AS nid, 0.4135689435377232 AS "E" UNION ALL SELECT 10 AS nid, 1.4518609404362353 AS "E" UNION ALL SELECT 11 AS nid, 1.0976689767809684 AS "E" UNION ALL SELECT 13 AS nid, 1.4728244799298955 AS "E" UNION ALL SELECT 14 AS nid, 1.2770565916438006 AS "E") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."E" AS "E" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"ADB_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."E" AS "Estimator", 0.025113769675465802 AS "Weight", 6 AS est_index 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.6865600943565369) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6579667255282402) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.15695498138666153) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.14169321209192276) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.4673362523317337) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.9463390409946442) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20221018190250_7NAHR36_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 2 AS nid, 0.6100168381304848 AS "E" UNION ALL SELECT 4 AS nid, 0.38342473185592096 AS "E" UNION ALL SELECT 5 AS nid, 0.4848669214064692 AS "E" UNION ALL SELECT 8 AS nid, 1.0673248517445262 AS "E" UNION ALL SELECT 9 AS nid, 1.3260623233758584 AS "E" UNION ALL SELECT 11 AS nid, 1.3781404758387157 AS "E" UNION ALL SELECT 12 AS nid, 1.5130482692998817 AS "E") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."E" AS "E" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"ADB_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."E" AS "Estimator", 0.07281837272682976 AS "Weight", 7 AS est_index 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.6357912421226501) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.590480200946331) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.603305459022522) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.14987096190452576) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.9654449820518494) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.9540339708328247) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.3361194133758545) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018190250_7NAHR36_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.3944974095517522 AS "E" UNION ALL SELECT 4 AS nid, 0.6100168381304848 AS "E" UNION ALL SELECT 6 AS nid, 0.4848669214064692 AS "E" UNION ALL SELECT 7 AS nid, 0.37591821742059717 AS "E" UNION ALL SELECT 10 AS nid, 0.8079109230317987 AS "E" UNION ALL SELECT 11 AS nid, 1.131672977074509 AS "E" UNION ALL SELECT 13 AS nid, 1.178222824375288 AS "E" UNION ALL SELECT 14 AS nid, 1.4591073483282648 AS "E") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."E" AS "E" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"ADB_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."E" AS "Estimator", 0.06087939831616386 AS "Weight", 8 AS est_index 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.6357912421226501) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5621547549962997) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.7431707978248596) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.9585209786891937) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.0801426768302917) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.2143871784210205) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.3192822337150574) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018190250_7NAHR36_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 0.6100168381304848 AS "E" UNION ALL SELECT 4 AS nid, 1.3944974095517522 AS "E" UNION ALL SELECT 6 AS nid, 0.3751675659770647 AS "E" UNION ALL SELECT 7 AS nid, 0.4848669214064692 AS "E" UNION ALL SELECT 10 AS nid, 1.5566063302021076 AS "E" UNION ALL SELECT 11 AS nid, 1.4518609404362353 AS "E" UNION ALL SELECT 13 AS nid, 1.3214805159401062 AS "E" UNION ALL SELECT 14 AS nid, 1.1009814131399118 AS "E") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."E" AS "E" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"ADB_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."E" AS "Estimator", 0.06415244332040133 AS "Weight", 9 AS est_index 
FROM "DT_Output_9")
 INSERT INTO "TMP_20221018190250_LYBYBHH_WE_B0" ("KEY", "Estimator", "Weight", est_index) SELECT "T"."KEY", "T"."Estimator", "T"."Weight", "T".est_index 
FROM (SELECT "WE_B0"."KEY" AS "KEY", "WE_B0"."Estimator" AS "Estimator", "WE_B0"."Weight" AS "Weight", "WE_B0".est_index AS est_index 
FROM (SELECT "WE_esu_0"."KEY" AS "KEY", "WE_esu_0"."Estimator" AS "Estimator", "WE_esu_0"."Weight" AS "Weight", "WE_esu_0".est_index AS est_index 
FROM (SELECT "ADB_Model_0"."KEY" AS "KEY", "ADB_Model_0"."Estimator" AS "Estimator", "ADB_Model_0"."Weight" AS "Weight", "ADB_Model_0".est_index AS est_index 
FROM "ADB_Model_0" UNION ALL SELECT "ADB_Model_1"."KEY" AS "KEY", "ADB_Model_1"."Estimator" AS "Estimator", "ADB_Model_1"."Weight" AS "Weight", "ADB_Model_1".est_index AS est_index 
FROM "ADB_Model_1" UNION ALL SELECT "ADB_Model_2"."KEY" AS "KEY", "ADB_Model_2"."Estimator" AS "Estimator", "ADB_Model_2"."Weight" AS "Weight", "ADB_Model_2".est_index AS est_index 
FROM "ADB_Model_2" UNION ALL SELECT "ADB_Model_3"."KEY" AS "KEY", "ADB_Model_3"."Estimator" AS "Estimator", "ADB_Model_3"."Weight" AS "Weight", "ADB_Model_3".est_index AS est_index 
FROM "ADB_Model_3" UNION ALL SELECT "ADB_Model_4"."KEY" AS "KEY", "ADB_Model_4"."Estimator" AS "Estimator", "ADB_Model_4"."Weight" AS "Weight", "ADB_Model_4".est_index AS est_index 
FROM "ADB_Model_4" UNION ALL SELECT "ADB_Model_5"."KEY" AS "KEY", "ADB_Model_5"."Estimator" AS "Estimator", "ADB_Model_5"."Weight" AS "Weight", "ADB_Model_5".est_index AS est_index 
FROM "ADB_Model_5" UNION ALL SELECT "ADB_Model_6"."KEY" AS "KEY", "ADB_Model_6"."Estimator" AS "Estimator", "ADB_Model_6"."Weight" AS "Weight", "ADB_Model_6".est_index AS est_index 
FROM "ADB_Model_6" UNION ALL SELECT "ADB_Model_7"."KEY" AS "KEY", "ADB_Model_7"."Estimator" AS "Estimator", "ADB_Model_7"."Weight" AS "Weight", "ADB_Model_7".est_index AS est_index 
FROM "ADB_Model_7" UNION ALL SELECT "ADB_Model_8"."KEY" AS "KEY", "ADB_Model_8"."Estimator" AS "Estimator", "ADB_Model_8"."Weight" AS "Weight", "ADB_Model_8".est_index AS est_index 
FROM "ADB_Model_8" UNION ALL SELECT "ADB_Model_9"."KEY" AS "KEY", "ADB_Model_9"."Estimator" AS "Estimator", "ADB_Model_9"."Weight" AS "Weight", "ADB_Model_9".est_index AS est_index 
FROM "ADB_Model_9") AS "WE_esu_0") AS "WE_B0") AS "T"

-- Code For temporary table TMP_20221018190250_ZJPRI3R_WE_B1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190250_ZJPRI3R_WE_B1" (
	"KEY" BIGINT, 
	"Estimator" FLOAT, 
	"Weight" FLOAT, 
	est_index BIGINT
)



-- Code For temporary table TMP_20221018190250_ZJPRI3R_WE_B1 part 2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.4309000372886658) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.80410435795784) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.5640677213668823) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.20885485410690308) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.7969666719436646) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.08081068936735392) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.49538497254252434) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018190250_7NAHR36_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 0.38735638324699856 AS "E" UNION ALL SELECT 4 AS nid, 0.7222113767940274 AS "E" UNION ALL SELECT 6 AS nid, 1.1409162524546155 AS "E" UNION ALL SELECT 7 AS nid, 1.3648925419511007 AS "E" UNION ALL SELECT 10 AS nid, 1.51341198019395 AS "E" UNION ALL SELECT 11 AS nid, 1.3607044604395606 AS "E" UNION ALL SELECT 13 AS nid, 1.0792195428902525 AS "E" UNION ALL SELECT 14 AS nid, 1.0274843519223331 AS "E") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."E" AS "E" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"ADB_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."E" AS "Estimator", 0.08460083708429006 AS "Weight", 10 AS est_index 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.4309000372886658) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.6865600943565369) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.7965635061264038) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5372049435973167) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.2754115164279938) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.5155714303255081) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.23854828625917435) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018190250_7NAHR36_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 0.6100168381304848 AS "E" UNION ALL SELECT 4 AS nid, 0.39264674908778896 AS "E" UNION ALL SELECT 6 AS nid, 1.3320583790487996 AS "E" UNION ALL SELECT 7 AS nid, 0.7026952969783141 AS "E" UNION ALL SELECT 10 AS nid, 1.5485994036832307 AS "E" UNION ALL SELECT 11 AS nid, 1.4675830888238124 AS "E" UNION ALL SELECT 13 AS nid, 1.1276342109819888 AS "E" UNION ALL SELECT 14 AS nid, 1.4474446279553181 AS "E") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."E" AS "E" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"ADB_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."E" AS "Estimator", 0.043064526156651704 AS "Weight", 11 AS est_index 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.4309000372886658) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.2722668051719666) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.7490964010357857) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.582097351551056) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.40594328939914703) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.494538426399231) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20221018190250_7NAHR36_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 2 AS nid, 1.4092998433520778 AS "E" UNION ALL SELECT 4 AS nid, 0.7349170226645136 AS "E" UNION ALL SELECT 5 AS nid, 0.3751675659770648 AS "E" UNION ALL SELECT 8 AS nid, 1.5361867197208108 AS "E" UNION ALL SELECT 9 AS nid, 1.3332062095098878 AS "E" UNION ALL SELECT 11 AS nid, 1.0274843519223331 AS "E" UNION ALL SELECT 12 AS nid, 1.0927593693818933 AS "E") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."E" AS "E" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"ADB_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."E" AS "Estimator", 0.061759834984939685 AS "Weight", 12 AS est_index 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.3194318413734436) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5874325856566429) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.7275083661079407) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.5640677213668823) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.4079124182462692) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.19130240380764008) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.3538299202919006) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018190250_7NAHR36_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 0.6100168381304848 AS "E" UNION ALL SELECT 4 AS nid, 1.2591936688286658 AS "E" UNION ALL SELECT 6 AS nid, 0.376818999152836 AS "E" UNION ALL SELECT 7 AS nid, 0.7599191771386467 AS "E" UNION ALL SELECT 10 AS nid, 1.4508204615744713 AS "E" UNION ALL SELECT 11 AS nid, 1.1481522889366162 AS "E" UNION ALL SELECT 13 AS nid, 1.5695353425561203 AS "E" UNION ALL SELECT 14 AS nid, 1.488195957723148 AS "E") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."E" AS "E" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"ADB_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."E" AS "Estimator", 0.06933737460744699 AS "Weight", 13 AS est_index 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.4309000372886658) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.590480200946331) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.6370146870613098) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -1.0840756297111511) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.4549274295568466) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5679637044668198) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.7634240686893463) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018190250_7NAHR36_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.3698266865512094 AS "E" UNION ALL SELECT 4 AS nid, 1.1409162524546155 AS "E" UNION ALL SELECT 6 AS nid, 0.7491455198973271 AS "E" UNION ALL SELECT 7 AS nid, 0.3948269861951082 AS "E" UNION ALL SELECT 10 AS nid, 1.514637024776693 AS "E" UNION ALL SELECT 11 AS nid, 1.1309505699917775 AS "E" UNION ALL SELECT 13 AS nid, 1.3693732776411058 AS "E" UNION ALL SELECT 14 AS nid, 1.4950879755999782 AS "E") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."E" AS "E" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"ADB_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."E" AS "Estimator", 0.0846474705277762 AS "Weight", 14 AS est_index 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.7142227292060852) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.0818820148706436) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.19635166227817535) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.5533365607261658) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.3343552350997925) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "TMP_20221018190250_7NAHR36_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 2 AS nid, 0.38342473185592096 AS "E" UNION ALL SELECT 3 AS nid, 0.6100168381304848 AS "E" UNION ALL SELECT 6 AS nid, 1.2193564483406754 AS "E" UNION ALL SELECT 7 AS nid, 1.4510072781537933 AS "E" UNION ALL SELECT 9 AS nid, 0.5401195167617691 AS "E" UNION ALL SELECT 10 AS nid, 1.1415624629213947 AS "E") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."E" AS "E" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"ADB_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."E" AS "Estimator", 0.05527170511046976 AS "Weight", 15 AS est_index 
FROM "DT_Output_15")
 INSERT INTO "TMP_20221018190250_ZJPRI3R_WE_B1" ("KEY", "Estimator", "Weight", est_index) SELECT "T"."KEY", "T"."Estimator", "T"."Weight", "T".est_index 
FROM (SELECT "WE_B1"."KEY" AS "KEY", "WE_B1"."Estimator" AS "Estimator", "WE_B1"."Weight" AS "Weight", "WE_B1".est_index AS est_index 
FROM (SELECT "WE_esu_1"."KEY" AS "KEY", "WE_esu_1"."Estimator" AS "Estimator", "WE_esu_1"."Weight" AS "Weight", "WE_esu_1".est_index AS est_index 
FROM (SELECT "ADB_Model_10"."KEY" AS "KEY", "ADB_Model_10"."Estimator" AS "Estimator", "ADB_Model_10"."Weight" AS "Weight", "ADB_Model_10".est_index AS est_index 
FROM "ADB_Model_10" UNION ALL SELECT "ADB_Model_11"."KEY" AS "KEY", "ADB_Model_11"."Estimator" AS "Estimator", "ADB_Model_11"."Weight" AS "Weight", "ADB_Model_11".est_index AS est_index 
FROM "ADB_Model_11" UNION ALL SELECT "ADB_Model_12"."KEY" AS "KEY", "ADB_Model_12"."Estimator" AS "Estimator", "ADB_Model_12"."Weight" AS "Weight", "ADB_Model_12".est_index AS est_index 
FROM "ADB_Model_12" UNION ALL SELECT "ADB_Model_13"."KEY" AS "KEY", "ADB_Model_13"."Estimator" AS "Estimator", "ADB_Model_13"."Weight" AS "Weight", "ADB_Model_13".est_index AS est_index 
FROM "ADB_Model_13" UNION ALL SELECT "ADB_Model_14"."KEY" AS "KEY", "ADB_Model_14"."Estimator" AS "Estimator", "ADB_Model_14"."Weight" AS "Weight", "ADB_Model_14".est_index AS est_index 
FROM "ADB_Model_14" UNION ALL SELECT "ADB_Model_15"."KEY" AS "KEY", "ADB_Model_15"."Estimator" AS "Estimator", "ADB_Model_15"."Weight" AS "Weight", "ADB_Model_15".est_index AS est_index 
FROM "ADB_Model_15") AS "WE_esu_1") AS "WE_B1") AS "T"

-- Code For temporary table TMP_20221018190250_JQO5N1P_Quantiles part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018190250_JQO5N1P_Quantiles" (
	"KEY" BIGINT, 
	"Quantile" FLOAT
)



-- Code For temporary table TMP_20221018190250_JQO5N1P_Quantiles part 2. Populate

WITH "WE_Union" AS 
(SELECT "WE_EnsembleUnion"."KEY" AS "KEY", "WE_EnsembleUnion"."Estimator" AS "Estimator", "WE_EnsembleUnion"."Weight" AS "Weight", "WE_EnsembleUnion".est_index AS est_index 
FROM (SELECT "WE_B0"."KEY" AS "KEY", "WE_B0"."Estimator" AS "Estimator", "WE_B0"."Weight" AS "Weight", "WE_B0".est_index AS est_index 
FROM "TMP_20221018190250_LYBYBHH_WE_B0" AS "WE_B0" UNION ALL SELECT "WE_B1"."KEY" AS "KEY", "WE_B1"."Estimator" AS "Estimator", "WE_B1"."Weight" AS "Weight", "WE_B1".est_index AS est_index 
FROM "TMP_20221018190250_ZJPRI3R_WE_B1" AS "WE_B1") AS "WE_EnsembleUnion"), 
"Cumulative_Frequencies" AS 
(SELECT "CW"."KEY" AS "KEY", "CW"."Estimator" AS "Estimator", "CW"."Weight" AS "Weight", "CW".est_index AS est_index, "CW".cum_weight AS cum_weight 
FROM (SELECT u1."KEY" AS "KEY", u1."Estimator" AS "Estimator", u1."Weight" AS "Weight", u1.est_index AS est_index, sum(u2."Weight") AS cum_weight 
FROM "WE_Union" AS u1, "WE_Union" AS u2 
WHERE u1."Estimator" >= u2."Estimator" AND u1."KEY" = u2."KEY" GROUP BY u1."KEY", u1.est_index, u1."Estimator", u1."Weight") AS "CW")
 INSERT INTO "TMP_20221018190250_JQO5N1P_Quantiles" ("KEY", "Quantile") SELECT "T"."KEY", "T"."Quantile" 
FROM (SELECT "Quantiles"."KEY" AS "KEY", "Quantiles"."Quantile" AS "Quantile" 
FROM (SELECT "CW2"."KEY" AS "KEY", "CW2"."Quantile" AS "Quantile" 
FROM (SELECT "Cumulative_Frequencies"."KEY" AS "KEY", min("Cumulative_Frequencies"."Estimator") AS "Quantile" 
FROM "Cumulative_Frequencies" 
WHERE "Cumulative_Frequencies".cum_weight >= 0.5 GROUP BY "Cumulative_Frequencies"."KEY") AS "CW2") AS "Quantiles") AS "T"

-- Model deployment code

SELECT "Quantiles"."KEY" AS "KEY", "Quantiles"."Quantile" AS "Estimator" 
FROM "TMP_20221018190250_JQO5N1P_Quantiles" AS "Quantiles"