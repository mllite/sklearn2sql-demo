-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : AdaBoostRegressor_Pipeline
-- Dataset : california_housing
-- Database : duck


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018185557_0I3ZPO8_ADS_imp_1_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185557_0I3ZPO8_ADS_imp_1_OUT" (
	"KEY" BIGINT NOT NULL, 
	imputer_output_2 DOUBLE, 
	imputer_output_3 DOUBLE, 
	imputer_output_4 DOUBLE, 
	imputer_output_5 DOUBLE, 
	imputer_output_6 DOUBLE, 
	imputer_output_7 DOUBLE, 
	imputer_output_8 DOUBLE, 
	imputer_output_9 DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185557_0I3ZPO8_ADS_imp_1_OUT part 2. Populate

INSERT INTO "TMP_20221018185557_0I3ZPO8_ADS_imp_1_OUT" ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5, imputer_output_6, imputer_output_7, imputer_output_8, imputer_output_9) SELECT "T"."KEY", "T".imputer_output_2, "T".imputer_output_3, "T".imputer_output_4, "T".imputer_output_5, "T".imputer_output_6, "T".imputer_output_7, "T".imputer_output_8, "T".imputer_output_9 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".imputer_output_2 AS imputer_output_2, "ADS_imp_1_OUT".imputer_output_3 AS imputer_output_3, "ADS_imp_1_OUT".imputer_output_4 AS imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 AS imputer_output_5, "ADS_imp_1_OUT".imputer_output_6 AS imputer_output_6, "ADS_imp_1_OUT".imputer_output_7 AS imputer_output_7, "ADS_imp_1_OUT".imputer_output_8 AS imputer_output_8, "ADS_imp_1_OUT".imputer_output_9 AS imputer_output_9 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 3.875277222625981 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 28.659944282945737 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 5.428657238393813 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 1.096090907040768 ELSE "ADS"."Feature_3" END AS imputer_output_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 1423.4244186046512 ELSE "ADS"."Feature_4" END AS imputer_output_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 3.014227103131199 ELSE "ADS"."Feature_5" END AS imputer_output_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 35.62345445736438 ELSE "ADS"."Feature_6" END AS imputer_output_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -119.55986736918535 ELSE "ADS"."Feature_7" END AS imputer_output_9 
FROM california_housing AS "ADS") AS "ADS_imp_1_OUT") AS "T"

-- Code For temporary table TMP_20221018185557_0I3ZPO8_ADS_imp_1_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185557_0I3ZPO8_ADS_imp_1_OUT_KEY" ON "TMP_20221018185557_0I3ZPO8_ADS_imp_1_OUT" ("KEY")

-- Code For temporary table TMP_20221018185557_N159ZDT_ADS_sca_2_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185557_N159ZDT_ADS_sca_2_OUT" (
	"KEY" BIGINT NOT NULL, 
	scaler_output_2 DOUBLE, 
	scaler_output_3 DOUBLE, 
	scaler_output_4 DOUBLE, 
	scaler_output_5 DOUBLE, 
	scaler_output_6 DOUBLE, 
	scaler_output_7 DOUBLE, 
	scaler_output_8 DOUBLE, 
	scaler_output_9 DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185557_N159ZDT_ADS_sca_2_OUT part 2. Populate

INSERT INTO "TMP_20221018185557_N159ZDT_ADS_sca_2_OUT" ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9) SELECT "T"."KEY", "T".scaler_output_2, "T".scaler_output_3, "T".scaler_output_4, "T".scaler_output_5, "T".scaler_output_6, "T".scaler_output_7, "T".scaler_output_8, "T".scaler_output_9 
FROM (SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", "ADS_sca_2_OUT".scaler_output_2 AS scaler_output_2, "ADS_sca_2_OUT".scaler_output_3 AS scaler_output_3, "ADS_sca_2_OUT".scaler_output_4 AS scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 AS scaler_output_5, "ADS_sca_2_OUT".scaler_output_6 AS scaler_output_6, "ADS_sca_2_OUT".scaler_output_7 AS scaler_output_7, "ADS_sca_2_OUT".scaler_output_8 AS scaler_output_8, "ADS_sca_2_OUT".scaler_output_9 AS scaler_output_9 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS DOUBLE) - 3.875277222625981) / 1.9053899472815896 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS DOUBLE) - 28.659944282945737) / 12.6088852253006 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS DOUBLE) - 5.428657238393813) / 2.5399058358138342 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS DOUBLE) - 1.096090907040768) / 0.4891610828680933 AS scaler_output_5, (CAST("ADS_imp_1_OUT".imputer_output_6 AS DOUBLE) - 1423.4244186046512) / 1119.3930591342048 AS scaler_output_6, (CAST("ADS_imp_1_OUT".imputer_output_7 AS DOUBLE) - 3.014227103131199) / 6.18082640740381 AS scaler_output_7, (CAST("ADS_imp_1_OUT".imputer_output_8 AS DOUBLE) - 35.62345445736438) / 2.1377165043713364 AS scaler_output_8, (CAST("ADS_imp_1_OUT".imputer_output_9 AS DOUBLE) - -119.55986736918535) / 2.003934000482767 AS scaler_output_9 
FROM "TMP_20221018185557_0I3ZPO8_ADS_imp_1_OUT" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "T"

-- Code For temporary table TMP_20221018185557_N159ZDT_ADS_sca_2_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185557_N159ZDT_ADS_sca_2_OUT_KEY" ON "TMP_20221018185557_N159ZDT_ADS_sca_2_OUT" ("KEY")

-- Code For temporary table TMP_20221018185557_I6SKPM7_WE_B0 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185557_I6SKPM7_WE_B0" (
	"KEY" BIGINT, 
	"Estimator" DOUBLE, 
	"Weight" DOUBLE, 
	est_index BIGINT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185557_I6SKPM7_WE_B0 part 2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.7429045140743256) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.42037442326545715) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.42641931772232056) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.09748395904898643) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.5481202006340027) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.058604490011930466) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 2.067751407623291) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185557_N159ZDT_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.5873715552377592 AS "E" UNION ALL SELECT 4 AS nid, 1.145084608203681 AS "E" UNION ALL SELECT 6 AS nid, 2.822740404814006 AS "E" UNION ALL SELECT 7 AS nid, 1.8927298185151173 AS "E" UNION ALL SELECT 10 AS nid, 3.617205100154086 AS "E" UNION ALL SELECT 11 AS nid, 2.693123127062709 AS "E" UNION ALL SELECT 13 AS nid, 3.8185207760532074 AS "E" UNION ALL SELECT 14 AS nid, 4.604814957264988 AS "E") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."E" AS "E" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"ADB_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."E" AS "Estimator", 0.1320241579970428 AS "Weight", 0 AS est_index 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.2746276557445526) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.1415136381983757) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.1047046780586243) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.6700870990753174) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.2711690664291382) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.08027252927422523) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 2.01072895526886) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185557_N159ZDT_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 2.898023235474006 AS "E" UNION ALL SELECT 4 AS nid, 1.3925648854961847 AS "E" UNION ALL SELECT 6 AS nid, 1.2246912767186662 AS "E" UNION ALL SELECT 7 AS nid, 1.8211269260766334 AS "E" UNION ALL SELECT 10 AS nid, 3.488661481132084 AS "E" UNION ALL SELECT 11 AS nid, 2.48939641679161 AS "E" UNION ALL SELECT 13 AS nid, 3.6458017620137397 AS "E" UNION ALL SELECT 14 AS nid, 4.3813836753445905 AS "E") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."E" AS "E" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"ADB_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."E" AS "Estimator", 0.1117109159379628 AS "Weight", 1 AS est_index 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.04722013883292675) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.1227557435631752) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.0719595551490784) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8668352365493774) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.9682914316654205) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.11559091508388519) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.0016952630248852074) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185557_N159ZDT_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 2.7902067647058857 AS "E" UNION ALL SELECT 4 AS nid, 1.3332288855421681 AS "E" UNION ALL SELECT 6 AS nid, 2.671981695652173 AS "E" UNION ALL SELECT 7 AS nid, 1.5541835018587316 AS "E" UNION ALL SELECT 10 AS nid, 3.6580454288597593 AS "E" UNION ALL SELECT 11 AS nid, 2.4598085686600197 AS "E" UNION ALL SELECT 13 AS nid, 3.9312822271856933 AS "E" UNION ALL SELECT 14 AS nid, 3.0495722370173106 AS "E") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."E" AS "E" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"ADB_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."E" AS "Estimator", 0.08267187800781992 AS "Weight", 2 AS est_index 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.11156625673174858) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.09125304594635963) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.0719595551490784) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.1443026065826416) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.1818435192108154) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.03915948607027531) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.1286691427230835) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185557_N159ZDT_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 2.7905963725490195 AS "E" UNION ALL SELECT 4 AS nid, 1.251824424131627 AS "E" UNION ALL SELECT 6 AS nid, 3.837949999999993 AS "E" UNION ALL SELECT 7 AS nid, 1.5336556606085325 AS "E" UNION ALL SELECT 10 AS nid, 3.215682370654234 AS "E" UNION ALL SELECT 11 AS nid, 2.247949735666417 AS "E" UNION ALL SELECT 13 AS nid, 1.8724963478260868 AS "E" UNION ALL SELECT 14 AS nid, 3.9214532370637736 AS "E") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."E" AS "E" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"ADB_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."E" AS "Estimator", 0.07043927204460348 AS "Weight", 3 AS est_index 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.16294682025909424) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.4941888451576233) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.4647269546985626) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.0719595551490784) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.0953490138053894) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.6471582651138306) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.1478610038757324) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185557_N159ZDT_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 2.3569039707947215 AS "E" UNION ALL SELECT 4 AS nid, 1.4089594735120992 AS "E" UNION ALL SELECT 6 AS nid, 3.452820203515292 AS "E" UNION ALL SELECT 7 AS nid, 1.1005981308411212 AS "E" UNION ALL SELECT 10 AS nid, 2.5912516862586092 AS "E" UNION ALL SELECT 11 AS nid, 3.4852153299202833 AS "E" UNION ALL SELECT 13 AS nid, 1.6418990610328634 AS "E" UNION ALL SELECT 14 AS nid, 2.745402321428571 AS "E") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."E" AS "E" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"ADB_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."E" AS "Estimator", 0.06283428047068203 AS "Weight", 4 AS est_index 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.5677697658538818) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.02901623398065567) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.0672816634178162) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.7620158195495605) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.06662410590797663) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.635556399822235) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.1286691427230835) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185557_N159ZDT_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 3.004683046594952 AS "E" UNION ALL SELECT 4 AS nid, 1.5954984249384785 AS "E" UNION ALL SELECT 6 AS nid, 4.917692682926822 AS "E" UNION ALL SELECT 7 AS nid, 1.7781618360033675 AS "E" UNION ALL SELECT 10 AS nid, 2.841754257362355 AS "E" UNION ALL SELECT 11 AS nid, 3.8596754964539 AS "E" UNION ALL SELECT 13 AS nid, 2.024732989690722 AS "E" UNION ALL SELECT 14 AS nid, 4.024215297157587 AS "E") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."E" AS "E" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"ADB_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."E" AS "Estimator", 0.049640554316338195 AS "Weight", 5 AS est_index 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 1.2000731229782104) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.0719595551490784) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -1.3748619556427002) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 51.88875770568848) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.5524139702320099) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.9505752325057983) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.8958390951156616) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185557_N159ZDT_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 4.246069723435232 AS "E" UNION ALL SELECT 4 AS nid, 2.8336601847032012 AS "E" UNION ALL SELECT 6 AS nid, 1.5010074026696278 AS "E" UNION ALL SELECT 7 AS nid, 5.000009999999995 AS "E" UNION ALL SELECT 10 AS nid, 1.16425 AS "E" UNION ALL SELECT 11 AS nid, 5.000010000000002 AS "E" UNION ALL SELECT 13 AS nid, 1.1304603484602926 AS "E" UNION ALL SELECT 14 AS nid, 2.5330922988505735 AS "E") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."E" AS "E" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"ADB_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."E" AS "Estimator", 0.06107481697254287 AS "Weight", 6 AS est_index 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.07774115726351738) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8449265956878662) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.761772871017456) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.12683509290218353) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.8057765662670135) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.8007230162620544) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.11611470580101013) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185557_N159ZDT_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 1.671162790697675 AS "E" UNION ALL SELECT 4 AS nid, 3.962094896193798 AS "E" UNION ALL SELECT 6 AS nid, 2.986562723673787 AS "E" UNION ALL SELECT 7 AS nid, 1.7396783947981231 AS "E" UNION ALL SELECT 10 AS nid, 2.3792355531335265 AS "E" UNION ALL SELECT 11 AS nid, 3.672640584551141 AS "E" UNION ALL SELECT 13 AS nid, 4.382060827790069 AS "E" UNION ALL SELECT 14 AS nid, 3.2516046239051692 AS "E") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."E" AS "E" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"ADB_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."E" AS "Estimator", 0.0519026769409088 AS "Weight", 7 AS est_index 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.9016909003257751) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 1.2000731229782104) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.5372342467308044) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 1.654179871082306) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.2211300134658813) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.2528436183929443) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 2.0672004222869873) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185557_N159ZDT_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 3.2328582919532955 AS "E" UNION ALL SELECT 4 AS nid, 2.297563205410482 AS "E" UNION ALL SELECT 6 AS nid, 1.4299336133333325 AS "E" UNION ALL SELECT 7 AS nid, 0.6110105263157896 AS "E" UNION ALL SELECT 10 AS nid, 4.900009 AS "E" UNION ALL SELECT 11 AS nid, 1.3055426356589133 AS "E" UNION ALL SELECT 13 AS nid, 3.65635988895741 AS "E" UNION ALL SELECT 14 AS nid, 4.698539509658278 AS "E") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."E" AS "E" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"ADB_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."E" AS "Estimator", 0.03614811553973907 AS "Weight", 8 AS est_index 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.3421489745378494) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8278319835662842) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.6411724984645844) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.048268437385559) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.0672522783279419) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.4885399639606476) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.5216728448867798) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185557_N159ZDT_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 3.9629643790248745 AS "E" UNION ALL SELECT 4 AS nid, 2.0971054999999943 AS "E" UNION ALL SELECT 6 AS nid, 3.3890512857142845 AS "E" UNION ALL SELECT 7 AS nid, 1.8847869622973006 AS "E" UNION ALL SELECT 10 AS nid, 2.6308647168347625 AS "E" UNION ALL SELECT 11 AS nid, 3.9852226915828486 AS "E" UNION ALL SELECT 13 AS nid, 2.432829101123585 AS "E" UNION ALL SELECT 14 AS nid, 3.7089601100513576 AS "E") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."E" AS "E" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"ADB_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."E" AS "Estimator", 0.046276671728078 AS "Weight", 9 AS est_index 
FROM "DT_Output_9")
 INSERT INTO "TMP_20221018185557_I6SKPM7_WE_B0" ("KEY", "Estimator", "Weight", est_index) SELECT "T"."KEY", "T"."Estimator", "T"."Weight", "T".est_index 
FROM (SELECT "WE_B0"."KEY" AS "KEY", "WE_B0"."Estimator" AS "Estimator", "WE_B0"."Weight" AS "Weight", "WE_B0".est_index AS est_index 
FROM (SELECT "WE_esu_0"."KEY" AS "KEY", "WE_esu_0"."Estimator" AS "Estimator", "WE_esu_0"."Weight" AS "Weight", "WE_esu_0".est_index AS est_index 
FROM (SELECT "ADB_Model_0"."KEY" AS "KEY", "ADB_Model_0"."Estimator" AS "Estimator", "ADB_Model_0"."Weight" AS "Weight", "ADB_Model_0".est_index AS est_index 
FROM "ADB_Model_0" UNION ALL SELECT "ADB_Model_1"."KEY" AS "KEY", "ADB_Model_1"."Estimator" AS "Estimator", "ADB_Model_1"."Weight" AS "Weight", "ADB_Model_1".est_index AS est_index 
FROM "ADB_Model_1" UNION ALL SELECT "ADB_Model_2"."KEY" AS "KEY", "ADB_Model_2"."Estimator" AS "Estimator", "ADB_Model_2"."Weight" AS "Weight", "ADB_Model_2".est_index AS est_index 
FROM "ADB_Model_2" UNION ALL SELECT "ADB_Model_3"."KEY" AS "KEY", "ADB_Model_3"."Estimator" AS "Estimator", "ADB_Model_3"."Weight" AS "Weight", "ADB_Model_3".est_index AS est_index 
FROM "ADB_Model_3" UNION ALL SELECT "ADB_Model_4"."KEY" AS "KEY", "ADB_Model_4"."Estimator" AS "Estimator", "ADB_Model_4"."Weight" AS "Weight", "ADB_Model_4".est_index AS est_index 
FROM "ADB_Model_4" UNION ALL SELECT "ADB_Model_5"."KEY" AS "KEY", "ADB_Model_5"."Estimator" AS "Estimator", "ADB_Model_5"."Weight" AS "Weight", "ADB_Model_5".est_index AS est_index 
FROM "ADB_Model_5" UNION ALL SELECT "ADB_Model_6"."KEY" AS "KEY", "ADB_Model_6"."Estimator" AS "Estimator", "ADB_Model_6"."Weight" AS "Weight", "ADB_Model_6".est_index AS est_index 
FROM "ADB_Model_6" UNION ALL SELECT "ADB_Model_7"."KEY" AS "KEY", "ADB_Model_7"."Estimator" AS "Estimator", "ADB_Model_7"."Weight" AS "Weight", "ADB_Model_7".est_index AS est_index 
FROM "ADB_Model_7" UNION ALL SELECT "ADB_Model_8"."KEY" AS "KEY", "ADB_Model_8"."Estimator" AS "Estimator", "ADB_Model_8"."Weight" AS "Weight", "ADB_Model_8".est_index AS est_index 
FROM "ADB_Model_8" UNION ALL SELECT "ADB_Model_9"."KEY" AS "KEY", "ADB_Model_9"."Estimator" AS "Estimator", "ADB_Model_9"."Weight" AS "Weight", "ADB_Model_9".est_index AS est_index 
FROM "ADB_Model_9") AS "WE_esu_0") AS "WE_B0") AS "T"

-- Code For temporary table TMP_20221018185557_FSV9T7N_WE_B1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185557_FSV9T7N_WE_B1" (
	"KEY" BIGINT, 
	"Estimator" DOUBLE, 
	"Weight" DOUBLE, 
	est_index BIGINT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185557_FSV9T7N_WE_B1 part 2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.5585613548755646) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.8285951614379883) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.3752335011959076) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.235870122909546) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.1047046780586243) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.6411724984645844) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.3622380495071411) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185557_N159ZDT_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 0.9482087912087905 AS "E" UNION ALL SELECT 4 AS nid, 3.6245563905325593 AS "E" UNION ALL SELECT 6 AS nid, 4.266304078431361 AS "E" UNION ALL SELECT 7 AS nid, 1.7492700716662386 AS "E" UNION ALL SELECT 10 AS nid, 3.6482979786913745 AS "E" UNION ALL SELECT 11 AS nid, 2.633550275862042 AS "E" UNION ALL SELECT 13 AS nid, 1.4035999999999995 AS "E" UNION ALL SELECT 14 AS nid, 2.1365719178082196 AS "E") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."E" AS "E" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"ADB_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."E" AS "Estimator", 0.05316256462164719 AS "Weight", 10 AS est_index 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.5372342467308044) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.6262019574642181) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.6916045546531677) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 1.2000731229782104) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -1.0754508972167969) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.1093825697898865) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 51.88875770568848) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185557_N159ZDT_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 4.472127498979926 AS "E" UNION ALL SELECT 4 AS nid, 3.739957448210965 AS "E" UNION ALL SELECT 6 AS nid, 2.9473664508340303 AS "E" UNION ALL SELECT 7 AS nid, 1.3446931813246474 AS "E" UNION ALL SELECT 10 AS nid, 3.7657597100175453 AS "E" UNION ALL SELECT 11 AS nid, 1.5181780161943321 AS "E" UNION ALL SELECT 13 AS nid, 1.2551587258248111 AS "E" UNION ALL SELECT 14 AS nid, 5.000009999999989 AS "E") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."E" AS "E" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"ADB_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."E" AS "Estimator", 0.06689878119557423 AS "Weight", 11 AS est_index 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.1693473681807518) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.007977970875799656) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.7056382298469543) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -1.3399306535720825) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.1760162711143494) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.2519502639770508) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.3231269121170044) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185557_N159ZDT_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 3.429727811509997 AS "E" UNION ALL SELECT 4 AS nid, 2.441259917891066 AS "E" UNION ALL SELECT 6 AS nid, 3.9964552808988567 AS "E" UNION ALL SELECT 7 AS nid, 1.6686950300601335 AS "E" UNION ALL SELECT 10 AS nid, 4.800008000000002 AS "E" UNION ALL SELECT 11 AS nid, 1.142975655737703 AS "E" UNION ALL SELECT 13 AS nid, 3.348676050920865 AS "E" UNION ALL SELECT 14 AS nid, 4.34211039412674 AS "E") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."E" AS "E" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"ADB_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."E" AS "Estimator", 0.03846014677166975 AS "Weight", 12 AS est_index 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.8560595214366913) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.6638469099998474) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.1599360704421997) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.9169472754001617) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.0953490138053894) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -1.3998128771781921) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.8701225519180298) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185557_N159ZDT_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 0.8051148837209302 AS "E" UNION ALL SELECT 4 AS nid, 4.923418746268637 AS "E" UNION ALL SELECT 6 AS nid, 3.0156370520231146 AS "E" UNION ALL SELECT 7 AS nid, 1.6410142500000084 AS "E" UNION ALL SELECT 10 AS nid, 4.403367421052643 AS "E" UNION ALL SELECT 11 AS nid, 3.073683267723631 AS "E" UNION ALL SELECT 13 AS nid, 1.3862832550860729 AS "E" UNION ALL SELECT 14 AS nid, 2.6192403875969004 AS "E") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."E" AS "E" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"ADB_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."E" AS "Estimator", 0.049360298426675164 AS "Weight", 13 AS est_index 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.5096713900566101) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.1104029007256031) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 1.1302105784416199) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.1443026065826416) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.2211300134658813) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.2528436183929443) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.4007488489151) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185557_N159ZDT_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 3.41384334792571 AS "E" UNION ALL SELECT 4 AS nid, 1.6361852949852456 AS "E" UNION ALL SELECT 6 AS nid, 4.128058229284942 AS "E" UNION ALL SELECT 7 AS nid, 2.178259565918753 AS "E" UNION ALL SELECT 10 AS nid, 4.900009 AS "E" UNION ALL SELECT 11 AS nid, 0.9856368421052606 AS "E" UNION ALL SELECT 13 AS nid, 3.497010024727975 AS "E" UNION ALL SELECT 14 AS nid, 4.392646017937237 AS "E") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."E" AS "E" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"ADB_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."E" AS "Estimator", 0.034467537890550425 AS "Weight", 14 AS est_index 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.4670659005641937) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.6062411963939667) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.04348558560013771) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 1.205063283443451) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.26704104244709015) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.0719595551490784) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.33296217024326324) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185557_N159ZDT_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, "Values"."E" AS "E" 
FROM (SELECT 3 AS nid, 4.614702663913209 AS "E" UNION ALL SELECT 4 AS nid, 3.719930274809171 AS "E" UNION ALL SELECT 6 AS nid, 3.053058782849187 AS "E" UNION ALL SELECT 7 AS nid, 1.5283985729386886 AS "E" UNION ALL SELECT 10 AS nid, 3.399393358190984 AS "E" UNION ALL SELECT 11 AS nid, 1.8016748637489628 AS "E" UNION ALL SELECT 13 AS nid, 0.7559120604026857 AS "E" UNION ALL SELECT 14 AS nid, 1.4558525903614428 AS "E") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."E" AS "E" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"ADB_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."E" AS "Estimator", 0.052927331138165536 AS "Weight", 15 AS est_index 
FROM "DT_Output_15")
 INSERT INTO "TMP_20221018185557_FSV9T7N_WE_B1" ("KEY", "Estimator", "Weight", est_index) SELECT "T"."KEY", "T"."Estimator", "T"."Weight", "T".est_index 
FROM (SELECT "WE_B1"."KEY" AS "KEY", "WE_B1"."Estimator" AS "Estimator", "WE_B1"."Weight" AS "Weight", "WE_B1".est_index AS est_index 
FROM (SELECT "WE_esu_1"."KEY" AS "KEY", "WE_esu_1"."Estimator" AS "Estimator", "WE_esu_1"."Weight" AS "Weight", "WE_esu_1".est_index AS est_index 
FROM (SELECT "ADB_Model_10"."KEY" AS "KEY", "ADB_Model_10"."Estimator" AS "Estimator", "ADB_Model_10"."Weight" AS "Weight", "ADB_Model_10".est_index AS est_index 
FROM "ADB_Model_10" UNION ALL SELECT "ADB_Model_11"."KEY" AS "KEY", "ADB_Model_11"."Estimator" AS "Estimator", "ADB_Model_11"."Weight" AS "Weight", "ADB_Model_11".est_index AS est_index 
FROM "ADB_Model_11" UNION ALL SELECT "ADB_Model_12"."KEY" AS "KEY", "ADB_Model_12"."Estimator" AS "Estimator", "ADB_Model_12"."Weight" AS "Weight", "ADB_Model_12".est_index AS est_index 
FROM "ADB_Model_12" UNION ALL SELECT "ADB_Model_13"."KEY" AS "KEY", "ADB_Model_13"."Estimator" AS "Estimator", "ADB_Model_13"."Weight" AS "Weight", "ADB_Model_13".est_index AS est_index 
FROM "ADB_Model_13" UNION ALL SELECT "ADB_Model_14"."KEY" AS "KEY", "ADB_Model_14"."Estimator" AS "Estimator", "ADB_Model_14"."Weight" AS "Weight", "ADB_Model_14".est_index AS est_index 
FROM "ADB_Model_14" UNION ALL SELECT "ADB_Model_15"."KEY" AS "KEY", "ADB_Model_15"."Estimator" AS "Estimator", "ADB_Model_15"."Weight" AS "Weight", "ADB_Model_15".est_index AS est_index 
FROM "ADB_Model_15") AS "WE_esu_1") AS "WE_B1") AS "T"

-- Code For temporary table TMP_20221018185557_6X77NKO_Quantiles part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185557_6X77NKO_Quantiles" (
	"KEY" BIGINT, 
	"Quantile" DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185557_6X77NKO_Quantiles part 2. Populate

WITH "WE_Union" AS 
(SELECT "WE_EnsembleUnion"."KEY" AS "KEY", "WE_EnsembleUnion"."Estimator" AS "Estimator", "WE_EnsembleUnion"."Weight" AS "Weight", "WE_EnsembleUnion".est_index AS est_index 
FROM (SELECT "WE_B0"."KEY" AS "KEY", "WE_B0"."Estimator" AS "Estimator", "WE_B0"."Weight" AS "Weight", "WE_B0".est_index AS est_index 
FROM "TMP_20221018185557_I6SKPM7_WE_B0" AS "WE_B0" UNION ALL SELECT "WE_B1"."KEY" AS "KEY", "WE_B1"."Estimator" AS "Estimator", "WE_B1"."Weight" AS "Weight", "WE_B1".est_index AS est_index 
FROM "TMP_20221018185557_FSV9T7N_WE_B1" AS "WE_B1") AS "WE_EnsembleUnion"), 
"Cumulative_Frequencies" AS 
(SELECT "CW"."KEY" AS "KEY", "CW"."Estimator" AS "Estimator", "CW"."Weight" AS "Weight", "CW".est_index AS est_index, "CW".cum_weight AS cum_weight 
FROM (SELECT u1."KEY" AS "KEY", u1."Estimator" AS "Estimator", u1."Weight" AS "Weight", u1.est_index AS est_index, sum(u2."Weight") AS cum_weight 
FROM "WE_Union" AS u1, "WE_Union" AS u2 
WHERE u1."Estimator" >= u2."Estimator" AND u1."KEY" = u2."KEY" GROUP BY u1."KEY", u1.est_index, u1."Estimator", u1."Weight") AS "CW")
 INSERT INTO "TMP_20221018185557_6X77NKO_Quantiles" ("KEY", "Quantile") SELECT "T"."KEY", "T"."Quantile" 
FROM (SELECT "Quantiles"."KEY" AS "KEY", "Quantiles"."Quantile" AS "Quantile" 
FROM (SELECT "CW2"."KEY" AS "KEY", "CW2"."Quantile" AS "Quantile" 
FROM (SELECT "Cumulative_Frequencies"."KEY" AS "KEY", min("Cumulative_Frequencies"."Estimator") AS "Quantile" 
FROM "Cumulative_Frequencies" 
WHERE "Cumulative_Frequencies".cum_weight >= 0.5 GROUP BY "Cumulative_Frequencies"."KEY") AS "CW2") AS "Quantiles") AS "T"

-- Model deployment code

SELECT "Quantiles"."KEY" AS "KEY", "Quantiles"."Quantile" AS "Estimator" 
FROM "TMP_20221018185557_6X77NKO_Quantiles" AS "Quantiles"