-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : GaussianNB
-- Dataset : FourClass_10
-- Database : sqlite


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018185153_CYONUT3_NaiveBayes_Scores part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185153_CYONUT3_NaiveBayes_Scores" (
	"KEY" BIGINT NOT NULL, 
	"Score_0" FLOAT, 
	"Score_1" FLOAT, 
	"Score_2" FLOAT, 
	"Score_3" FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20221018185153_CYONUT3_NaiveBayes_Scores part 2. Populate

WITH centered_data AS 
(SELECT "ADS"."KEY" AS "KEY", CAST("ADS"."Feature_0" AS FLOAT) - 0.12197232402085767 AS "Feature_0_0", CAST("ADS"."Feature_1" AS FLOAT) - -0.2042090641433511 AS "Feature_1_0", CAST("ADS"."Feature_2" AS FLOAT) - -0.17866802296600057 AS "Feature_2_0", CAST("ADS"."Feature_3" AS FLOAT) - -0.33848916280925834 AS "Feature_3_0", CAST("ADS"."Feature_4" AS FLOAT) - 0.692046433348698 AS "Feature_4_0", CAST("ADS"."Feature_5" AS FLOAT) - -0.2328895438714148 AS "Feature_5_0", CAST("ADS"."Feature_6" AS FLOAT) - 0.14890501454364152 AS "Feature_6_0", CAST("ADS"."Feature_7" AS FLOAT) - 0.3442614656998575 AS "Feature_7_0", CAST("ADS"."Feature_8" AS FLOAT) - 0.48106253993680564 AS "Feature_8_0", CAST("ADS"."Feature_9" AS FLOAT) - 0.21072572298483708 AS "Feature_9_0", CAST("ADS"."Feature_0" AS FLOAT) - -0.05580445711365931 AS "Feature_0_1", CAST("ADS"."Feature_1" AS FLOAT) - 1.1164241563456594 AS "Feature_1_1", CAST("ADS"."Feature_2" AS FLOAT) - 1.232091266694883 AS "Feature_2_1", CAST("ADS"."Feature_3" AS FLOAT) - 2.8562011764091926 AS "Feature_3_1", CAST("ADS"."Feature_4" AS FLOAT) - -0.1946777354077039 AS "Feature_4_1", CAST("ADS"."Feature_5" AS FLOAT) - -0.30885979017841814 AS "Feature_5_1", CAST("ADS"."Feature_6" AS FLOAT) - -1.2090009093244745 AS "Feature_6_1", CAST("ADS"."Feature_7" AS FLOAT) - 1.2254337694197592 AS "Feature_7_1", CAST("ADS"."Feature_8" AS FLOAT) - -0.2168859340616714 AS "Feature_8_1", CAST("ADS"."Feature_9" AS FLOAT) - 0.046430005146285355 AS "Feature_9_1", CAST("ADS"."Feature_0" AS FLOAT) - 0.040527414301684696 AS "Feature_0_2", CAST("ADS"."Feature_1" AS FLOAT) - -0.20169636688948053 AS "Feature_1_2", CAST("ADS"."Feature_2" AS FLOAT) - -1.065660222353177 AS "Feature_2_2", CAST("ADS"."Feature_3" AS FLOAT) - -0.9339519751932575 AS "Feature_3_2", CAST("ADS"."Feature_4" AS FLOAT) - -0.9273853948833596 AS "Feature_4_2", CAST("ADS"."Feature_5" AS FLOAT) - 0.18075085383747674 AS "Feature_5_2", CAST("ADS"."Feature_6" AS FLOAT) - 0.3367308034182364 AS "Feature_6_2", CAST("ADS"."Feature_7" AS FLOAT) - -0.04097908155884643 AS "Feature_7_2", CAST("ADS"."Feature_8" AS FLOAT) - 0.26965800608399576 AS "Feature_8_2", CAST("ADS"."Feature_9" AS FLOAT) - 0.14187498063568335 AS "Feature_9_2", CAST("ADS"."Feature_0" AS FLOAT) - -0.10010140605357654 AS "Feature_0_3", CAST("ADS"."Feature_1" AS FLOAT) - 1.5726847768670615 AS "Feature_1_3", CAST("ADS"."Feature_2" AS FLOAT) - 0.1505046581680554 AS "Feature_2_3", CAST("ADS"."Feature_3" AS FLOAT) - 1.3330171535218418 AS "Feature_3_3", CAST("ADS"."Feature_4" AS FLOAT) - -1.120734549744089 AS "Feature_4_3", CAST("ADS"."Feature_5" AS FLOAT) - 0.15247885409781847 AS "Feature_5_3", CAST("ADS"."Feature_6" AS FLOAT) - -0.41282510179714293 AS "Feature_6_3", CAST("ADS"."Feature_7" AS FLOAT) - -0.824909406091562 AS "Feature_7_3", CAST("ADS"."Feature_8" AS FLOAT) - -0.3780460568899708 AS "Feature_8_3", CAST("ADS"."Feature_9" AS FLOAT) - 0.07485010923253889 AS "Feature_9_3" 
FROM "FourClass_10" AS "ADS"), 
"NaiveBayes_data" AS 
(SELECT "Values"."KEY" AS "KEY", "Values"."Feature" AS "Feature", "Values".log_proba_0 AS log_proba_0, "Values".log_proba_1 AS log_proba_1, "Values".log_proba_2 AS log_proba_2, "Values".log_proba_3 AS log_proba_3 
FROM (SELECT centered_data."KEY" AS "KEY", 0 AS "Feature", -0.5 * 2.2795682345573915 - (0.5 * centered_data."Feature_0_0" * centered_data."Feature_0_0") / 1.5553353291646597 AS log_proba_0, -0.5 * 1.542361750008069 - (0.5 * centered_data."Feature_0_1" * centered_data."Feature_0_1") / 0.7441480169661928 AS log_proba_1, -0.5 * 1.731467302427601 - (0.5 * centered_data."Feature_0_2" * centered_data."Feature_0_2") / 0.8990561717501684 AS log_proba_2, -0.5 * 1.4754911020960981 - (0.5 * centered_data."Feature_0_3" * centered_data."Feature_0_3") / 0.6960136795512221 AS log_proba_3 
FROM centered_data UNION ALL SELECT centered_data."KEY" AS "KEY", 1 AS "Feature", -0.5 * 2.0987268150414904 - (0.5 * centered_data."Feature_1_0" * centered_data."Feature_1_0") / 1.2980326196044893 AS log_proba_0, -0.5 * 1.9047850136018802 - (0.5 * centered_data."Feature_1_1" * centered_data."Feature_1_1") / 1.0691970510541402 AS log_proba_1, -0.5 * 2.617399528512052 - (0.5 * centered_data."Feature_1_2" * centered_data."Feature_1_2") / 2.1804307785140757 AS log_proba_2, -0.5 * 1.4943007385349765 - (0.5 * centered_data."Feature_1_3" * centered_data."Feature_1_3") / 0.7092293451100524 AS log_proba_3 
FROM centered_data UNION ALL SELECT centered_data."KEY" AS "KEY", 2 AS "Feature", -0.5 * 1.950790204308714 - (0.5 * centered_data."Feature_2_0" * centered_data."Feature_2_0") / 1.119534683590659 AS log_proba_0, -0.5 * 2.598587528449008 - (0.5 * centered_data."Feature_2_1" * centered_data."Feature_2_1") / 2.139795924363826 AS log_proba_1, -0.5 * 2.1007420735826408 - (0.5 * centered_data."Feature_2_2" * centered_data."Feature_2_2") / 1.3006511285278701 AS log_proba_2, -0.5 * 2.334372261075296 - (0.5 * centered_data."Feature_2_3" * centered_data."Feature_2_3") / 1.6429529379426115 AS log_proba_3 
FROM centered_data UNION ALL SELECT centered_data."KEY" AS "KEY", 3 AS "Feature", -0.5 * 1.6239579730545783 - (0.5 * centered_data."Feature_3_0" * centered_data."Feature_3_0") / 0.807413707514524 AS log_proba_0, -0.5 * 2.8790637266786736 - (0.5 * centered_data."Feature_3_1" * centered_data."Feature_3_1") / 2.83257632656276 AS log_proba_1, -0.5 * 3.6742536584795014 - (0.5 * centered_data."Feature_3_2" * centered_data."Feature_3_2") / 6.273764618376192 AS log_proba_2, -0.5 * 2.91657888591792 - (0.5 * centered_data."Feature_3_3" * centered_data."Feature_3_3") / 2.9408593057393206 AS log_proba_3 
FROM centered_data UNION ALL SELECT centered_data."KEY" AS "KEY", 4 AS "Feature", -0.5 * 1.6432175720543079 - (0.5 * centered_data."Feature_4_0" * centered_data."Feature_4_0") / 0.8231148856087814 AS log_proba_0, -0.5 * 2.900378180548634 - (0.5 * centered_data."Feature_4_1" * centered_data."Feature_4_1") / 2.893599168042484 AS log_proba_1, -0.5 * 2.2711322972048067 - (0.5 * centered_data."Feature_4_2" * centered_data."Feature_4_2") / 1.542269805220253 AS log_proba_2, -0.5 * 1.4361016920835996 - (0.5 * centered_data."Feature_4_3" * centered_data."Feature_4_3") / 0.6691310328199525 AS log_proba_3 
FROM centered_data UNION ALL SELECT centered_data."KEY" AS "KEY", 5 AS "Feature", -0.5 * 0.5906803285262583 - (0.5 * centered_data."Feature_5_0" * centered_data."Feature_5_0") / 0.2873090716734153 AS log_proba_0, -0.5 * 1.723554939658442 - (0.5 * centered_data."Feature_5_1" * centered_data."Feature_5_1") / 0.8919705820140024 AS log_proba_1, -0.5 * 2.1352374143496378 - (0.5 * centered_data."Feature_5_2" * centered_data."Feature_5_2") / 1.3463003486072516 AS log_proba_2, -0.5 * 1.7040389847243937 - (0.5 * centered_data."Feature_5_3" * centered_data."Feature_5_3") / 0.8747316882183717 AS log_proba_3 
FROM centered_data UNION ALL SELECT centered_data."KEY" AS "KEY", 6 AS "Feature", -0.5 * 0.5992575794500339 - (0.5 * centered_data."Feature_6_0" * centered_data."Feature_6_0") / 0.28978399250919723 AS log_proba_0, -0.5 * 1.4610387004075989 - (0.5 * centered_data."Feature_6_1" * centered_data."Feature_6_1") / 0.6860269502139601 AS log_proba_1, -0.5 * 1.9928317389436987 - (0.5 * centered_data."Feature_6_2" * centered_data."Feature_6_2") / 1.1676050353285106 AS log_proba_2, -0.5 * 1.224657730722691 - (0.5 * centered_data."Feature_6_3" * centered_data."Feature_6_3") / 0.5416044528896263 AS log_proba_3 
FROM centered_data UNION ALL SELECT centered_data."KEY" AS "KEY", 7 AS "Feature", -0.5 * 2.512235856273208 - (0.5 * centered_data."Feature_7_0" * centered_data."Feature_7_0") / 1.9627740217881728 AS log_proba_0, -0.5 * 1.9628180595408116 - (0.5 * centered_data."Feature_7_1" * centered_data."Feature_7_1") / 1.1330815914976922 AS log_proba_1, -0.5 * 3.2002384337385066 - (0.5 * centered_data."Feature_7_2" * centered_data."Feature_7_2") / 3.905404516616854 AS log_proba_2, -0.5 * 1.9019578466828024 - (0.5 * centered_data."Feature_7_3" * centered_data."Feature_7_3") / 1.0661785214754689 AS log_proba_3 
FROM centered_data UNION ALL SELECT centered_data."KEY" AS "KEY", 8 AS "Feature", -0.5 * 1.9784045837791924 - (0.5 * centered_data."Feature_8_0" * centered_data."Feature_8_0") / 1.150880748340327 AS log_proba_0, -0.5 * 1.9522235753361836 - (0.5 * centered_data."Feature_8_1" * centered_data."Feature_8_1") / 1.121140542791448 AS log_proba_1, -0.5 * 1.1156882289715433 - (0.5 * centered_data."Feature_8_2" * centered_data."Feature_8_2") / 0.48568799956621594 AS log_proba_2, -0.5 * 2.5088130000211453 - (0.5 * centered_data."Feature_8_3" * centered_data."Feature_8_3") / 1.9560672132251689 AS log_proba_3 
FROM centered_data UNION ALL SELECT centered_data."KEY" AS "KEY", 9 AS "Feature", -0.5 * 2.01066944059928 - (0.5 * centered_data."Feature_9_0" * centered_data."Feature_9_0") / 1.1886192914192353 AS log_proba_0, -0.5 * 1.6318807066510728 - (0.5 * centered_data."Feature_9_1" * centered_data."Feature_9_1") / 0.8138360388374362 AS log_proba_1, -0.5 * 1.7774903574721328 - (0.5 * centered_data."Feature_9_2" * centered_data."Feature_9_2") / 0.9414004152308103 AS log_proba_2, -0.5 * 1.6549510383945059 - (0.5 * centered_data."Feature_9_3" * centered_data."Feature_9_3") / 0.8328297595291985 AS log_proba_3 
FROM centered_data) AS "Values")
 INSERT INTO "TMP_20221018185153_CYONUT3_NaiveBayes_Scores" ("KEY", "Score_0", "Score_1", "Score_2", "Score_3") SELECT "T"."KEY", "T"."Score_0", "T"."Score_1", "T"."Score_2", "T"."Score_3" 
FROM (SELECT "NaiveBayes_Scores"."KEY" AS "KEY", "NaiveBayes_Scores"."Score_0" AS "Score_0", "NaiveBayes_Scores"."Score_1" AS "Score_1", "NaiveBayes_Scores"."Score_2" AS "Score_2", "NaiveBayes_Scores"."Score_3" AS "Score_3" 
FROM (SELECT nb_sums."KEY" AS "KEY", nb_sums."Score_0" AS "Score_0", nb_sums."Score_1" AS "Score_1", nb_sums."Score_2" AS "Score_2", nb_sums."Score_3" AS "Score_3" 
FROM (SELECT "NaiveBayes_data"."KEY" AS "KEY", -1.491654876777717 + sum("NaiveBayes_data".log_proba_0) AS "Score_0", -1.3862943611198906 + sum("NaiveBayes_data".log_proba_1) AS "Score_1", -1.3862943611198906 + sum("NaiveBayes_data".log_proba_2) AS "Score_2", -1.2909841813155656 + sum("NaiveBayes_data".log_proba_3) AS "Score_3" 
FROM "NaiveBayes_data" GROUP BY "NaiveBayes_data"."KEY") AS nb_sums) AS "NaiveBayes_Scores") AS "T"

-- Code For temporary table TMP_20221018185153_CYONUT3_NaiveBayes_Scores part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185153_CYONUT3_NaiveBayes_Scores_KEY" ON "TMP_20221018185153_CYONUT3_NaiveBayes_Scores" ("KEY")

-- Model deployment code

WITH orig_cte AS 
(SELECT "NaiveBayes_Scores"."KEY" AS "KEY", "NaiveBayes_Scores"."Score_0" AS "Score_0", "NaiveBayes_Scores"."Score_1" AS "Score_1", "NaiveBayes_Scores"."Score_2" AS "Score_2", "NaiveBayes_Scores"."Score_3" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "TMP_20221018185153_CYONUT3_NaiveBayes_Scores" AS "NaiveBayes_Scores"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(max(-100.0, score_max."Score_0" - score_max."max_Score")) AS "exp_delta_Score_0", exp(max(-100.0, score_max."Score_1" - score_max."max_Score")) AS "exp_delta_Score_1", exp(max(-100.0, score_max."Score_2" - score_max."max_Score")) AS "exp_delta_Score_2", exp(max(-100.0, score_max."Score_3" - score_max."max_Score")) AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS class, score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."DecisionProba" AS "DecisionProba", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."DecisionProba" AS "DecisionProba", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", max(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."Score" >= union_with_max."max_Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision", max(arg_max_cte."SoftProba_0", arg_max_cte."SoftProba_1", arg_max_cte."SoftProba_2", arg_max_cte."SoftProba_3") AS "DecisionProba" 
FROM arg_max_cte