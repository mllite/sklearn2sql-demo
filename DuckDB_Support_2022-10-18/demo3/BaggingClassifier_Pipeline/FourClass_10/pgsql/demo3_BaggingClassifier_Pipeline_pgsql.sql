-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : BaggingClassifier_Pipeline
-- Dataset : FourClass_10
-- Database : pgsql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018185134_HRGL1WE_ADS_imp_1_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185134_HRGL1WE_ADS_imp_1_OUT" (
	"KEY" BIGINT NOT NULL, 
	imputer_output_2 FLOAT, 
	imputer_output_3 FLOAT, 
	imputer_output_4 FLOAT, 
	imputer_output_5 FLOAT, 
	imputer_output_6 FLOAT, 
	imputer_output_7 FLOAT, 
	imputer_output_8 FLOAT, 
	imputer_output_9 FLOAT, 
	imputer_output_10 FLOAT, 
	imputer_output_11 FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185134_HRGL1WE_ADS_imp_1_OUT part 2. Populate

INSERT INTO "TMP_20221018185134_HRGL1WE_ADS_imp_1_OUT" ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5, imputer_output_6, imputer_output_7, imputer_output_8, imputer_output_9, imputer_output_10, imputer_output_11) SELECT "T"."KEY", "T".imputer_output_2, "T".imputer_output_3, "T".imputer_output_4, "T".imputer_output_5, "T".imputer_output_6, "T".imputer_output_7, "T".imputer_output_8, "T".imputer_output_9, "T".imputer_output_10, "T".imputer_output_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".imputer_output_2 AS imputer_output_2, "ADS_imp_1_OUT".imputer_output_3 AS imputer_output_3, "ADS_imp_1_OUT".imputer_output_4 AS imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 AS imputer_output_5, "ADS_imp_1_OUT".imputer_output_6 AS imputer_output_6, "ADS_imp_1_OUT".imputer_output_7 AS imputer_output_7, "ADS_imp_1_OUT".imputer_output_8 AS imputer_output_8, "ADS_imp_1_OUT".imputer_output_9 AS imputer_output_9, "ADS_imp_1_OUT".imputer_output_10 AS imputer_output_10, "ADS_imp_1_OUT".imputer_output_11 AS imputer_output_11 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.003903374463034205 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.6152232215702322 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.042796236914291665 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.7709819558904074 ELSE "ADS"."Feature_3" END AS imputer_output_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN -0.43300733624893334 ELSE "ADS"."Feature_4" END AS imputer_output_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.0424956965794036 ELSE "ADS"."Feature_5" END AS imputer_output_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.29809080119845455 ELSE "ADS"."Feature_6" END AS imputer_output_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.14672241507251663 ELSE "ADS"."Feature_7" END AS imputer_output_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.01746942384662034 ELSE "ADS"."Feature_8" END AS imputer_output_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.11507331415602866 ELSE "ADS"."Feature_9" END AS imputer_output_11 
FROM "FourClass_10" AS "ADS") AS "ADS_imp_1_OUT") AS "T"

-- Code For temporary table TMP_20221018185134_HRGL1WE_ADS_imp_1_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185134_HRGL1WE_ADS_imp_1_OUT_KEY" ON "TMP_20221018185134_HRGL1WE_ADS_imp_1_OUT" ("KEY")

-- Code For temporary table TMP_20221018185134_QO70PK1_ADS_sca_2_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185134_QO70PK1_ADS_sca_2_OUT" (
	"KEY" BIGINT NOT NULL, 
	scaler_output_2 FLOAT, 
	scaler_output_3 FLOAT, 
	scaler_output_4 FLOAT, 
	scaler_output_5 FLOAT, 
	scaler_output_6 FLOAT, 
	scaler_output_7 FLOAT, 
	scaler_output_8 FLOAT, 
	scaler_output_9 FLOAT, 
	scaler_output_10 FLOAT, 
	scaler_output_11 FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185134_QO70PK1_ADS_sca_2_OUT part 2. Populate

INSERT INTO "TMP_20221018185134_QO70PK1_ADS_sca_2_OUT" ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11) SELECT "T"."KEY", "T".scaler_output_2, "T".scaler_output_3, "T".scaler_output_4, "T".scaler_output_5, "T".scaler_output_6, "T".scaler_output_7, "T".scaler_output_8, "T".scaler_output_9, "T".scaler_output_10, "T".scaler_output_11 
FROM (SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", "ADS_sca_2_OUT".scaler_output_2 AS scaler_output_2, "ADS_sca_2_OUT".scaler_output_3 AS scaler_output_3, "ADS_sca_2_OUT".scaler_output_4 AS scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 AS scaler_output_5, "ADS_sca_2_OUT".scaler_output_6 AS scaler_output_6, "ADS_sca_2_OUT".scaler_output_7 AS scaler_output_7, "ADS_sca_2_OUT".scaler_output_8 AS scaler_output_8, "ADS_sca_2_OUT".scaler_output_9 AS scaler_output_9, "ADS_sca_2_OUT".scaler_output_10 AS scaler_output_10, "ADS_sca_2_OUT".scaler_output_11 AS scaler_output_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS FLOAT) - -0.003903374463034205) / 0.9795060640183997 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS FLOAT) - 0.6152232215702322) / 1.3900807236205235 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS FLOAT) - 0.042796236914291665) / 1.4962685135870766 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS FLOAT) - 0.7709819558904074) / 2.3333561060111743 AS scaler_output_5, (CAST("ADS_imp_1_OUT".imputer_output_6 AS FLOAT) - -0.43300733624893334) / 1.4029757772648748 AS scaler_output_6, (CAST("ADS_imp_1_OUT".imputer_output_7 AS FLOAT) - -0.0424956965794036) / 0.9558091076873229 AS scaler_output_7, (CAST("ADS_imp_1_OUT".imputer_output_8 AS FLOAT) - -0.29809080119845455) / 1.017013180721433 AS scaler_output_8, (CAST("ADS_imp_1_OUT".imputer_output_9 AS FLOAT) - 0.14672241507251663) / 1.600798539929603 AS scaler_output_9, (CAST("ADS_imp_1_OUT".imputer_output_10 AS FLOAT) - 0.01746942384662034) / 1.1487296361671415 AS scaler_output_10, (CAST("ADS_imp_1_OUT".imputer_output_11 AS FLOAT) - 0.11507331415602866) / 0.9690911857336224 AS scaler_output_11 
FROM "TMP_20221018185134_HRGL1WE_ADS_imp_1_OUT" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "T"

-- Code For temporary table TMP_20221018185134_QO70PK1_ADS_sca_2_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185134_QO70PK1_ADS_sca_2_OUT_KEY" ON "TMP_20221018185134_QO70PK1_ADS_sca_2_OUT" ("KEY")

-- Code For temporary table TMP_20221018185134_L66BO0C_BAG_B0 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185134_L66BO0C_BAG_B0" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Proba_0" FLOAT, 
	"LogProba_0" FLOAT, 
	"Score_1" FLOAT, 
	"Proba_1" FLOAT, 
	"LogProba_1" FLOAT, 
	"Score_2" FLOAT, 
	"Proba_2" FLOAT, 
	"LogProba_2" FLOAT, 
	"Score_3" FLOAT, 
	"Proba_3" FLOAT, 
	"LogProba_3" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185134_L66BO0C_BAG_B0 part 2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.20496699959039688) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.7135222852230072) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.10785947740077972) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.7079376727342606) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.2704921662807465) THEN 8 ELSE 9 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.062243292573839426) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.4334330558776855) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.72577565908432) THEN 13 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.41027943789958954) THEN 15 ELSE 16 END END ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.8759022653102875) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.593229278922081) THEN 20 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.11427998542785645) THEN 22 ELSE 23 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.44471753761172295) THEN 25 ELSE 26 END END END END AS node_id_2 
FROM "TMP_20221018185134_QO70PK1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 4 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.9583333333333334 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.041666666666666664 AS "P_3", 0 AS "D", 0.9583333333333334 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."P_0" AS "P_0", "DT_node_data"."P_1" AS "P_1", "DT_node_data"."P_2" AS "P_2", "DT_node_data"."P_3" AS "P_3", "DT_node_data"."D" AS "D", "DT_node_data"."DP" AS "DP" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"BAG_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output"."P_0" AS "Proba_0", CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output"."P_1" AS "Proba_1", CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output"."P_2" AS "Proba_2", CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output"."P_3" AS "Proba_3", CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.0758902789093554) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.05571444891393185) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.18067405000329018) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.12190598528832197) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.15214083343744278) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.2971596121788025) THEN 10 ELSE 11 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.8861697912216187) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.5039697587490082) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5353318005800247) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.34406259655952454) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.9074655771255493) THEN 20 ELSE 21 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.8208808302879333) THEN 23 ELSE 24 END END END AS node_id_2 
FROM "TMP_20221018185134_QO70PK1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 5 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.3333333333333333 AS "P_1", 0.0 AS "P_2", 0.6666666666666666 AS "P_3", 3 AS "D", 0.6666666666666666 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.96 AS "P_1", 0.0 AS "P_2", 0.04 AS "P_3", 1 AS "D", 0.96 AS "DP" UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."P_0" AS "P_0", "DT_node_data_1"."P_1" AS "P_1", "DT_node_data_1"."P_2" AS "P_2", "DT_node_data_1"."P_3" AS "P_3", "DT_node_data_1"."D" AS "D", "DT_node_data_1"."DP" AS "DP" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"BAG_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_1"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_1"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_1"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_1"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.26133164018392563) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.2546616494655609) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.12190598528832197) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.6188681200146675) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 1.2549768686294556) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.8593521118164062) THEN 10 ELSE 11 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.18635689839720726) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 1.003070890903473) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.2985426783561707) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.08975870162248611) THEN 18 ELSE 19 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.9956725239753723) THEN 21 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.686269611120224) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.289800763130188) THEN 24 ELSE 25 END ELSE 26 END END END END AS node_id_2 
FROM "TMP_20221018185134_QO70PK1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 5 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."P_0" AS "P_0", "DT_node_data_2"."P_1" AS "P_1", "DT_node_data_2"."P_2" AS "P_2", "DT_node_data_2"."P_3" AS "P_3", "DT_node_data_2"."D" AS "D", "DT_node_data_2"."DP" AS "DP" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"BAG_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_2"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_2"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_2"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_2"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.041819671634584665) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.037758152931928635) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.7135222852230072) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.6424866914749146) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.2985426783561707) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.5459498167037964) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 1.0352771431207657) THEN 11 ELSE 12 END ELSE 13 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -2.4598768949508667) THEN 15 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5353318005800247) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.4873635321855545) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.2956913411617279) THEN 21 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.5061954259872437) THEN 23 ELSE 24 END END END END END AS node_id_2 
FROM "TMP_20221018185134_QO70PK1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 5 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.9565217391304348 AS "P_1", 0.0 AS "P_2", 0.043478260869565216 AS "P_3", 1 AS "D", 0.9565217391304348 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."P_0" AS "P_0", "DT_node_data_3"."P_1" AS "P_1", "DT_node_data_3"."P_2" AS "P_2", "DT_node_data_3"."P_3" AS "P_3", "DT_node_data_3"."D" AS "D", "DT_node_data_3"."DP" AS "DP" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"BAG_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_3"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_3"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_3"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_3"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.690996915102005) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -1.3757396340370178) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.091533362865448) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5756765604019165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -1.0733897984027863) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.38386066257953644) THEN 10 ELSE 11 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 1.29959374666214) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.4136694520711899) THEN 14 ELSE 15 END ELSE 16 END END AS node_id_2 
FROM "TMP_20221018185134_QO70PK1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 4 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.2727272727272727 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.7272727272727273 AS "P_3", 3 AS "D", 0.7272727272727273 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 0.3333333333333333 AS "P_1", 0.6111111111111112 AS "P_2", 0.05555555555555555 AS "P_3", 2 AS "D", 0.6111111111111112 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."P_0" AS "P_0", "DT_node_data_4"."P_1" AS "P_1", "DT_node_data_4"."P_2" AS "P_2", "DT_node_data_4"."P_3" AS "P_3", "DT_node_data_4"."D" AS "D", "DT_node_data_4"."DP" AS "DP" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"BAG_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_4"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_4"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_4"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_4"."P_2" IS NULL OR "DT_Output_4"."P_2" > 0.0) THEN ln("DT_Output_4"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_4"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_4"."P_3" IS NULL OR "DT_Output_4"."P_3" > 0.0) THEN ln("DT_Output_4"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.13469922170042992) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.6293138116598129) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.12190598528832197) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 0.011103138327598572) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.7135222852230072) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.8707321509718895) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.2346882950514555) THEN 12 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.0432680249214172) THEN 14 ELSE 15 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.31972385942935944) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.5153167992830276) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.1137549951672554) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.289800763130188) THEN 22 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.686269611120224) THEN 24 ELSE 25 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -2.258976697921753) THEN 27 ELSE 28 END END END END AS node_id_2 
FROM "TMP_20221018185134_QO70PK1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 5 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 0.5 AS "P_0", 0.5 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 0.5 AS "DP" UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."P_0" AS "P_0", "DT_node_data_5"."P_1" AS "P_1", "DT_node_data_5"."P_2" AS "P_2", "DT_node_data_5"."P_3" AS "P_3", "DT_node_data_5"."D" AS "D", "DT_node_data_5"."DP" AS "DP" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"BAG_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_5"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_5"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_5"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_5"."P_2" IS NULL OR "DT_Output_5"."P_2" > 0.0) THEN ln("DT_Output_5"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_5"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_5"."P_3" IS NULL OR "DT_Output_5"."P_3" > 0.0) THEN ln("DT_Output_5"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.024253899697214365) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.06688698753714561) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.012722700834274292) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5041590929031372) THEN 5 ELSE 6 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.8025107383728027) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.26682789623737335) THEN 9 ELSE 10 END ELSE 11 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.16974786296486855) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.09038191568106413) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 1.071708858013153) THEN 16 ELSE 17 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -1.75930517911911) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.12697471678256989) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.4062139391899109) THEN 22 ELSE 23 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.2709335684776306) THEN 25 ELSE 26 END END END END END AS node_id_2 
FROM "TMP_20221018185134_QO70PK1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 5 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.5 AS "P_1", 0.5 AS "P_2", 0.0 AS "P_3", 1 AS "D", 0.5 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.6666666666666666 AS "P_1", 0.0 AS "P_2", 0.3333333333333333 AS "P_3", 1 AS "D", 0.6666666666666666 AS "DP" UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."P_0" AS "P_0", "DT_node_data_6"."P_1" AS "P_1", "DT_node_data_6"."P_2" AS "P_2", "DT_node_data_6"."P_3" AS "P_3", "DT_node_data_6"."D" AS "D", "DT_node_data_6"."DP" AS "DP" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"BAG_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_6"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_6"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_6"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_6"."P_2" IS NULL OR "DT_Output_6"."P_2" > 0.0) THEN ln("DT_Output_6"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_6"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_6"."P_3" IS NULL OR "DT_Output_6"."P_3" > 0.0) THEN ln("DT_Output_6"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.1466479580849409) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.8025107383728027) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -1.15753173828125) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.010347388684749603) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.6293138116598129) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -1.1501893997192383) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.6457916796207428) THEN 12 ELSE 13 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.062243292573839426) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 0.823839396238327) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 1.249502956867218) THEN 18 ELSE 19 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -0.27654649317264557) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.3132024705410004) THEN 22 ELSE 23 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.6029440760612488) THEN 25 ELSE 26 END END END END AS node_id_2 
FROM "TMP_20221018185134_QO70PK1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 4 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.125 AS "P_1", 0.875 AS "P_2", 0.0 AS "P_3", 2 AS "D", 0.875 AS "DP" UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."P_0" AS "P_0", "DT_node_data_7"."P_1" AS "P_1", "DT_node_data_7"."P_2" AS "P_2", "DT_node_data_7"."P_3" AS "P_3", "DT_node_data_7"."D" AS "D", "DT_node_data_7"."DP" AS "DP" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"BAG_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_7"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_7"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_7"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_7"."P_2" IS NULL OR "DT_Output_7"."P_2" > 0.0) THEN ln("DT_Output_7"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_7"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_7"."P_3" IS NULL OR "DT_Output_7"."P_3" > 0.0) THEN ln("DT_Output_7"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.06916628405451775) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.089933693408966) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.05571444891393185) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.17495721392333508) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.30720651149749756) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.4066825211048126) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 1.1410517990589142) THEN 12 ELSE 13 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.2709335684776306) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.5198379158973694) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.27204815298318863) THEN 17 ELSE 18 END ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 1.8647207021713257) THEN 21 ELSE 22 END END END AS node_id_2 
FROM "TMP_20221018185134_QO70PK1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."P_0" AS "P_0", "DT_node_data_8"."P_1" AS "P_1", "DT_node_data_8"."P_2" AS "P_2", "DT_node_data_8"."P_3" AS "P_3", "DT_node_data_8"."D" AS "D", "DT_node_data_8"."DP" AS "DP" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"BAG_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_8"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_8"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_8"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_8"."P_2" IS NULL OR "DT_Output_8"."P_2" > 0.0) THEN ln("DT_Output_8"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_8"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_8"."P_3" IS NULL OR "DT_Output_8"."P_3" > 0.0) THEN ln("DT_Output_8"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.39379824697971344) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.146536111831665) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.22245632112026215) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.8591018095612526) THEN 5 ELSE 6 END ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.18635689839720726) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.21016703569330275) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.047089215368032455) THEN 12 ELSE 13 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.3651570528745651) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.09014090895652771) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.9381917417049408) THEN 18 ELSE 19 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.8899189829826355) THEN 21 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 1.4410680532455444) THEN 23 ELSE 24 END END END END END AS node_id_2 
FROM "TMP_20221018185134_QO70PK1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 2 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 5 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."P_0" AS "P_0", "DT_node_data_9"."P_1" AS "P_1", "DT_node_data_9"."P_2" AS "P_2", "DT_node_data_9"."P_3" AS "P_3", "DT_node_data_9"."D" AS "D", "DT_node_data_9"."DP" AS "DP" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"BAG_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_9"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_9"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_9"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_9"."P_2" IS NULL OR "DT_Output_9"."P_2" > 0.0) THEN ln("DT_Output_9"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_9"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_9"."P_3" IS NULL OR "DT_Output_9"."P_3" > 0.0) THEN ln("DT_Output_9"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3" 
FROM "DT_Output_9")
 INSERT INTO "TMP_20221018185134_L66BO0C_BAG_B0" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1", "Score_2", "Proba_2", "LogProba_2", "Score_3", "Proba_3", "LogProba_3") SELECT "T"."KEY", "T"."Score_0", "T"."Proba_0", "T"."LogProba_0", "T"."Score_1", "T"."Proba_1", "T"."LogProba_1", "T"."Score_2", "T"."Proba_2", "T"."LogProba_2", "T"."Score_3", "T"."Proba_3", "T"."LogProba_3" 
FROM (SELECT "BAG_B0"."KEY" AS "KEY", "BAG_B0"."Score_0" AS "Score_0", "BAG_B0"."Proba_0" AS "Proba_0", "BAG_B0"."LogProba_0" AS "LogProba_0", "BAG_B0"."Score_1" AS "Score_1", "BAG_B0"."Proba_1" AS "Proba_1", "BAG_B0"."LogProba_1" AS "LogProba_1", "BAG_B0"."Score_2" AS "Score_2", "BAG_B0"."Proba_2" AS "Proba_2", "BAG_B0"."LogProba_2" AS "LogProba_2", "BAG_B0"."Score_3" AS "Score_3", "BAG_B0"."Proba_3" AS "Proba_3", "BAG_B0"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "BAG_esu_0"."KEY" AS "KEY", "BAG_esu_0"."Score_0" AS "Score_0", "BAG_esu_0"."Proba_0" AS "Proba_0", "BAG_esu_0"."LogProba_0" AS "LogProba_0", "BAG_esu_0"."Score_1" AS "Score_1", "BAG_esu_0"."Proba_1" AS "Proba_1", "BAG_esu_0"."LogProba_1" AS "LogProba_1", "BAG_esu_0"."Score_2" AS "Score_2", "BAG_esu_0"."Proba_2" AS "Proba_2", "BAG_esu_0"."LogProba_2" AS "LogProba_2", "BAG_esu_0"."Score_3" AS "Score_3", "BAG_esu_0"."Proba_3" AS "Proba_3", "BAG_esu_0"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "BAG_Model_0"."KEY" AS "KEY", "BAG_Model_0"."Score_0" AS "Score_0", "BAG_Model_0"."Proba_0" AS "Proba_0", "BAG_Model_0"."LogProba_0" AS "LogProba_0", "BAG_Model_0"."Score_1" AS "Score_1", "BAG_Model_0"."Proba_1" AS "Proba_1", "BAG_Model_0"."LogProba_1" AS "LogProba_1", "BAG_Model_0"."Score_2" AS "Score_2", "BAG_Model_0"."Proba_2" AS "Proba_2", "BAG_Model_0"."LogProba_2" AS "LogProba_2", "BAG_Model_0"."Score_3" AS "Score_3", "BAG_Model_0"."Proba_3" AS "Proba_3", "BAG_Model_0"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Model_0" UNION ALL SELECT "BAG_Model_1"."KEY" AS "KEY", "BAG_Model_1"."Score_0" AS "Score_0", "BAG_Model_1"."Proba_0" AS "Proba_0", "BAG_Model_1"."LogProba_0" AS "LogProba_0", "BAG_Model_1"."Score_1" AS "Score_1", "BAG_Model_1"."Proba_1" AS "Proba_1", "BAG_Model_1"."LogProba_1" AS "LogProba_1", "BAG_Model_1"."Score_2" AS "Score_2", "BAG_Model_1"."Proba_2" AS "Proba_2", "BAG_Model_1"."LogProba_2" AS "LogProba_2", "BAG_Model_1"."Score_3" AS "Score_3", "BAG_Model_1"."Proba_3" AS "Proba_3", "BAG_Model_1"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Model_1" UNION ALL SELECT "BAG_Model_2"."KEY" AS "KEY", "BAG_Model_2"."Score_0" AS "Score_0", "BAG_Model_2"."Proba_0" AS "Proba_0", "BAG_Model_2"."LogProba_0" AS "LogProba_0", "BAG_Model_2"."Score_1" AS "Score_1", "BAG_Model_2"."Proba_1" AS "Proba_1", "BAG_Model_2"."LogProba_1" AS "LogProba_1", "BAG_Model_2"."Score_2" AS "Score_2", "BAG_Model_2"."Proba_2" AS "Proba_2", "BAG_Model_2"."LogProba_2" AS "LogProba_2", "BAG_Model_2"."Score_3" AS "Score_3", "BAG_Model_2"."Proba_3" AS "Proba_3", "BAG_Model_2"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Model_2" UNION ALL SELECT "BAG_Model_3"."KEY" AS "KEY", "BAG_Model_3"."Score_0" AS "Score_0", "BAG_Model_3"."Proba_0" AS "Proba_0", "BAG_Model_3"."LogProba_0" AS "LogProba_0", "BAG_Model_3"."Score_1" AS "Score_1", "BAG_Model_3"."Proba_1" AS "Proba_1", "BAG_Model_3"."LogProba_1" AS "LogProba_1", "BAG_Model_3"."Score_2" AS "Score_2", "BAG_Model_3"."Proba_2" AS "Proba_2", "BAG_Model_3"."LogProba_2" AS "LogProba_2", "BAG_Model_3"."Score_3" AS "Score_3", "BAG_Model_3"."Proba_3" AS "Proba_3", "BAG_Model_3"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Model_3" UNION ALL SELECT "BAG_Model_4"."KEY" AS "KEY", "BAG_Model_4"."Score_0" AS "Score_0", "BAG_Model_4"."Proba_0" AS "Proba_0", "BAG_Model_4"."LogProba_0" AS "LogProba_0", "BAG_Model_4"."Score_1" AS "Score_1", "BAG_Model_4"."Proba_1" AS "Proba_1", "BAG_Model_4"."LogProba_1" AS "LogProba_1", "BAG_Model_4"."Score_2" AS "Score_2", "BAG_Model_4"."Proba_2" AS "Proba_2", "BAG_Model_4"."LogProba_2" AS "LogProba_2", "BAG_Model_4"."Score_3" AS "Score_3", "BAG_Model_4"."Proba_3" AS "Proba_3", "BAG_Model_4"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Model_4" UNION ALL SELECT "BAG_Model_5"."KEY" AS "KEY", "BAG_Model_5"."Score_0" AS "Score_0", "BAG_Model_5"."Proba_0" AS "Proba_0", "BAG_Model_5"."LogProba_0" AS "LogProba_0", "BAG_Model_5"."Score_1" AS "Score_1", "BAG_Model_5"."Proba_1" AS "Proba_1", "BAG_Model_5"."LogProba_1" AS "LogProba_1", "BAG_Model_5"."Score_2" AS "Score_2", "BAG_Model_5"."Proba_2" AS "Proba_2", "BAG_Model_5"."LogProba_2" AS "LogProba_2", "BAG_Model_5"."Score_3" AS "Score_3", "BAG_Model_5"."Proba_3" AS "Proba_3", "BAG_Model_5"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Model_5" UNION ALL SELECT "BAG_Model_6"."KEY" AS "KEY", "BAG_Model_6"."Score_0" AS "Score_0", "BAG_Model_6"."Proba_0" AS "Proba_0", "BAG_Model_6"."LogProba_0" AS "LogProba_0", "BAG_Model_6"."Score_1" AS "Score_1", "BAG_Model_6"."Proba_1" AS "Proba_1", "BAG_Model_6"."LogProba_1" AS "LogProba_1", "BAG_Model_6"."Score_2" AS "Score_2", "BAG_Model_6"."Proba_2" AS "Proba_2", "BAG_Model_6"."LogProba_2" AS "LogProba_2", "BAG_Model_6"."Score_3" AS "Score_3", "BAG_Model_6"."Proba_3" AS "Proba_3", "BAG_Model_6"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Model_6" UNION ALL SELECT "BAG_Model_7"."KEY" AS "KEY", "BAG_Model_7"."Score_0" AS "Score_0", "BAG_Model_7"."Proba_0" AS "Proba_0", "BAG_Model_7"."LogProba_0" AS "LogProba_0", "BAG_Model_7"."Score_1" AS "Score_1", "BAG_Model_7"."Proba_1" AS "Proba_1", "BAG_Model_7"."LogProba_1" AS "LogProba_1", "BAG_Model_7"."Score_2" AS "Score_2", "BAG_Model_7"."Proba_2" AS "Proba_2", "BAG_Model_7"."LogProba_2" AS "LogProba_2", "BAG_Model_7"."Score_3" AS "Score_3", "BAG_Model_7"."Proba_3" AS "Proba_3", "BAG_Model_7"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Model_7" UNION ALL SELECT "BAG_Model_8"."KEY" AS "KEY", "BAG_Model_8"."Score_0" AS "Score_0", "BAG_Model_8"."Proba_0" AS "Proba_0", "BAG_Model_8"."LogProba_0" AS "LogProba_0", "BAG_Model_8"."Score_1" AS "Score_1", "BAG_Model_8"."Proba_1" AS "Proba_1", "BAG_Model_8"."LogProba_1" AS "LogProba_1", "BAG_Model_8"."Score_2" AS "Score_2", "BAG_Model_8"."Proba_2" AS "Proba_2", "BAG_Model_8"."LogProba_2" AS "LogProba_2", "BAG_Model_8"."Score_3" AS "Score_3", "BAG_Model_8"."Proba_3" AS "Proba_3", "BAG_Model_8"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Model_8" UNION ALL SELECT "BAG_Model_9"."KEY" AS "KEY", "BAG_Model_9"."Score_0" AS "Score_0", "BAG_Model_9"."Proba_0" AS "Proba_0", "BAG_Model_9"."LogProba_0" AS "LogProba_0", "BAG_Model_9"."Score_1" AS "Score_1", "BAG_Model_9"."Proba_1" AS "Proba_1", "BAG_Model_9"."LogProba_1" AS "LogProba_1", "BAG_Model_9"."Score_2" AS "Score_2", "BAG_Model_9"."Proba_2" AS "Proba_2", "BAG_Model_9"."LogProba_2" AS "LogProba_2", "BAG_Model_9"."Score_3" AS "Score_3", "BAG_Model_9"."Proba_3" AS "Proba_3", "BAG_Model_9"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Model_9") AS "BAG_esu_0") AS "BAG_B0") AS "T"

-- Code For temporary table TMP_20221018185134_A6YVJ6Z_BAG_B1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185134_A6YVJ6Z_BAG_B1" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Proba_0" FLOAT, 
	"LogProba_0" FLOAT, 
	"Score_1" FLOAT, 
	"Proba_1" FLOAT, 
	"LogProba_1" FLOAT, 
	"Score_2" FLOAT, 
	"Proba_2" FLOAT, 
	"LogProba_2" FLOAT, 
	"Score_3" FLOAT, 
	"Proba_3" FLOAT, 
	"LogProba_3" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185134_A6YVJ6Z_BAG_B1 part 2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.6293008476495743) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.21149110049009323) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -0.34059810638427734) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= -1.0364435613155365) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.13469922170042992) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.18601789884269238) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 1.125637412071228) THEN 12 ELSE 13 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.4133424684405327) THEN 15 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.5202423483133316) THEN 17 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.4906497150659561) THEN 19 ELSE 20 END END END END END AS node_id_2 
FROM "TMP_20221018185134_QO70PK1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 4 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.5 AS "P_1", 0.0 AS "P_2", 0.5 AS "P_3", 1 AS "D", 0.5 AS "DP" UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."P_0" AS "P_0", "DT_node_data_10"."P_1" AS "P_1", "DT_node_data_10"."P_2" AS "P_2", "DT_node_data_10"."P_3" AS "P_3", "DT_node_data_10"."D" AS "D", "DT_node_data_10"."DP" AS "DP" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"BAG_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_10"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_10"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_10"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_10"."P_2" IS NULL OR "DT_Output_10"."P_2" > 0.0) THEN ln("DT_Output_10"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_10"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_10"."P_3" IS NULL OR "DT_Output_10"."P_3" > 0.0) THEN ln("DT_Output_10"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.146536111831665) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.3390422910451889) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.05571444891393185) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.12061124108731747) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.2985426783561707) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -0.6120464354753494) THEN 9 ELSE 10 END END ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.16974786296486855) THEN 13 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.14891164749860764) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.3889448046684265) THEN 16 ELSE 17 END ELSE 18 END END END END AS node_id_2 
FROM "TMP_20221018185134_QO70PK1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."P_0" AS "P_0", "DT_node_data_11"."P_1" AS "P_1", "DT_node_data_11"."P_2" AS "P_2", "DT_node_data_11"."P_3" AS "P_3", "DT_node_data_11"."D" AS "D", "DT_node_data_11"."DP" AS "DP" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"BAG_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_11"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_11"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_11"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_11"."P_2" IS NULL OR "DT_Output_11"."P_2" > 0.0) THEN ln("DT_Output_11"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_11"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_11"."P_3" IS NULL OR "DT_Output_11"."P_3" > 0.0) THEN ln("DT_Output_11"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.46353819966316223) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.12132770754396915) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 2.1401240825653076) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.4057677686214447) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.13469922170042992) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 1.003070890903473) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.161614328622818) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.3320254161953926) THEN 13 ELSE 14 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.4321153745986521) THEN 16 ELSE 17 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= 0.1137549951672554) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -0.06389793008565903) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.18983598053455353) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.3266519755125046) THEN 24 ELSE 25 END END ELSE 26 END END END AS node_id_2 
FROM "TMP_20221018185134_QO70PK1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 4 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.8333333333333334 AS "P_2", 0.16666666666666666 AS "P_3", 2 AS "D", 0.8333333333333334 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."P_0" AS "P_0", "DT_node_data_12"."P_1" AS "P_1", "DT_node_data_12"."P_2" AS "P_2", "DT_node_data_12"."P_3" AS "P_3", "DT_node_data_12"."D" AS "D", "DT_node_data_12"."DP" AS "DP" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"BAG_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_12"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_12"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_12"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_12"."P_2" IS NULL OR "DT_Output_12"."P_2" > 0.0) THEN ln("DT_Output_12"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_12"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_12"."P_3" IS NULL OR "DT_Output_12"."P_3" > 0.0) THEN ln("DT_Output_12"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.7317952811717987) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.13469922170042992) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5756765604019165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.9766426384449005) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.14677949994802475) THEN 7 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.1948721781373024) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.12711439840495586) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 1.8272849917411804) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 1.9231358766555786) THEN 14 ELSE 15 END ELSE 16 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.6457916796207428) THEN 18 ELSE 19 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= -0.535994365811348) THEN 21 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.26232411712408066) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.903044730424881) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 1.6438356339931488) THEN 26 ELSE 27 END END ELSE 28 END END END AS node_id_2 
FROM "TMP_20221018185134_QO70PK1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 5 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.8888888888888888 AS "P_1", 0.05555555555555555 AS "P_2", 0.05555555555555555 AS "P_3", 1 AS "D", 0.8888888888888888 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."P_0" AS "P_0", "DT_node_data_13"."P_1" AS "P_1", "DT_node_data_13"."P_2" AS "P_2", "DT_node_data_13"."P_3" AS "P_3", "DT_node_data_13"."D" AS "D", "DT_node_data_13"."DP" AS "DP" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"BAG_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_13"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_13"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_13"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_13"."P_2" IS NULL OR "DT_Output_13"."P_2" > 0.0) THEN ln("DT_Output_13"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_13"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_13"."P_3" IS NULL OR "DT_Output_13"."P_3" > 0.0) THEN ln("DT_Output_13"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.16372588276863098) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.058202026411890984) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.5756765604019165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.12190598528832197) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= -1.9583714604377747) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 <= 0.5615823566913605) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= 0.10855816677212715) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -0.07403384149074554) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= -0.42016299068927765) THEN 15 ELSE 16 END END ELSE 17 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.332256555557251) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= -1.2459433674812317) THEN 20 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 0.39308997988700867) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.903044730424881) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 <= 1.1418177634477615) THEN 26 ELSE 27 END END END ELSE 28 END END AS node_id_2 
FROM "TMP_20221018185134_QO70PK1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 5 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.75 AS "P_0", 0.25 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 0.75 AS "DP" UNION ALL SELECT 26 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 27 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."P_0" AS "P_0", "DT_node_data_14"."P_1" AS "P_1", "DT_node_data_14"."P_2" AS "P_2", "DT_node_data_14"."P_3" AS "P_3", "DT_node_data_14"."D" AS "D", "DT_node_data_14"."DP" AS "DP" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"BAG_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_14"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_14"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_14"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_14"."P_2" IS NULL OR "DT_Output_14"."P_2" > 0.0) THEN ln("DT_Output_14"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_14"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_14"."P_3" IS NULL OR "DT_Output_14"."P_3" > 0.0) THEN ln("DT_Output_14"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 <= 0.12131557986140251) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 <= 0.05571444891393185) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= 0.16096458584070206) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= -0.446695014834404) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 <= -0.7765676081180573) THEN 5 ELSE 6 END ELSE 7 END ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 <= 1.4334330558776855) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 <= -1.72577565908432) THEN 11 ELSE 12 END ELSE 13 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.8861697912216187) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= -0.2896479144692421) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 <= -1.75930517911911) THEN 18 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 <= 0.2743743285536766) THEN 20 ELSE 21 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 <= 0.31594332307577133) THEN 23 ELSE 24 END END END AS node_id_2 
FROM "TMP_20221018185134_QO70PK1_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.8 AS "P_1", 0.0 AS "P_2", 0.2 AS "P_3", 1 AS "D", 0.8 AS "DP" UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 2 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."P_0" AS "P_0", "DT_node_data_15"."P_1" AS "P_1", "DT_node_data_15"."P_2" AS "P_2", "DT_node_data_15"."P_3" AS "P_3", "DT_node_data_15"."D" AS "D", "DT_node_data_15"."DP" AS "DP" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"BAG_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_15"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_15"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_15"."P_2" AS "Proba_2", CASE WHEN ("DT_Output_15"."P_2" IS NULL OR "DT_Output_15"."P_2" > 0.0) THEN ln("DT_Output_15"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_15"."P_3" AS "Proba_3", CASE WHEN ("DT_Output_15"."P_3" IS NULL OR "DT_Output_15"."P_3" > 0.0) THEN ln("DT_Output_15"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3" 
FROM "DT_Output_15")
 INSERT INTO "TMP_20221018185134_A6YVJ6Z_BAG_B1" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1", "Score_2", "Proba_2", "LogProba_2", "Score_3", "Proba_3", "LogProba_3") SELECT "T"."KEY", "T"."Score_0", "T"."Proba_0", "T"."LogProba_0", "T"."Score_1", "T"."Proba_1", "T"."LogProba_1", "T"."Score_2", "T"."Proba_2", "T"."LogProba_2", "T"."Score_3", "T"."Proba_3", "T"."LogProba_3" 
FROM (SELECT "BAG_B1"."KEY" AS "KEY", "BAG_B1"."Score_0" AS "Score_0", "BAG_B1"."Proba_0" AS "Proba_0", "BAG_B1"."LogProba_0" AS "LogProba_0", "BAG_B1"."Score_1" AS "Score_1", "BAG_B1"."Proba_1" AS "Proba_1", "BAG_B1"."LogProba_1" AS "LogProba_1", "BAG_B1"."Score_2" AS "Score_2", "BAG_B1"."Proba_2" AS "Proba_2", "BAG_B1"."LogProba_2" AS "LogProba_2", "BAG_B1"."Score_3" AS "Score_3", "BAG_B1"."Proba_3" AS "Proba_3", "BAG_B1"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "BAG_esu_1"."KEY" AS "KEY", "BAG_esu_1"."Score_0" AS "Score_0", "BAG_esu_1"."Proba_0" AS "Proba_0", "BAG_esu_1"."LogProba_0" AS "LogProba_0", "BAG_esu_1"."Score_1" AS "Score_1", "BAG_esu_1"."Proba_1" AS "Proba_1", "BAG_esu_1"."LogProba_1" AS "LogProba_1", "BAG_esu_1"."Score_2" AS "Score_2", "BAG_esu_1"."Proba_2" AS "Proba_2", "BAG_esu_1"."LogProba_2" AS "LogProba_2", "BAG_esu_1"."Score_3" AS "Score_3", "BAG_esu_1"."Proba_3" AS "Proba_3", "BAG_esu_1"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "BAG_Model_10"."KEY" AS "KEY", "BAG_Model_10"."Score_0" AS "Score_0", "BAG_Model_10"."Proba_0" AS "Proba_0", "BAG_Model_10"."LogProba_0" AS "LogProba_0", "BAG_Model_10"."Score_1" AS "Score_1", "BAG_Model_10"."Proba_1" AS "Proba_1", "BAG_Model_10"."LogProba_1" AS "LogProba_1", "BAG_Model_10"."Score_2" AS "Score_2", "BAG_Model_10"."Proba_2" AS "Proba_2", "BAG_Model_10"."LogProba_2" AS "LogProba_2", "BAG_Model_10"."Score_3" AS "Score_3", "BAG_Model_10"."Proba_3" AS "Proba_3", "BAG_Model_10"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Model_10" UNION ALL SELECT "BAG_Model_11"."KEY" AS "KEY", "BAG_Model_11"."Score_0" AS "Score_0", "BAG_Model_11"."Proba_0" AS "Proba_0", "BAG_Model_11"."LogProba_0" AS "LogProba_0", "BAG_Model_11"."Score_1" AS "Score_1", "BAG_Model_11"."Proba_1" AS "Proba_1", "BAG_Model_11"."LogProba_1" AS "LogProba_1", "BAG_Model_11"."Score_2" AS "Score_2", "BAG_Model_11"."Proba_2" AS "Proba_2", "BAG_Model_11"."LogProba_2" AS "LogProba_2", "BAG_Model_11"."Score_3" AS "Score_3", "BAG_Model_11"."Proba_3" AS "Proba_3", "BAG_Model_11"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Model_11" UNION ALL SELECT "BAG_Model_12"."KEY" AS "KEY", "BAG_Model_12"."Score_0" AS "Score_0", "BAG_Model_12"."Proba_0" AS "Proba_0", "BAG_Model_12"."LogProba_0" AS "LogProba_0", "BAG_Model_12"."Score_1" AS "Score_1", "BAG_Model_12"."Proba_1" AS "Proba_1", "BAG_Model_12"."LogProba_1" AS "LogProba_1", "BAG_Model_12"."Score_2" AS "Score_2", "BAG_Model_12"."Proba_2" AS "Proba_2", "BAG_Model_12"."LogProba_2" AS "LogProba_2", "BAG_Model_12"."Score_3" AS "Score_3", "BAG_Model_12"."Proba_3" AS "Proba_3", "BAG_Model_12"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Model_12" UNION ALL SELECT "BAG_Model_13"."KEY" AS "KEY", "BAG_Model_13"."Score_0" AS "Score_0", "BAG_Model_13"."Proba_0" AS "Proba_0", "BAG_Model_13"."LogProba_0" AS "LogProba_0", "BAG_Model_13"."Score_1" AS "Score_1", "BAG_Model_13"."Proba_1" AS "Proba_1", "BAG_Model_13"."LogProba_1" AS "LogProba_1", "BAG_Model_13"."Score_2" AS "Score_2", "BAG_Model_13"."Proba_2" AS "Proba_2", "BAG_Model_13"."LogProba_2" AS "LogProba_2", "BAG_Model_13"."Score_3" AS "Score_3", "BAG_Model_13"."Proba_3" AS "Proba_3", "BAG_Model_13"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Model_13" UNION ALL SELECT "BAG_Model_14"."KEY" AS "KEY", "BAG_Model_14"."Score_0" AS "Score_0", "BAG_Model_14"."Proba_0" AS "Proba_0", "BAG_Model_14"."LogProba_0" AS "LogProba_0", "BAG_Model_14"."Score_1" AS "Score_1", "BAG_Model_14"."Proba_1" AS "Proba_1", "BAG_Model_14"."LogProba_1" AS "LogProba_1", "BAG_Model_14"."Score_2" AS "Score_2", "BAG_Model_14"."Proba_2" AS "Proba_2", "BAG_Model_14"."LogProba_2" AS "LogProba_2", "BAG_Model_14"."Score_3" AS "Score_3", "BAG_Model_14"."Proba_3" AS "Proba_3", "BAG_Model_14"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Model_14" UNION ALL SELECT "BAG_Model_15"."KEY" AS "KEY", "BAG_Model_15"."Score_0" AS "Score_0", "BAG_Model_15"."Proba_0" AS "Proba_0", "BAG_Model_15"."LogProba_0" AS "LogProba_0", "BAG_Model_15"."Score_1" AS "Score_1", "BAG_Model_15"."Proba_1" AS "Proba_1", "BAG_Model_15"."LogProba_1" AS "LogProba_1", "BAG_Model_15"."Score_2" AS "Score_2", "BAG_Model_15"."Proba_2" AS "Proba_2", "BAG_Model_15"."LogProba_2" AS "LogProba_2", "BAG_Model_15"."Score_3" AS "Score_3", "BAG_Model_15"."Proba_3" AS "Proba_3", "BAG_Model_15"."LogProba_3" AS "LogProba_3" 
FROM "BAG_Model_15") AS "BAG_esu_1") AS "BAG_B1") AS "T"

-- Code For temporary table TMP_20221018185134_H9MNVKV_BAG_avg part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185134_H9MNVKV_BAG_avg" (
	"KEY" BIGINT NOT NULL, 
	"Score_0" FLOAT, 
	"Proba_0" FLOAT, 
	"LogProba_0" FLOAT, 
	"Score_1" FLOAT, 
	"Proba_1" FLOAT, 
	"LogProba_1" FLOAT, 
	"Score_2" FLOAT, 
	"Proba_2" FLOAT, 
	"LogProba_2" FLOAT, 
	"Score_3" FLOAT, 
	"Proba_3" FLOAT, 
	"LogProba_3" FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185134_H9MNVKV_BAG_avg part 2. Populate

WITH "BAG_Union" AS 
(SELECT "BAG_EnsembleUnion"."KEY" AS "KEY", "BAG_EnsembleUnion"."Score_0" AS "Score_0", "BAG_EnsembleUnion"."Proba_0" AS "Proba_0", "BAG_EnsembleUnion"."LogProba_0" AS "LogProba_0", "BAG_EnsembleUnion"."Score_1" AS "Score_1", "BAG_EnsembleUnion"."Proba_1" AS "Proba_1", "BAG_EnsembleUnion"."LogProba_1" AS "LogProba_1", "BAG_EnsembleUnion"."Score_2" AS "Score_2", "BAG_EnsembleUnion"."Proba_2" AS "Proba_2", "BAG_EnsembleUnion"."LogProba_2" AS "LogProba_2", "BAG_EnsembleUnion"."Score_3" AS "Score_3", "BAG_EnsembleUnion"."Proba_3" AS "Proba_3", "BAG_EnsembleUnion"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "BAG_B0"."KEY" AS "KEY", "BAG_B0"."Score_0" AS "Score_0", "BAG_B0"."Proba_0" AS "Proba_0", "BAG_B0"."LogProba_0" AS "LogProba_0", "BAG_B0"."Score_1" AS "Score_1", "BAG_B0"."Proba_1" AS "Proba_1", "BAG_B0"."LogProba_1" AS "LogProba_1", "BAG_B0"."Score_2" AS "Score_2", "BAG_B0"."Proba_2" AS "Proba_2", "BAG_B0"."LogProba_2" AS "LogProba_2", "BAG_B0"."Score_3" AS "Score_3", "BAG_B0"."Proba_3" AS "Proba_3", "BAG_B0"."LogProba_3" AS "LogProba_3" 
FROM "TMP_20221018185134_L66BO0C_BAG_B0" AS "BAG_B0" UNION ALL SELECT "BAG_B1"."KEY" AS "KEY", "BAG_B1"."Score_0" AS "Score_0", "BAG_B1"."Proba_0" AS "Proba_0", "BAG_B1"."LogProba_0" AS "LogProba_0", "BAG_B1"."Score_1" AS "Score_1", "BAG_B1"."Proba_1" AS "Proba_1", "BAG_B1"."LogProba_1" AS "LogProba_1", "BAG_B1"."Score_2" AS "Score_2", "BAG_B1"."Proba_2" AS "Proba_2", "BAG_B1"."LogProba_2" AS "LogProba_2", "BAG_B1"."Score_3" AS "Score_3", "BAG_B1"."Proba_3" AS "Proba_3", "BAG_B1"."LogProba_3" AS "LogProba_3" 
FROM "TMP_20221018185134_A6YVJ6Z_BAG_B1" AS "BAG_B1") AS "BAG_EnsembleUnion")
 INSERT INTO "TMP_20221018185134_H9MNVKV_BAG_avg" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1", "Score_2", "Proba_2", "LogProba_2", "Score_3", "Proba_3", "LogProba_3") SELECT "T"."KEY", "T"."Score_0", "T"."Proba_0", "T"."LogProba_0", "T"."Score_1", "T"."Proba_1", "T"."LogProba_1", "T"."Score_2", "T"."Proba_2", "T"."LogProba_2", "T"."Score_3", "T"."Proba_3", "T"."LogProba_3" 
FROM (SELECT "BAG_avg"."KEY" AS "KEY", "BAG_avg"."Score_0" AS "Score_0", "BAG_avg"."Proba_0" AS "Proba_0", "BAG_avg"."LogProba_0" AS "LogProba_0", "BAG_avg"."Score_1" AS "Score_1", "BAG_avg"."Proba_1" AS "Proba_1", "BAG_avg"."LogProba_1" AS "LogProba_1", "BAG_avg"."Score_2" AS "Score_2", "BAG_avg"."Proba_2" AS "Proba_2", "BAG_avg"."LogProba_2" AS "LogProba_2", "BAG_avg"."Score_3" AS "Score_3", "BAG_avg"."Proba_3" AS "Proba_3", "BAG_avg"."LogProba_3" AS "LogProba_3" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS FLOAT) AS "Score_0", CAST("T"."Proba_0" AS FLOAT) AS "Proba_0", CAST("T"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("T"."Score_1" AS FLOAT) AS "Score_1", CAST("T"."Proba_1" AS FLOAT) AS "Proba_1", CAST("T"."LogProba_1" AS FLOAT) AS "LogProba_1", CAST("T"."Score_2" AS FLOAT) AS "Score_2", CAST("T"."Proba_2" AS FLOAT) AS "Proba_2", CAST("T"."LogProba_2" AS FLOAT) AS "LogProba_2", CAST("T"."Score_3" AS FLOAT) AS "Score_3", CAST("T"."Proba_3" AS FLOAT) AS "Proba_3", CAST("T"."LogProba_3" AS FLOAT) AS "LogProba_3" 
FROM (SELECT "BAG_Union"."KEY" AS "KEY", avg(CAST("BAG_Union"."Score_0" AS FLOAT)) AS "Score_0", avg(CAST("BAG_Union"."Proba_0" AS FLOAT)) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0", avg(CAST("BAG_Union"."Score_1" AS FLOAT)) AS "Score_1", avg(CAST("BAG_Union"."Proba_1" AS FLOAT)) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1", avg(CAST("BAG_Union"."Score_2" AS FLOAT)) AS "Score_2", avg(CAST("BAG_Union"."Proba_2" AS FLOAT)) AS "Proba_2", CAST(NULL AS FLOAT) AS "LogProba_2", avg(CAST("BAG_Union"."Score_3" AS FLOAT)) AS "Score_3", avg(CAST("BAG_Union"."Proba_3" AS FLOAT)) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_3" 
FROM "BAG_Union" GROUP BY "BAG_Union"."KEY") AS "T") AS "BAG_avg") AS "T"

-- Code For temporary table TMP_20221018185134_H9MNVKV_BAG_avg part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185134_H9MNVKV_BAG_avg_KEY" ON "TMP_20221018185134_H9MNVKV_BAG_avg" ("KEY")

-- Model deployment code

WITH orig_cte AS 
(SELECT "BAG_avg"."KEY" AS "KEY", "BAG_avg"."Score_0" AS "Score_0", "BAG_avg"."Score_1" AS "Score_1", "BAG_avg"."Score_2" AS "Score_2", "BAG_avg"."Score_3" AS "Score_3", "BAG_avg"."Proba_0" AS "Proba_0", "BAG_avg"."Proba_1" AS "Proba_1", "BAG_avg"."Proba_2" AS "Proba_2", "BAG_avg"."Proba_3" AS "Proba_3", "BAG_avg"."LogProba_0" AS "LogProba_0", "BAG_avg"."LogProba_1" AS "LogProba_1", "BAG_avg"."LogProba_2" AS "LogProba_2", "BAG_avg"."LogProba_3" AS "LogProba_3", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "TMP_20221018185134_H9MNVKV_BAG_avg" AS "BAG_avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", max(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."Proba" >= union_with_max."max_Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE '-Infinity'::float8 END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte