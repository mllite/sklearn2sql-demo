-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : AdaBoostClassifier
-- Dataset : BreastCancer
-- Database : pgsql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018185019_JOZWWH1_ADB_B0 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185019_JOZWWH1_ADB_B0" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Proba_0" FLOAT, 
	"Score_1" FLOAT, 
	"Proba_1" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185019_JOZWWH1_ADB_B0 part 2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14545000344514847) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 0.06472491909385128 AS "P_0", 0.9352750809061487 AS "P_1", 1 AS "D", 0.9352750809061487 AS "DP" UNION ALL SELECT 2 AS nid, 0.958904109589041 AS "P_0", 0.04109589041095896 AS "P_1", 0 AS "D", 0.958904109589041 AS "DP") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."P_0" AS "P_0", "DT_node_data"."P_1" AS "P_1", "DT_node_data"."D" AS "D", "DT_node_data"."DP" AS "DP" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"ADB_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", (1 * (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_0", 1 * (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_0", (1 * (CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_1", 1 * (CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_1" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_20" <= 16.375) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 0.1539570955001853 AS "P_0", 0.8460429044998148 AS "P_1", 1 AS "D", 0.8460429044998148 AS "DP" UNION ALL SELECT 2 AS nid, 0.9402314464975295 AS "P_0", 0.05976855350247043 AS "P_1", 0 AS "D", 0.9402314464975295 AS "DP") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."P_0" AS "P_0", "DT_node_data_1"."P_1" AS "P_1", "DT_node_data_1"."D" AS "D", "DT_node_data_1"."DP" AS "DP" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"ADB_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", (1 * (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_0", 1 * (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_0", (1 * (CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_1", 1 * (CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_1"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_1"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_13" <= 33.0049991607666) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 0.14115714255582834 AS "P_0", 0.8588428574441717 AS "P_1", 1 AS "D", 0.8588428574441717 AS "DP" UNION ALL SELECT 2 AS nid, 0.8401012721269864 AS "P_0", 0.1598987278730137 AS "P_1", 0 AS "D", 0.8401012721269864 AS "DP") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."P_0" AS "P_0", "DT_node_data_2"."P_1" AS "P_1", "DT_node_data_2"."D" AS "D", "DT_node_data_2"."DP" AS "DP" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"ADB_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", (1 * (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_0", 1 * (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_0", (1 * (CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_1", 1 * (CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_2"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_2"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_1" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 23.02500057220459) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 0.031741451231945966 AS "P_0", 0.968258548768054 AS "P_1", 1 AS "D", 0.968258548768054 AS "DP" UNION ALL SELECT 2 AS nid, 0.733245871966448 AS "P_0", 0.26675412803355203 AS "P_1", 0 AS "D", 0.733245871966448 AS "DP") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."P_0" AS "P_0", "DT_node_data_3"."P_1" AS "P_1", "DT_node_data_3"."D" AS "D", "DT_node_data_3"."DP" AS "DP" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"ADB_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", (1 * (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_0", 1 * (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_0", (1 * (CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_1", 1 * (CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_3"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_3"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_1" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= 0.04891999997198582) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 0.2624896697802413 AS "P_0", 0.7375103302197588 AS "P_1", 1 AS "D", 0.7375103302197588 AS "DP" UNION ALL SELECT 2 AS nid, 0.8297285754857712 AS "P_0", 0.1702714245142288 AS "P_1", 0 AS "D", 0.8297285754857712 AS "DP") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."P_0" AS "P_0", "DT_node_data_4"."P_1" AS "P_1", "DT_node_data_4"."D" AS "D", "DT_node_data_4"."DP" AS "DP" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"ADB_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", (1 * (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_0", 1 * (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_0", (1 * (CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_1", 1 * (CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_4"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_4"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_1" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_15" <= 0.011754999868571758) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 0.8470946900106654 AS "P_0", 0.1529053099893346 AS "P_1", 0 AS "D", 0.8470946900106654 AS "DP" UNION ALL SELECT 2 AS nid, 0.3427558765785804 AS "P_0", 0.6572441234214196 AS "P_1", 1 AS "D", 0.6572441234214196 AS "DP") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."P_0" AS "P_0", "DT_node_data_5"."P_1" AS "P_1", "DT_node_data_5"."D" AS "D", "DT_node_data_5"."DP" AS "DP" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"ADB_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", (1 * (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_0", 1 * (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_0", (1 * (CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_1", 1 * (CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_5"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_5"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_1" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_26" <= 0.2248000055551529) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 0.20400415805922534 AS "P_0", 0.7959958419407747 AS "P_1", 1 AS "D", 0.7959958419407747 AS "DP" UNION ALL SELECT 2 AS nid, 0.7137038175255146 AS "P_0", 0.28629618247448546 AS "P_1", 0 AS "D", 0.7137038175255146 AS "DP") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."P_0" AS "P_0", "DT_node_data_6"."P_1" AS "P_1", "DT_node_data_6"."D" AS "D", "DT_node_data_6"."DP" AS "DP" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"ADB_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", (1 * (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_0", 1 * (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_0", (1 * (CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_1", 1 * (CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_6"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_6"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_1" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_18" <= 0.02552499994635582) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 0.6264516023256158 AS "P_0", 0.37354839767438414 AS "P_1", 0 AS "D", 0.6264516023256158 AS "DP" UNION ALL SELECT 2 AS nid, 0.12193443686486664 AS "P_0", 0.8780655631351334 AS "P_1", 1 AS "D", 0.8780655631351334 AS "DP") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."P_0" AS "P_0", "DT_node_data_7"."P_1" AS "P_1", "DT_node_data_7"."D" AS "D", "DT_node_data_7"."DP" AS "DP" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"ADB_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", (1 * (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_0", 1 * (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_0", (1 * (CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_1", 1 * (CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_7"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_7"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_1" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 4.102499961853027) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 0.3850058016750016 AS "P_0", 0.6149941983249984 AS "P_1", 1 AS "D", 0.6149941983249984 AS "DP" UNION ALL SELECT 2 AS nid, 0.9349792436170534 AS "P_0", 0.06502075638294656 AS "P_1", 0 AS "D", 0.9349792436170534 AS "DP") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."P_0" AS "P_0", "DT_node_data_8"."P_1" AS "P_1", "DT_node_data_8"."D" AS "D", "DT_node_data_8"."DP" AS "DP" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"ADB_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", (1 * (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_0", 1 * (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_0", (1 * (CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_1", 1 * (CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_8"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_8"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_1" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_28" <= 0.3411500006914139) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 0.3579367999880461 AS "P_0", 0.6420632000119539 AS "P_1", 1 AS "D", 0.6420632000119539 AS "DP" UNION ALL SELECT 2 AS nid, 0.946591487513847 AS "P_0", 0.05340851248615303 AS "P_1", 0 AS "D", 0.946591487513847 AS "DP") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."P_0" AS "P_0", "DT_node_data_9"."P_1" AS "P_1", "DT_node_data_9"."D" AS "D", "DT_node_data_9"."DP" AS "DP" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"ADB_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", (1 * (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_0", 1 * (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_0", (1 * (CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_1", 1 * (CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_9"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_9"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_1" 
FROM "DT_Output_9")
 INSERT INTO "TMP_20221018185019_JOZWWH1_ADB_B0" ("KEY", "Score_0", "Proba_0", "Score_1", "Proba_1") SELECT "T"."KEY", "T"."Score_0", "T"."Proba_0", "T"."Score_1", "T"."Proba_1" 
FROM (SELECT "ADB_B0"."KEY" AS "KEY", "ADB_B0"."Score_0" AS "Score_0", "ADB_B0"."Proba_0" AS "Proba_0", "ADB_B0"."Score_1" AS "Score_1", "ADB_B0"."Proba_1" AS "Proba_1" 
FROM (SELECT "ADB_esu_0"."KEY" AS "KEY", "ADB_esu_0"."Score_0" AS "Score_0", "ADB_esu_0"."Proba_0" AS "Proba_0", "ADB_esu_0"."Score_1" AS "Score_1", "ADB_esu_0"."Proba_1" AS "Proba_1" 
FROM (SELECT "ADB_Model_0"."KEY" AS "KEY", "ADB_Model_0"."Score_0" AS "Score_0", "ADB_Model_0"."Proba_0" AS "Proba_0", "ADB_Model_0"."Score_1" AS "Score_1", "ADB_Model_0"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_0" UNION ALL SELECT "ADB_Model_1"."KEY" AS "KEY", "ADB_Model_1"."Score_0" AS "Score_0", "ADB_Model_1"."Proba_0" AS "Proba_0", "ADB_Model_1"."Score_1" AS "Score_1", "ADB_Model_1"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_1" UNION ALL SELECT "ADB_Model_2"."KEY" AS "KEY", "ADB_Model_2"."Score_0" AS "Score_0", "ADB_Model_2"."Proba_0" AS "Proba_0", "ADB_Model_2"."Score_1" AS "Score_1", "ADB_Model_2"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_2" UNION ALL SELECT "ADB_Model_3"."KEY" AS "KEY", "ADB_Model_3"."Score_0" AS "Score_0", "ADB_Model_3"."Proba_0" AS "Proba_0", "ADB_Model_3"."Score_1" AS "Score_1", "ADB_Model_3"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_3" UNION ALL SELECT "ADB_Model_4"."KEY" AS "KEY", "ADB_Model_4"."Score_0" AS "Score_0", "ADB_Model_4"."Proba_0" AS "Proba_0", "ADB_Model_4"."Score_1" AS "Score_1", "ADB_Model_4"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_4" UNION ALL SELECT "ADB_Model_5"."KEY" AS "KEY", "ADB_Model_5"."Score_0" AS "Score_0", "ADB_Model_5"."Proba_0" AS "Proba_0", "ADB_Model_5"."Score_1" AS "Score_1", "ADB_Model_5"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_5" UNION ALL SELECT "ADB_Model_6"."KEY" AS "KEY", "ADB_Model_6"."Score_0" AS "Score_0", "ADB_Model_6"."Proba_0" AS "Proba_0", "ADB_Model_6"."Score_1" AS "Score_1", "ADB_Model_6"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_6" UNION ALL SELECT "ADB_Model_7"."KEY" AS "KEY", "ADB_Model_7"."Score_0" AS "Score_0", "ADB_Model_7"."Proba_0" AS "Proba_0", "ADB_Model_7"."Score_1" AS "Score_1", "ADB_Model_7"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_7" UNION ALL SELECT "ADB_Model_8"."KEY" AS "KEY", "ADB_Model_8"."Score_0" AS "Score_0", "ADB_Model_8"."Proba_0" AS "Proba_0", "ADB_Model_8"."Score_1" AS "Score_1", "ADB_Model_8"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_8" UNION ALL SELECT "ADB_Model_9"."KEY" AS "KEY", "ADB_Model_9"."Score_0" AS "Score_0", "ADB_Model_9"."Proba_0" AS "Proba_0", "ADB_Model_9"."Score_1" AS "Score_1", "ADB_Model_9"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_9") AS "ADB_esu_0") AS "ADB_B0") AS "T"

-- Code For temporary table TMP_20221018185019_A7LNVG8_ADB_B1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185019_A7LNVG8_ADB_B1" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Proba_0" FLOAT, 
	"Score_1" FLOAT, 
	"Proba_1" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185019_A7LNVG8_ADB_B1 part 2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_13" <= 22.125) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 0.12408513579276456 AS "P_0", 0.8759148642072355 AS "P_1", 1 AS "D", 0.8759148642072355 AS "DP" UNION ALL SELECT 2 AS nid, 0.617026301208613 AS "P_0", 0.3829736987913871 AS "P_1", 0 AS "D", 0.617026301208613 AS "DP") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."P_0" AS "P_0", "DT_node_data_10"."P_1" AS "P_1", "DT_node_data_10"."D" AS "D", "DT_node_data_10"."DP" AS "DP" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"ADB_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", (1 * (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_0", 1 * (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_0", (1 * (CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_1", 1 * (CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_10"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_10"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_1" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_1" <= 20.800000190734863) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 0.32265698838615137 AS "P_0", 0.6773430116138486 AS "P_1", 1 AS "D", 0.6773430116138486 AS "DP" UNION ALL SELECT 2 AS nid, 0.8056023794530995 AS "P_0", 0.19439762054690043 AS "P_1", 0 AS "D", 0.8056023794530995 AS "DP") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."P_0" AS "P_0", "DT_node_data_11"."P_1" AS "P_1", "DT_node_data_11"."D" AS "D", "DT_node_data_11"."DP" AS "DP" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"ADB_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", (1 * (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_0", 1 * (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_0", (1 * (CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_1", 1 * (CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_11"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_11"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_1" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.16029999405145645) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 0.3979578499018765 AS "P_0", 0.6020421500981236 AS "P_1", 1 AS "D", 0.6020421500981236 AS "DP" UNION ALL SELECT 2 AS nid, 0.9907903909031662 AS "P_0", 0.009209609096833807 AS "P_1", 0 AS "D", 0.9907903909031662 AS "DP") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."P_0" AS "P_0", "DT_node_data_12"."P_1" AS "P_1", "DT_node_data_12"."D" AS "D", "DT_node_data_12"."DP" AS "DP" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"ADB_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", (1 * (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_0", 1 * (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_0", (1 * (CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_1", 1 * (CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_12"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_12"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_1" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_29" <= 0.08466500043869019) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 0.6695459073992124 AS "P_0", 0.3304540926007876 AS "P_1", 0 AS "D", 0.6695459073992124 AS "DP" UNION ALL SELECT 2 AS nid, 0.09060190503500624 AS "P_0", 0.9093980949649938 AS "P_1", 1 AS "D", 0.9093980949649938 AS "DP") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."P_0" AS "P_0", "DT_node_data_13"."P_1" AS "P_1", "DT_node_data_13"."D" AS "D", "DT_node_data_13"."DP" AS "DP" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"ADB_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", (1 * (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_0", 1 * (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_0", (1 * (CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_1", 1 * (CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_13"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_13"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_1" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= 0.028350000269711018) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 0.12813697627517043 AS "P_0", 0.8718630237248295 AS "P_1", 1 AS "D", 0.8718630237248295 AS "DP" UNION ALL SELECT 2 AS nid, 0.6268220904685273 AS "P_0", 0.3731779095314727 AS "P_1", 0 AS "D", 0.6268220904685273 AS "DP") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."P_0" AS "P_0", "DT_node_data_14"."P_1" AS "P_1", "DT_node_data_14"."D" AS "D", "DT_node_data_14"."DP" AS "DP" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"ADB_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", (1 * (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_0", 1 * (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_0", (1 * (CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_1", 1 * (CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_14"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_14"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_1" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_22" <= 120.75) THEN 1 ELSE 2 END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 1 AS nid, 0.3990862553964448 AS "P_0", 0.6009137446035552 AS "P_1", 1 AS "D", 0.6009137446035552 AS "DP" UNION ALL SELECT 2 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."P_0" AS "P_0", "DT_node_data_15"."P_1" AS "P_1", "DT_node_data_15"."D" AS "D", "DT_node_data_15"."DP" AS "DP" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"ADB_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", (1 * (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_0", 1 * (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_0", (1 * (CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE '-Infinity'::float8 END END) / 2)) / 16.0 AS "Score_1", 1 * (CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE '-Infinity'::float8 END END - (CASE WHEN ("DT_Output_15"."P_0" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE '-Infinity'::float8 END END + CASE WHEN ("DT_Output_15"."P_1" <= 2.22044604925e-16) THEN -36.043653389117296 ELSE CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE '-Infinity'::float8 END END) / 2) AS "Proba_1" 
FROM "DT_Output_15")
 INSERT INTO "TMP_20221018185019_A7LNVG8_ADB_B1" ("KEY", "Score_0", "Proba_0", "Score_1", "Proba_1") SELECT "T"."KEY", "T"."Score_0", "T"."Proba_0", "T"."Score_1", "T"."Proba_1" 
FROM (SELECT "ADB_B1"."KEY" AS "KEY", "ADB_B1"."Score_0" AS "Score_0", "ADB_B1"."Proba_0" AS "Proba_0", "ADB_B1"."Score_1" AS "Score_1", "ADB_B1"."Proba_1" AS "Proba_1" 
FROM (SELECT "ADB_esu_1"."KEY" AS "KEY", "ADB_esu_1"."Score_0" AS "Score_0", "ADB_esu_1"."Proba_0" AS "Proba_0", "ADB_esu_1"."Score_1" AS "Score_1", "ADB_esu_1"."Proba_1" AS "Proba_1" 
FROM (SELECT "ADB_Model_10"."KEY" AS "KEY", "ADB_Model_10"."Score_0" AS "Score_0", "ADB_Model_10"."Proba_0" AS "Proba_0", "ADB_Model_10"."Score_1" AS "Score_1", "ADB_Model_10"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_10" UNION ALL SELECT "ADB_Model_11"."KEY" AS "KEY", "ADB_Model_11"."Score_0" AS "Score_0", "ADB_Model_11"."Proba_0" AS "Proba_0", "ADB_Model_11"."Score_1" AS "Score_1", "ADB_Model_11"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_11" UNION ALL SELECT "ADB_Model_12"."KEY" AS "KEY", "ADB_Model_12"."Score_0" AS "Score_0", "ADB_Model_12"."Proba_0" AS "Proba_0", "ADB_Model_12"."Score_1" AS "Score_1", "ADB_Model_12"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_12" UNION ALL SELECT "ADB_Model_13"."KEY" AS "KEY", "ADB_Model_13"."Score_0" AS "Score_0", "ADB_Model_13"."Proba_0" AS "Proba_0", "ADB_Model_13"."Score_1" AS "Score_1", "ADB_Model_13"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_13" UNION ALL SELECT "ADB_Model_14"."KEY" AS "KEY", "ADB_Model_14"."Score_0" AS "Score_0", "ADB_Model_14"."Proba_0" AS "Proba_0", "ADB_Model_14"."Score_1" AS "Score_1", "ADB_Model_14"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_14" UNION ALL SELECT "ADB_Model_15"."KEY" AS "KEY", "ADB_Model_15"."Score_0" AS "Score_0", "ADB_Model_15"."Proba_0" AS "Proba_0", "ADB_Model_15"."Score_1" AS "Score_1", "ADB_Model_15"."Proba_1" AS "Proba_1" 
FROM "ADB_Model_15") AS "ADB_esu_1") AS "ADB_B1") AS "T"

-- Code For temporary table TMP_20221018185019_A2ZYKVP_ADB_sum part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185019_A2ZYKVP_ADB_sum" (
	"KEY" BIGINT NOT NULL, 
	"Score_0" FLOAT, 
	"Proba_0" FLOAT, 
	"Score_1" FLOAT, 
	"Proba_1" FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185019_A2ZYKVP_ADB_sum part 2. Populate

WITH "ADB_Union" AS 
(SELECT "ADB_EnsembleUnion"."KEY" AS "KEY", "ADB_EnsembleUnion"."Score_0" AS "Score_0", "ADB_EnsembleUnion"."Proba_0" AS "Proba_0", "ADB_EnsembleUnion"."Score_1" AS "Score_1", "ADB_EnsembleUnion"."Proba_1" AS "Proba_1" 
FROM (SELECT "ADB_B0"."KEY" AS "KEY", "ADB_B0"."Score_0" AS "Score_0", "ADB_B0"."Proba_0" AS "Proba_0", "ADB_B0"."Score_1" AS "Score_1", "ADB_B0"."Proba_1" AS "Proba_1" 
FROM "TMP_20221018185019_JOZWWH1_ADB_B0" AS "ADB_B0" UNION ALL SELECT "ADB_B1"."KEY" AS "KEY", "ADB_B1"."Score_0" AS "Score_0", "ADB_B1"."Proba_0" AS "Proba_0", "ADB_B1"."Score_1" AS "Score_1", "ADB_B1"."Proba_1" AS "Proba_1" 
FROM "TMP_20221018185019_A7LNVG8_ADB_B1" AS "ADB_B1") AS "ADB_EnsembleUnion")
 INSERT INTO "TMP_20221018185019_A2ZYKVP_ADB_sum" ("KEY", "Score_0", "Proba_0", "Score_1", "Proba_1") SELECT "T"."KEY", "T"."Score_0", "T"."Proba_0", "T"."Score_1", "T"."Proba_1" 
FROM (SELECT "ADB_sum"."KEY" AS "KEY", "ADB_sum"."Score_0" AS "Score_0", "ADB_sum"."Proba_0" AS "Proba_0", "ADB_sum"."Score_1" AS "Score_1", "ADB_sum"."Proba_1" AS "Proba_1" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS FLOAT) AS "Score_0", CAST("T"."Proba_0" AS FLOAT) AS "Proba_0", CAST("T"."Score_1" AS FLOAT) AS "Score_1", CAST("T"."Proba_1" AS FLOAT) AS "Proba_1" 
FROM (SELECT "ADB_Union"."KEY" AS "KEY", sum("ADB_Union"."Score_0") AS "Score_0", sum("ADB_Union"."Proba_0") AS "Proba_0", sum("ADB_Union"."Score_1") AS "Score_1", sum("ADB_Union"."Proba_1") AS "Proba_1" 
FROM "ADB_Union" GROUP BY "ADB_Union"."KEY") AS "T") AS "ADB_sum") AS "T"

-- Code For temporary table TMP_20221018185019_A2ZYKVP_ADB_sum part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185019_A2ZYKVP_ADB_sum_KEY" ON "TMP_20221018185019_A2ZYKVP_ADB_sum" ("KEY")

-- Model deployment code

WITH "AdaBoost_AVG_Scores_BN" AS 
(SELECT "ADB_sum"."KEY" AS "KEY", "ADB_sum"."Score_0" AS "Score_0", "ADB_sum"."Proba_0" AS "Proba_0", "ADB_sum"."Score_1" AS "Score_1", "ADB_sum"."Proba_1" AS "Proba_1" 
FROM "TMP_20221018185019_A2ZYKVP_ADB_sum" AS "ADB_sum"), 
"AdaBoost_AVG_Scores" AS 
(SELECT "AdaBoost_AVG_Scores_BN"."KEY" AS "KEY", -("AdaBoost_AVG_Scores_BN"."Score_1" - "AdaBoost_AVG_Scores_BN"."Score_0") AS "Score_0", exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 1) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 1) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 1)) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0", "AdaBoost_AVG_Scores_BN"."Score_1" - "AdaBoost_AVG_Scores_BN"."Score_0" AS "Score_1", exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 1) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 16.0) / 1) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 16.0) / 1)) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1" 
FROM "AdaBoost_AVG_Scores_BN"), 
orig_cte AS 
(SELECT "AdaBoost_AVG_Scores"."KEY" AS "KEY", "AdaBoost_AVG_Scores"."Score_0" AS "Score_0", "AdaBoost_AVG_Scores"."Score_1" AS "Score_1", "AdaBoost_AVG_Scores"."Proba_0" AS "Proba_0", "AdaBoost_AVG_Scores"."Proba_1" AS "Proba_1", "AdaBoost_AVG_Scores"."LogProba_0" AS "LogProba_0", "AdaBoost_AVG_Scores"."LogProba_1" AS "LogProba_1", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "AdaBoost_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", max(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_max."KEY" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE '-Infinity'::float8 END AS "LogProba_1", arg_max_cte."arg_max_Score" AS "Decision", CASE WHEN (arg_max_cte."arg_max_Score" = 0) THEN arg_max_cte."Proba_0" WHEN (arg_max_cte."arg_max_Score" = 1) THEN arg_max_cte."Proba_1" END AS "DecisionProba" 
FROM arg_max_cte