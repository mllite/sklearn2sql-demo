-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : CalibratedClassifierCV_isotonic
-- Dataset : digits
-- Database : pgsql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018185932_J8O3WHU_CalProb_B0 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185932_J8O3WHU_CalProb_B0" (
	"KEY" BIGINT, 
	"Proba_0" FLOAT, 
	"Proba_1" FLOAT, 
	"Proba_2" FLOAT, 
	"Proba_3" FLOAT, 
	"Proba_4" FLOAT, 
	"Proba_5" FLOAT, 
	"Proba_6" FLOAT, 
	"Proba_7" FLOAT, 
	"Proba_8" FLOAT, 
	"Proba_9" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185932_J8O3WHU_CalProb_B0 part 2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_28" <= 2.5) THEN CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_5" <= 10.0) THEN CASE WHEN ("ADS"."Feature_41" <= 5.5) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_62" <= 7.5) THEN CASE WHEN ("ADS"."Feature_50" <= 2.5) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ("ADS"."Feature_21" <= 9.5) THEN CASE WHEN ("ADS"."Feature_5" <= 2.5) THEN CASE WHEN ("ADS"."Feature_42" <= 5.5) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS"."Feature_28" <= 6.5) THEN 19 ELSE 20 END END ELSE CASE WHEN ("ADS"."Feature_33" <= 1.5) THEN 22 ELSE CASE WHEN ("ADS"."Feature_59" <= 13.5) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 8.5) THEN CASE WHEN ("ADS"."Feature_5" <= 2.5) THEN CASE WHEN ("ADS"."Feature_9" <= 0.5) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.5) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS"."Feature_54" <= 0.5) THEN CASE WHEN ("ADS"."Feature_59" <= 11.5) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS"."Feature_9" <= 3.0) THEN 40 ELSE 41 END END END ELSE CASE WHEN ("ADS"."Feature_33" <= 5.5) THEN CASE WHEN ("ADS"."Feature_60" <= 7.5) THEN CASE WHEN ("ADS"."Feature_53" <= 4.5) THEN 45 ELSE 46 END ELSE CASE WHEN ("ADS"."Feature_43" <= 1.5) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS"."Feature_26" <= 9.0) THEN 51 ELSE CASE WHEN ("ADS"."Feature_13" <= 13.5) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."P_4" AS "P_4", "Values"."P_5" AS "P_5", "Values"."P_6" AS "P_6", "Values"."P_7" AS "P_7", "Values"."P_8" AS "P_8", "Values"."P_9" AS "P_9", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 0.3333333333333333 AS "P_0", 0.0 AS "P_1", 0.3333333333333333 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.3333333333333333 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 0 AS "D", 0.3333333333333333 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 1.0 AS "P_9", 9 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.3333333333333333 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.6666666666666666 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 6 AS "D", 0.6666666666666666 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 1.0 AS "P_8", 0.0 AS "P_9", 8 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 1.0 AS "P_9", 9 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 1.0 AS "P_8", 0.0 AS "P_9", 8 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.6774193548387096 AS "P_1", 0.06451612903225806 AS "P_2", 0.03225806451612903 AS "P_3", 0.16129032258064516 AS "P_4", 0.0 AS "P_5", 0.06451612903225806 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 1 AS "D", 0.6774193548387096 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.02631578947368421 AS "P_1", 0.5789473684210527 AS "P_2", 0.18421052631578946 AS "P_3", 0.0 AS "P_4", 0.02631578947368421 AS "P_5", 0.0 AS "P_6", 0.07894736842105263 AS "P_7", 0.07894736842105263 AS "P_8", 0.02631578947368421 AS "P_9", 2 AS "D", 0.5789473684210527 AS "DP" UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.6666666666666666 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.3333333333333333 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 0.6666666666666666 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.011111111111111112 AS "P_3", 0.0 AS "P_4", 0.9888888888888889 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 0.9888888888888889 AS "DP" UNION ALL SELECT 37 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 1.0 AS "DP" UNION ALL SELECT 38 AS nid, 0.0 AS "P_0", 0.7 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.1 AS "P_5", 0.2 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 1 AS "D", 0.7 AS "DP" UNION ALL SELECT 40 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.01020408163265306 AS "P_5", 0.9897959183673469 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 6 AS "D", 0.9897959183673469 AS "DP" UNION ALL SELECT 41 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 45 AS nid, 0.0 AS "P_0", 0.018691588785046728 AS "P_1", 0.0 AS "P_2", 0.018691588785046728 AS "P_3", 0.04672897196261682 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.794392523364486 AS "P_7", 0.037383177570093455 AS "P_8", 0.08411214953271028 AS "P_9", 7 AS "D", 0.794392523364486 AS "DP" UNION ALL SELECT 46 AS nid, 0.0 AS "P_0", 0.1875 AS "P_1", 0.25 AS "P_2", 0.25 AS "P_3", 0.0 AS "P_4", 0.0625 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.125 AS "P_8", 0.125 AS "P_9", 2 AS "D", 0.25 AS "DP" UNION ALL SELECT 48 AS nid, 0.0 AS "P_0", 0.05917159763313609 AS "P_1", 0.011834319526627219 AS "P_2", 0.4970414201183432 AS "P_3", 0.011834319526627219 AS "P_4", 0.023668639053254437 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0650887573964497 AS "P_8", 0.33136094674556216 AS "P_9", 3 AS "D", 0.4970414201183432 AS "DP" UNION ALL SELECT 49 AS nid, 0.01195219123505976 AS "P_0", 0.24701195219123506 AS "P_1", 0.2868525896414343 AS "P_2", 0.0398406374501992 AS "P_3", 0.035856573705179286 AS "P_4", 0.0 AS "P_5", 0.00398406374501992 AS "P_6", 0.03187250996015936 AS "P_7", 0.3147410358565737 AS "P_8", 0.027888446215139442 AS "P_9", 8 AS "D", 0.3147410358565737 AS "DP" UNION ALL SELECT 51 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 1.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 7 AS "D", 1.0 AS "DP" UNION ALL SELECT 53 AS nid, 0.0 AS "P_0", 0.014084507042253521 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.971830985915493 AS "P_4", 0.0 AS "P_5", 0.014084507042253521 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 0.971830985915493 AS "DP" UNION ALL SELECT 54 AS nid, 0.125 AS "P_0", 0.375 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.125 AS "P_4", 0.0 AS "P_5", 0.125 AS "P_6", 0.25 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 1 AS "D", 0.375 AS "DP") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."P_0" AS "P_0", "DT_node_data"."P_1" AS "P_1", "DT_node_data"."P_2" AS "P_2", "DT_node_data"."P_3" AS "P_3", "DT_node_data"."P_4" AS "P_4", "DT_node_data"."P_5" AS "P_5", "DT_node_data"."P_6" AS "P_6", "DT_node_data"."P_7" AS "P_7", "DT_node_data"."P_8" AS "P_8", "DT_node_data"."P_9" AS "P_9", "DT_node_data"."D" AS "D", "DT_node_data"."DP" AS "DP" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"Calibrated_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", CAST(NULL AS FLOAT) AS "Score_4", CAST(NULL AS FLOAT) AS "Score_5", CAST(NULL AS FLOAT) AS "Score_6", CAST(NULL AS FLOAT) AS "Score_7", CAST(NULL AS FLOAT) AS "Score_8", CAST(NULL AS FLOAT) AS "Score_9", "DT_Output"."P_0" AS "Proba_0", "DT_Output"."P_1" AS "Proba_1", "DT_Output"."P_2" AS "Proba_2", "DT_Output"."P_3" AS "Proba_3", "DT_Output"."P_4" AS "Proba_4", "DT_Output"."P_5" AS "Proba_5", "DT_Output"."P_6" AS "Proba_6", "DT_Output"."P_7" AS "Proba_7", "DT_Output"."P_8" AS "Proba_8", "DT_Output"."P_9" AS "Proba_9", CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CASE WHEN ("DT_Output"."P_2" IS NULL OR "DT_Output"."P_2" > 0.0) THEN ln("DT_Output"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CASE WHEN ("DT_Output"."P_3" IS NULL OR "DT_Output"."P_3" > 0.0) THEN ln("DT_Output"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3", CASE WHEN ("DT_Output"."P_4" IS NULL OR "DT_Output"."P_4" > 0.0) THEN ln("DT_Output"."P_4") ELSE '-Infinity'::float8 END AS "LogProba_4", CASE WHEN ("DT_Output"."P_5" IS NULL OR "DT_Output"."P_5" > 0.0) THEN ln("DT_Output"."P_5") ELSE '-Infinity'::float8 END AS "LogProba_5", CASE WHEN ("DT_Output"."P_6" IS NULL OR "DT_Output"."P_6" > 0.0) THEN ln("DT_Output"."P_6") ELSE '-Infinity'::float8 END AS "LogProba_6", CASE WHEN ("DT_Output"."P_7" IS NULL OR "DT_Output"."P_7" > 0.0) THEN ln("DT_Output"."P_7") ELSE '-Infinity'::float8 END AS "LogProba_7", CASE WHEN ("DT_Output"."P_8" IS NULL OR "DT_Output"."P_8" > 0.0) THEN ln("DT_Output"."P_8") ELSE '-Infinity'::float8 END AS "LogProba_8", CASE WHEN ("DT_Output"."P_9" IS NULL OR "DT_Output"."P_9" > 0.0) THEN ln("DT_Output"."P_9") ELSE '-Infinity'::float8 END AS "LogProba_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output"."P_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output"."P_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output"."P_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output"."P_3") AS "ScoreOrProba_3", coalesce(CAST(NULL AS FLOAT), "DT_Output"."P_4") AS "ScoreOrProba_4", coalesce(CAST(NULL AS FLOAT), "DT_Output"."P_5") AS "ScoreOrProba_5", coalesce(CAST(NULL AS FLOAT), "DT_Output"."P_6") AS "ScoreOrProba_6", coalesce(CAST(NULL AS FLOAT), "DT_Output"."P_7") AS "ScoreOrProba_7", coalesce(CAST(NULL AS FLOAT), "DT_Output"."P_8") AS "ScoreOrProba_8", coalesce(CAST(NULL AS FLOAT), "DT_Output"."P_9") AS "ScoreOrProba_9" 
FROM "DT_Output"), 
isotonic_cte_0 AS 
(SELECT "Calibrated_Model_0"."KEY" AS "KEY", CASE WHEN ("Calibrated_Model_0"."ScoreOrProba_0" < 0.0) THEN 0.0 WHEN ("Calibrated_Model_0"."ScoreOrProba_0" < 0.3333333333333333) THEN ("Calibrated_Model_0"."ScoreOrProba_0" - 0.0) * 0.0 + 0.0 WHEN ("Calibrated_Model_0"."ScoreOrProba_0" < 1.0) THEN ("Calibrated_Model_0"."ScoreOrProba_0" - 0.3333333333333333) * 1.4583333333333333 + 0.0 ELSE 0.9722222222222222 END AS "Proba_0", CASE WHEN ("Calibrated_Model_0"."ScoreOrProba_1" < 0.0) THEN 0.0 WHEN ("Calibrated_Model_0"."ScoreOrProba_1" < 0.014084507042253521) THEN ("Calibrated_Model_0"."ScoreOrProba_1" - 0.0) * 3.328125 + 0.0 WHEN ("Calibrated_Model_0"."ScoreOrProba_1" < 0.05917159763313609) THEN ("Calibrated_Model_0"."ScoreOrProba_1" - 0.014084507042253521) * 0.0 + 0.046875 WHEN ("Calibrated_Model_0"."ScoreOrProba_1" < 0.1875) THEN ("Calibrated_Model_0"."ScoreOrProba_1" - 0.05917159763313609) * 1.605245288018815 + 0.046875 WHEN ("Calibrated_Model_0"."ScoreOrProba_1" < 0.24701195219123506) THEN ("Calibrated_Model_0"."ScoreOrProba_1" - 0.1875) * 0.0 + 0.25287356321839083 WHEN ("Calibrated_Model_0"."ScoreOrProba_1" < 0.375) THEN ("Calibrated_Model_0"."ScoreOrProba_1" - 0.24701195219123506) * 1.1495326266827677 + 0.25287356321839083 WHEN ("Calibrated_Model_0"."ScoreOrProba_1" < 0.6774193548387096) THEN ("Calibrated_Model_0"."ScoreOrProba_1" - 0.375) * 0.7815757575757576 + 0.4 WHEN ("Calibrated_Model_0"."ScoreOrProba_1" < 0.7) THEN ("Calibrated_Model_0"."ScoreOrProba_1" - 0.6774193548387096) * 0.0 + 0.6363636363636364 ELSE 0.6363636363636364 END AS "Proba_1", CASE WHEN ("Calibrated_Model_0"."ScoreOrProba_2" < 0.0) THEN 0.0 WHEN ("Calibrated_Model_0"."ScoreOrProba_2" < 0.011834319526627219) THEN ("Calibrated_Model_0"."ScoreOrProba_2" - 0.0) * 2.485294117647059 + 0.0 WHEN ("Calibrated_Model_0"."ScoreOrProba_2" < 0.25) THEN ("Calibrated_Model_0"."ScoreOrProba_2" - 0.011834319526627219) * 0.0 + 0.029411764705882353 WHEN ("Calibrated_Model_0"."ScoreOrProba_2" < 0.2868525896414343) THEN ("Calibrated_Model_0"."ScoreOrProba_2" - 0.25) * 8.036602950419635 + 0.029411764705882353 WHEN ("Calibrated_Model_0"."ScoreOrProba_2" < 0.3333333333333333) THEN ("Calibrated_Model_0"."ScoreOrProba_2" - 0.2868525896414343) * 0.0 + 0.32558139534883723 WHEN ("Calibrated_Model_0"."ScoreOrProba_2" < 0.5789473684210527) THEN ("Calibrated_Model_0"."ScoreOrProba_2" - 0.3333333333333333) * 1.582581869957285 + 0.32558139534883723 WHEN ("Calibrated_Model_0"."ScoreOrProba_2" < 1.0) THEN ("Calibrated_Model_0"."ScoreOrProba_2" - 0.5789473684210527) * 0.6785714285714286 + 0.7142857142857143 ELSE 1.0 END AS "Proba_2", CASE WHEN ("Calibrated_Model_0"."ScoreOrProba_3" < 0.0) THEN 0.006134969325153374 WHEN ("Calibrated_Model_0"."ScoreOrProba_3" < 0.011111111111111112) THEN ("Calibrated_Model_0"."ScoreOrProba_3" - 0.0) * 0.0 + 0.006134969325153374 WHEN ("Calibrated_Model_0"."ScoreOrProba_3" < 0.018691588785046728) THEN ("Calibrated_Model_0"."ScoreOrProba_3" - 0.011111111111111112) * 2.2117068019700166 + 0.006134969325153374 WHEN ("Calibrated_Model_0"."ScoreOrProba_3" < 0.0398406374501992) THEN ("Calibrated_Model_0"."ScoreOrProba_3" - 0.018691588785046728) * 0.0 + 0.022900763358778626 WHEN ("Calibrated_Model_0"."ScoreOrProba_3" < 0.18421052631578946) THEN ("Calibrated_Model_0"."ScoreOrProba_3" - 0.0398406374501992) * 1.38063041005049 + 0.022900763358778626 WHEN ("Calibrated_Model_0"."ScoreOrProba_3" < 0.25) THEN ("Calibrated_Model_0"."ScoreOrProba_3" - 0.18421052631578946) * 0.0 + 0.2222222222222222 WHEN ("Calibrated_Model_0"."ScoreOrProba_3" < 0.4970414201183432) THEN ("Calibrated_Model_0"."ScoreOrProba_3" - 0.25) * 1.230941625520888 + 0.2222222222222222 ELSE 0.5263157894736842 END AS "Proba_3", CASE WHEN ("Calibrated_Model_0"."ScoreOrProba_4" < 0.0) THEN 0.007518796992481203 WHEN ("Calibrated_Model_0"."ScoreOrProba_4" < 0.011834319526627219) THEN ("Calibrated_Model_0"."ScoreOrProba_4" - 0.0) * 0.8471177944862155 + 0.007518796992481203 WHEN ("Calibrated_Model_0"."ScoreOrProba_4" < 0.035856573705179286) THEN ("Calibrated_Model_0"."ScoreOrProba_4" - 0.011834319526627219) * 1.6581786719570042 + 0.017543859649122806 WHEN ("Calibrated_Model_0"."ScoreOrProba_4" < 0.04672897196261682) THEN ("Calibrated_Model_0"."ScoreOrProba_4" - 0.035856573705179286) * 0.0 + 0.05737704918032787 WHEN ("Calibrated_Model_0"."ScoreOrProba_4" < 0.125) THEN ("Calibrated_Model_0"."ScoreOrProba_4" - 0.04672897196261682) * 0.11868526221352253 + 0.05737704918032787 WHEN ("Calibrated_Model_0"."ScoreOrProba_4" < 0.6666666666666666) THEN ("Calibrated_Model_0"."ScoreOrProba_4" - 0.125) * 0.0 + 0.06666666666666667 WHEN ("Calibrated_Model_0"."ScoreOrProba_4" < 0.971830985915493) THEN ("Calibrated_Model_0"."ScoreOrProba_4" - 0.6666666666666666) * 2.5619580419580417 + 0.06666666666666667 WHEN ("Calibrated_Model_0"."ScoreOrProba_4" < 1.0) THEN ("Calibrated_Model_0"."ScoreOrProba_4" - 0.971830985915493) * 0.0 + 0.8484848484848485 ELSE 0.8484848484848485 END AS "Proba_4", CASE WHEN ("Calibrated_Model_0"."ScoreOrProba_5" < 0.0) THEN 0.015197568389057751 WHEN ("Calibrated_Model_0"."ScoreOrProba_5" < 0.1) THEN ("Calibrated_Model_0"."ScoreOrProba_5" - 0.0) * 0.0 + 0.015197568389057751 WHEN ("Calibrated_Model_0"."ScoreOrProba_5" < 0.9888888888888889) THEN ("Calibrated_Model_0"."ScoreOrProba_5" - 0.1) * 1.10790273556231 + 0.015197568389057751 WHEN ("Calibrated_Model_0"."ScoreOrProba_5" < 1.0) THEN ("Calibrated_Model_0"."ScoreOrProba_5" - 0.9888888888888889) * 0.0 + 1.0 ELSE 1.0 END AS "Proba_5", CASE WHEN ("Calibrated_Model_0"."ScoreOrProba_6" < 0.0) THEN 0.00641025641025641 WHEN ("Calibrated_Model_0"."ScoreOrProba_6" < 0.014084507042253521) THEN ("Calibrated_Model_0"."ScoreOrProba_6" - 0.0) * 0.0 + 0.00641025641025641 WHEN ("Calibrated_Model_0"."ScoreOrProba_6" < 0.06451612903225806) THEN ("Calibrated_Model_0"."ScoreOrProba_6" - 0.014084507042253521) * 1.1121939246939248 + 0.00641025641025641 WHEN ("Calibrated_Model_0"."ScoreOrProba_6" < 0.2) THEN ("Calibrated_Model_0"."ScoreOrProba_6" - 0.06451612903225806) * 0.0 + 0.0625 WHEN ("Calibrated_Model_0"."ScoreOrProba_6" < 0.3333333333333333) THEN ("Calibrated_Model_0"."ScoreOrProba_6" - 0.2) * 7.031250000000002 + 0.0625 WHEN ("Calibrated_Model_0"."ScoreOrProba_6" < 0.9897959183673469) THEN ("Calibrated_Model_0"."ScoreOrProba_6" - 0.3333333333333333) * 0.0 + 1.0 ELSE 1.0 END AS "Proba_6", CASE WHEN ("Calibrated_Model_0"."ScoreOrProba_7" < 0.0) THEN 0.004524886877828055 WHEN ("Calibrated_Model_0"."ScoreOrProba_7" < 0.03187250996015936) THEN ("Calibrated_Model_0"."ScoreOrProba_7" - 0.0) * 0.17818473543263455 + 0.004524886877828055 WHEN ("Calibrated_Model_0"."ScoreOrProba_7" < 0.3333333333333333) THEN ("Calibrated_Model_0"."ScoreOrProba_7" - 0.03187250996015936) * 0.0 + 0.01020408163265306 WHEN ("Calibrated_Model_0"."ScoreOrProba_7" < 0.794392523364486) THEN ("Calibrated_Model_0"."ScoreOrProba_7" - 0.3333333333333333) * 1.6778316512872498 + 0.01020408163265306 WHEN ("Calibrated_Model_0"."ScoreOrProba_7" < 1.0) THEN ("Calibrated_Model_0"."ScoreOrProba_7" - 0.794392523364486) * 1.0515970515970516 + 0.7837837837837838 ELSE 1.0 END AS "Proba_7", CASE WHEN ("Calibrated_Model_0"."ScoreOrProba_8" < 0.0) THEN 0.01744186046511628 WHEN ("Calibrated_Model_0"."ScoreOrProba_8" < 0.037383177570093455) THEN ("Calibrated_Model_0"."ScoreOrProba_8" - 0.0) * 0.5722651840144501 + 0.01744186046511628 WHEN ("Calibrated_Model_0"."ScoreOrProba_8" < 0.125) THEN ("Calibrated_Model_0"."ScoreOrProba_8" - 0.037383177570093455) * 0.0 + 0.038834951456310676 WHEN ("Calibrated_Model_0"."ScoreOrProba_8" < 0.3147410358565737) THEN ("Calibrated_Model_0"."ScoreOrProba_8" - 0.125) * 1.4694349385652894 + 0.038834951456310676 ELSE 0.3176470588235294 END AS "Proba_8", CASE WHEN ("Calibrated_Model_0"."ScoreOrProba_9" < 0.0) THEN 0.0 WHEN ("Calibrated_Model_0"."ScoreOrProba_9" < 0.027888446215139442) THEN ("Calibrated_Model_0"."ScoreOrProba_9" - 0.0) * 0.0 + 0.0 WHEN ("Calibrated_Model_0"."ScoreOrProba_9" < 0.08411214953271028) THEN ("Calibrated_Model_0"."ScoreOrProba_9" - 0.027888446215139442) * 0.9614104170395563 + 0.0 WHEN ("Calibrated_Model_0"."ScoreOrProba_9" < 0.125) THEN ("Calibrated_Model_0"."ScoreOrProba_9" - 0.08411214953271028) * 7.383077023754989 + 0.05405405405405406 WHEN ("Calibrated_Model_0"."ScoreOrProba_9" < 0.33136094674556216) THEN ("Calibrated_Model_0"."ScoreOrProba_9" - 0.125) * 0.0 + 0.3559322033898305 WHEN ("Calibrated_Model_0"."ScoreOrProba_9" < 1.0) THEN ("Calibrated_Model_0"."ScoreOrProba_9" - 0.33136094674556216) * 0.699326798365964 + 0.3559322033898305 ELSE 0.8235294117647058 END AS "Proba_9" 
FROM "Calibrated_Model_0"), 
"Normalized_Probas" AS 
(SELECT isotonic_cte_0."KEY" AS "KEY", isotonic_cte_0."Proba_0" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3" + isotonic_cte_0."Proba_4" + isotonic_cte_0."Proba_5" + isotonic_cte_0."Proba_6" + isotonic_cte_0."Proba_7" + isotonic_cte_0."Proba_8" + isotonic_cte_0."Proba_9") AS "Proba_0", isotonic_cte_0."Proba_1" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3" + isotonic_cte_0."Proba_4" + isotonic_cte_0."Proba_5" + isotonic_cte_0."Proba_6" + isotonic_cte_0."Proba_7" + isotonic_cte_0."Proba_8" + isotonic_cte_0."Proba_9") AS "Proba_1", isotonic_cte_0."Proba_2" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3" + isotonic_cte_0."Proba_4" + isotonic_cte_0."Proba_5" + isotonic_cte_0."Proba_6" + isotonic_cte_0."Proba_7" + isotonic_cte_0."Proba_8" + isotonic_cte_0."Proba_9") AS "Proba_2", isotonic_cte_0."Proba_3" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3" + isotonic_cte_0."Proba_4" + isotonic_cte_0."Proba_5" + isotonic_cte_0."Proba_6" + isotonic_cte_0."Proba_7" + isotonic_cte_0."Proba_8" + isotonic_cte_0."Proba_9") AS "Proba_3", isotonic_cte_0."Proba_4" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3" + isotonic_cte_0."Proba_4" + isotonic_cte_0."Proba_5" + isotonic_cte_0."Proba_6" + isotonic_cte_0."Proba_7" + isotonic_cte_0."Proba_8" + isotonic_cte_0."Proba_9") AS "Proba_4", isotonic_cte_0."Proba_5" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3" + isotonic_cte_0."Proba_4" + isotonic_cte_0."Proba_5" + isotonic_cte_0."Proba_6" + isotonic_cte_0."Proba_7" + isotonic_cte_0."Proba_8" + isotonic_cte_0."Proba_9") AS "Proba_5", isotonic_cte_0."Proba_6" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3" + isotonic_cte_0."Proba_4" + isotonic_cte_0."Proba_5" + isotonic_cte_0."Proba_6" + isotonic_cte_0."Proba_7" + isotonic_cte_0."Proba_8" + isotonic_cte_0."Proba_9") AS "Proba_6", isotonic_cte_0."Proba_7" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3" + isotonic_cte_0."Proba_4" + isotonic_cte_0."Proba_5" + isotonic_cte_0."Proba_6" + isotonic_cte_0."Proba_7" + isotonic_cte_0."Proba_8" + isotonic_cte_0."Proba_9") AS "Proba_7", isotonic_cte_0."Proba_8" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3" + isotonic_cte_0."Proba_4" + isotonic_cte_0."Proba_5" + isotonic_cte_0."Proba_6" + isotonic_cte_0."Proba_7" + isotonic_cte_0."Proba_8" + isotonic_cte_0."Proba_9") AS "Proba_8", isotonic_cte_0."Proba_9" / (isotonic_cte_0."Proba_0" + isotonic_cte_0."Proba_1" + isotonic_cte_0."Proba_2" + isotonic_cte_0."Proba_3" + isotonic_cte_0."Proba_4" + isotonic_cte_0."Proba_5" + isotonic_cte_0."Proba_6" + isotonic_cte_0."Proba_7" + isotonic_cte_0."Proba_8" + isotonic_cte_0."Proba_9") AS "Proba_9" 
FROM isotonic_cte_0), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 6.0) THEN CASE WHEN ("ADS"."Feature_21" <= 7.0) THEN CASE WHEN ("ADS"."Feature_22" <= 4.0) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_13" <= 1.5) THEN 7 ELSE CASE WHEN ("ADS"."Feature_9" <= 9.5) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS"."Feature_13" <= 1.5) THEN CASE WHEN ("ADS"."Feature_54" <= 2.5) THEN 13 ELSE CASE WHEN ("ADS"."Feature_57" <= 2.0) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS"."Feature_37" <= 1.0) THEN CASE WHEN ("ADS"."Feature_28" <= 2.5) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS"."Feature_26" <= 2.0) THEN 22 ELSE 23 END END END END ELSE CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 8.5) THEN CASE WHEN ("ADS"."Feature_5" <= 2.0) THEN CASE WHEN ("ADS"."Feature_19" <= 12.5) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS"."Feature_18" <= 4.5) THEN 31 ELSE 32 END END ELSE CASE WHEN ("ADS"."Feature_54" <= 4.0) THEN CASE WHEN ("ADS"."Feature_45" <= 1.5) THEN 35 ELSE 36 END ELSE CASE WHEN ("ADS"."Feature_58" <= 9.0) THEN 38 ELSE 39 END END END ELSE CASE WHEN ("ADS"."Feature_33" <= 3.5) THEN CASE WHEN ("ADS"."Feature_60" <= 5.5) THEN CASE WHEN ("ADS"."Feature_26" <= 12.5) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS"."Feature_43" <= 1.5) THEN 46 ELSE 47 END END ELSE CASE WHEN ("ADS"."Feature_13" <= 9.5) THEN CASE WHEN ("ADS"."Feature_2" <= 5.0) THEN 50 ELSE 51 END ELSE CASE WHEN ("ADS"."Feature_19" <= 3.0) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."P_4" AS "P_4", "Values"."P_5" AS "P_5", "Values"."P_6" AS "P_6", "Values"."P_7" AS "P_7", "Values"."P_8" AS "P_8", "Values"."P_9" AS "P_9", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 5 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 1.0 AS "P_9", 9 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 1.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 6 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 1.0 AS "P_8", 0.0 AS "P_9", 8 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 28 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.5641025641025641 AS "P_2", 0.20512820512820512 AS "P_3", 0.0 AS "P_4", 0.05128205128205128 AS "P_5", 0.0 AS "P_6", 0.10256410256410256 AS "P_7", 0.05128205128205128 AS "P_8", 0.02564102564102564 AS "P_9", 2 AS "D", 0.5641025641025641 AS "DP" UNION ALL SELECT 29 AS nid, 0.0 AS "P_0", 0.7142857142857143 AS "P_1", 0.07142857142857142 AS "P_2", 0.07142857142857142 AS "P_3", 0.07142857142857142 AS "P_4", 0.0 AS "P_5", 0.07142857142857142 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 1 AS "D", 0.7142857142857143 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.3333333333333333 AS "P_3", 0.3333333333333333 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.3333333333333333 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 3 AS "D", 0.3333333333333333 AS "DP" UNION ALL SELECT 32 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.011627906976744186 AS "P_4", 0.9883720930232558 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 0.9883720930232558 AS "DP" UNION ALL SELECT 35 AS nid, 0.0 AS "P_0", 0.7777777777777778 AS "P_1", 0.2222222222222222 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 1 AS "D", 0.7777777777777778 AS "DP" UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.5882352941176471 AS "P_4", 0.11764705882352941 AS "P_5", 0.29411764705882354 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 0.5882352941176471 AS "DP" UNION ALL SELECT 38 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 1.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 6 AS "D", 1.0 AS "DP" UNION ALL SELECT 39 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 43 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.013333333333333334 AS "P_2", 0.05333333333333334 AS "P_3", 0.013333333333333334 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.88 AS "P_7", 0.04 AS "P_8", 0.0 AS "P_9", 7 AS "D", 0.88 AS "DP" UNION ALL SELECT 44 AS nid, 0.0 AS "P_0", 0.05263157894736842 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.15789473684210525 AS "P_4", 0.05263157894736842 AS "P_5", 0.0 AS "P_6", 0.2631578947368421 AS "P_7", 0.0 AS "P_8", 0.47368421052631576 AS "P_9", 9 AS "D", 0.47368421052631576 AS "DP" UNION ALL SELECT 46 AS nid, 0.0 AS "P_0", 0.07017543859649122 AS "P_1", 0.023391812865497075 AS "P_2", 0.4853801169590643 AS "P_3", 0.0 AS "P_4", 0.017543859649122806 AS "P_5", 0.0 AS "P_6", 0.011695906432748537 AS "P_7", 0.06432748538011696 AS "P_8", 0.32748538011695905 AS "P_9", 3 AS "D", 0.4853801169590643 AS "DP" UNION ALL SELECT 47 AS nid, 0.008333333333333333 AS "P_0", 0.23333333333333334 AS "P_1", 0.30416666666666664 AS "P_2", 0.041666666666666664 AS "P_3", 0.0125 AS "P_4", 0.0 AS "P_5", 0.004166666666666667 AS "P_6", 0.05 AS "P_7", 0.3333333333333333 AS "P_8", 0.0125 AS "P_9", 8 AS "D", 0.3333333333333333 AS "DP" UNION ALL SELECT 50 AS nid, 0.0 AS "P_0", 0.03571428571428571 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.9642857142857143 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 0.9642857142857143 AS "DP" UNION ALL SELECT 51 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.25 AS "P_5", 0.25 AS "P_6", 0.5 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 7 AS "D", 0.5 AS "DP" UNION ALL SELECT 53 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 1.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 7 AS "D", 1.0 AS "DP" UNION ALL SELECT 54 AS nid, 0.0 AS "P_0", 0.5238095238095238 AS "P_1", 0.047619047619047616 AS "P_2", 0.0 AS "P_3", 0.23809523809523808 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.047619047619047616 AS "P_7", 0.14285714285714285 AS "P_8", 0.0 AS "P_9", 1 AS "D", 0.5238095238095238 AS "DP") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."P_0" AS "P_0", "DT_node_data_1"."P_1" AS "P_1", "DT_node_data_1"."P_2" AS "P_2", "DT_node_data_1"."P_3" AS "P_3", "DT_node_data_1"."P_4" AS "P_4", "DT_node_data_1"."P_5" AS "P_5", "DT_node_data_1"."P_6" AS "P_6", "DT_node_data_1"."P_7" AS "P_7", "DT_node_data_1"."P_8" AS "P_8", "DT_node_data_1"."P_9" AS "P_9", "DT_node_data_1"."D" AS "D", "DT_node_data_1"."DP" AS "DP" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"Calibrated_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", CAST(NULL AS FLOAT) AS "Score_4", CAST(NULL AS FLOAT) AS "Score_5", CAST(NULL AS FLOAT) AS "Score_6", CAST(NULL AS FLOAT) AS "Score_7", CAST(NULL AS FLOAT) AS "Score_8", CAST(NULL AS FLOAT) AS "Score_9", "DT_Output_1"."P_0" AS "Proba_0", "DT_Output_1"."P_1" AS "Proba_1", "DT_Output_1"."P_2" AS "Proba_2", "DT_Output_1"."P_3" AS "Proba_3", "DT_Output_1"."P_4" AS "Proba_4", "DT_Output_1"."P_5" AS "Proba_5", "DT_Output_1"."P_6" AS "Proba_6", "DT_Output_1"."P_7" AS "Proba_7", "DT_Output_1"."P_8" AS "Proba_8", "DT_Output_1"."P_9" AS "Proba_9", CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CASE WHEN ("DT_Output_1"."P_2" IS NULL OR "DT_Output_1"."P_2" > 0.0) THEN ln("DT_Output_1"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CASE WHEN ("DT_Output_1"."P_3" IS NULL OR "DT_Output_1"."P_3" > 0.0) THEN ln("DT_Output_1"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3", CASE WHEN ("DT_Output_1"."P_4" IS NULL OR "DT_Output_1"."P_4" > 0.0) THEN ln("DT_Output_1"."P_4") ELSE '-Infinity'::float8 END AS "LogProba_4", CASE WHEN ("DT_Output_1"."P_5" IS NULL OR "DT_Output_1"."P_5" > 0.0) THEN ln("DT_Output_1"."P_5") ELSE '-Infinity'::float8 END AS "LogProba_5", CASE WHEN ("DT_Output_1"."P_6" IS NULL OR "DT_Output_1"."P_6" > 0.0) THEN ln("DT_Output_1"."P_6") ELSE '-Infinity'::float8 END AS "LogProba_6", CASE WHEN ("DT_Output_1"."P_7" IS NULL OR "DT_Output_1"."P_7" > 0.0) THEN ln("DT_Output_1"."P_7") ELSE '-Infinity'::float8 END AS "LogProba_7", CASE WHEN ("DT_Output_1"."P_8" IS NULL OR "DT_Output_1"."P_8" > 0.0) THEN ln("DT_Output_1"."P_8") ELSE '-Infinity'::float8 END AS "LogProba_8", CASE WHEN ("DT_Output_1"."P_9" IS NULL OR "DT_Output_1"."P_9" > 0.0) THEN ln("DT_Output_1"."P_9") ELSE '-Infinity'::float8 END AS "LogProba_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."P_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."P_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."P_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."P_3") AS "ScoreOrProba_3", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."P_4") AS "ScoreOrProba_4", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."P_5") AS "ScoreOrProba_5", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."P_6") AS "ScoreOrProba_6", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."P_7") AS "ScoreOrProba_7", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."P_8") AS "ScoreOrProba_8", coalesce(CAST(NULL AS FLOAT), "DT_Output_1"."P_9") AS "ScoreOrProba_9" 
FROM "DT_Output_1"), 
isotonic_cte_1 AS 
(SELECT "Calibrated_Model_1"."KEY" AS "KEY", CASE WHEN ("Calibrated_Model_1"."ScoreOrProba_0" < 0.0) THEN 0.009230769230769232 WHEN ("Calibrated_Model_1"."ScoreOrProba_0" < 0.008333333333333333) THEN ("Calibrated_Model_1"."ScoreOrProba_0" - 0.0) * 0.0 + 0.009230769230769232 WHEN ("Calibrated_Model_1"."ScoreOrProba_0" < 1.0) THEN ("Calibrated_Model_1"."ScoreOrProba_0" - 0.008333333333333333) * 0.9397771778394615 + 0.009230769230769232 ELSE 0.9411764705882353 END AS "Proba_0", CASE WHEN ("Calibrated_Model_1"."ScoreOrProba_1" < 0.0) THEN 0.016216216216216217 WHEN ("Calibrated_Model_1"."ScoreOrProba_1" < 0.03571428571428571) THEN ("Calibrated_Model_1"."ScoreOrProba_1" - 0.0) * 0.0 + 0.016216216216216217 WHEN ("Calibrated_Model_1"."ScoreOrProba_1" < 0.05263157894736842) THEN ("Calibrated_Model_1"."ScoreOrProba_1" - 0.03571428571428571) * 0.9179846513179846 + 0.016216216216216217 WHEN ("Calibrated_Model_1"."ScoreOrProba_1" < 0.07017543859649122) THEN ("Calibrated_Model_1"."ScoreOrProba_1" - 0.05263157894736842) * 0.0 + 0.031746031746031744 WHEN ("Calibrated_Model_1"."ScoreOrProba_1" < 0.23333333333333334) THEN ("Calibrated_Model_1"."ScoreOrProba_1" - 0.07017543859649122) * 1.113872636163321 + 0.031746031746031744 WHEN ("Calibrated_Model_1"."ScoreOrProba_1" < 0.5238095238095238) THEN ("Calibrated_Model_1"."ScoreOrProba_1" - 0.23333333333333334) * 0.829886635744068 + 0.21348314606741572 WHEN ("Calibrated_Model_1"."ScoreOrProba_1" < 0.7142857142857143) THEN ("Calibrated_Model_1"."ScoreOrProba_1" - 0.5238095238095238) * 1.2886363636363636 + 0.45454545454545453 WHEN ("Calibrated_Model_1"."ScoreOrProba_1" < 0.7777777777777778) THEN ("Calibrated_Model_1"."ScoreOrProba_1" - 0.7142857142857143) * 4.7250000000000005 + 0.7 ELSE 1.0 END AS "Proba_1", CASE WHEN ("Calibrated_Model_1"."ScoreOrProba_2" < 0.0) THEN 0.004016064257028112 WHEN ("Calibrated_Model_1"."ScoreOrProba_2" < 0.047619047619047616) THEN ("Calibrated_Model_1"."ScoreOrProba_2" - 0.0) * 0.0 + 0.004016064257028112 WHEN ("Calibrated_Model_1"."ScoreOrProba_2" < 0.07142857142857142) THEN ("Calibrated_Model_1"."ScoreOrProba_2" - 0.047619047619047616) * 3.649507119386638 + 0.004016064257028112 WHEN ("Calibrated_Model_1"."ScoreOrProba_2" < 0.2222222222222222) THEN ("Calibrated_Model_1"."ScoreOrProba_2" - 0.07142857142857142) * 0.0 + 0.09090909090909091 WHEN ("Calibrated_Model_1"."ScoreOrProba_2" < 0.30416666666666664) THEN ("Calibrated_Model_1"."ScoreOrProba_2" - 0.2222222222222222) * 2.866986374889632 + 0.09090909090909091 WHEN ("Calibrated_Model_1"."ScoreOrProba_2" < 0.5641025641025641) THEN ("Calibrated_Model_1"."ScoreOrProba_2" - 0.30416666666666664) * 0.6700009698111637 + 0.3258426966292135 WHEN ("Calibrated_Model_1"."ScoreOrProba_2" < 1.0) THEN ("Calibrated_Model_1"."ScoreOrProba_2" - 0.5641025641025641) * 1.1470588235294117 + 0.5 ELSE 1.0 END AS "Proba_2", CASE WHEN ("Calibrated_Model_1"."ScoreOrProba_3" < 0.0) THEN 0.006024096385542169 WHEN ("Calibrated_Model_1"."ScoreOrProba_3" < 0.041666666666666664) THEN ("Calibrated_Model_1"."ScoreOrProba_3" - 0.0) * 0.5665327978580992 + 0.006024096385542169 WHEN ("Calibrated_Model_1"."ScoreOrProba_3" < 0.20512820512820512) THEN ("Calibrated_Model_1"."ScoreOrProba_3" - 0.041666666666666664) * 0.0 + 0.02962962962962963 WHEN ("Calibrated_Model_1"."ScoreOrProba_3" < 0.4853801169590643) THEN ("Calibrated_Model_1"."ScoreOrProba_3" - 0.20512820512820512) * 1.8014261729488383 + 0.02962962962962963 WHEN ("Calibrated_Model_1"."ScoreOrProba_3" < 1.0) THEN ("Calibrated_Model_1"."ScoreOrProba_3" - 0.4853801169590643) * 0.0 + 0.5344827586206896 ELSE 0.5344827586206896 END AS "Proba_3", CASE WHEN ("Calibrated_Model_1"."ScoreOrProba_4" < 0.0) THEN 0.010135135135135136 WHEN ("Calibrated_Model_1"."ScoreOrProba_4" < 0.013333333333333334) THEN ("Calibrated_Model_1"."ScoreOrProba_4" - 0.0) * 0.0 + 0.010135135135135136 WHEN ("Calibrated_Model_1"."ScoreOrProba_4" < 0.07142857142857142) THEN ("Calibrated_Model_1"."ScoreOrProba_4" - 0.013333333333333334) * 1.546854231280461 + 0.010135135135135136 WHEN ("Calibrated_Model_1"."ScoreOrProba_4" < 0.15789473684210525) THEN ("Calibrated_Model_1"."ScoreOrProba_4" - 0.07142857142857142) * 0.7710144927536231 + 0.1 WHEN ("Calibrated_Model_1"."ScoreOrProba_4" < 0.23809523809523808) THEN ("Calibrated_Model_1"."ScoreOrProba_4" - 0.15789473684210525) * 1.3224431818181817 + 0.16666666666666666 WHEN ("Calibrated_Model_1"."ScoreOrProba_4" < 0.5882352941176471) THEN ("Calibrated_Model_1"."ScoreOrProba_4" - 0.23809523809523808) * 1.1983216783216781 + 0.2727272727272727 WHEN ("Calibrated_Model_1"."ScoreOrProba_4" < 0.9642857142857143) THEN ("Calibrated_Model_1"."ScoreOrProba_4" - 0.5882352941176471) * 0.5869845481212981 + 0.6923076923076923 ELSE 0.9130434782608695 END AS "Proba_4", CASE WHEN ("Calibrated_Model_1"."ScoreOrProba_5" < 0.0) THEN 0.0041841004184100415 WHEN ("Calibrated_Model_1"."ScoreOrProba_5" < 0.017543859649122806) THEN ("Calibrated_Model_1"."ScoreOrProba_5" - 0.0) * 0.4400777047220562 + 0.0041841004184100415 WHEN ("Calibrated_Model_1"."ScoreOrProba_5" < 0.11764705882352941) THEN ("Calibrated_Model_1"."ScoreOrProba_5" - 0.017543859649122806) * 0.0 + 0.011904761904761904 WHEN ("Calibrated_Model_1"."ScoreOrProba_5" < 0.9883720930232558) THEN ("Calibrated_Model_1"."ScoreOrProba_5" - 0.11764705882352941) * 1.0709921570094392 + 0.011904761904761904 WHEN ("Calibrated_Model_1"."ScoreOrProba_5" < 1.0) THEN ("Calibrated_Model_1"."ScoreOrProba_5" - 0.9883720930232558) * 0.0 + 0.9444444444444444 ELSE 0.9444444444444444 END AS "Proba_5", CASE WHEN ("Calibrated_Model_1"."ScoreOrProba_6" < 0.0) THEN 0.003257328990228013 WHEN ("Calibrated_Model_1"."ScoreOrProba_6" < 0.004166666666666667) THEN ("Calibrated_Model_1"."ScoreOrProba_6" - 0.0) * 0.0 + 0.003257328990228013 WHEN ("Calibrated_Model_1"."ScoreOrProba_6" < 0.07142857142857142) THEN ("Calibrated_Model_1"."ScoreOrProba_6" - 0.004166666666666667) * 1.4382981176674066 + 0.003257328990228013 WHEN ("Calibrated_Model_1"."ScoreOrProba_6" < 0.29411764705882354) THEN ("Calibrated_Model_1"."ScoreOrProba_6" - 0.07142857142857142) * 0.932656023222061 + 0.1 WHEN ("Calibrated_Model_1"."ScoreOrProba_6" < 1.0) THEN ("Calibrated_Model_1"."ScoreOrProba_6" - 0.29411764705882354) * 0.9807692307692308 + 0.3076923076923077 ELSE 1.0 END AS "Proba_6", CASE WHEN ("Calibrated_Model_1"."ScoreOrProba_7" < 0.0) THEN 0.004484304932735426 WHEN ("Calibrated_Model_1"."ScoreOrProba_7" < 0.047619047619047616) THEN ("Calibrated_Model_1"."ScoreOrProba_7" - 0.0) * 0.0 + 0.004484304932735426 WHEN ("Calibrated_Model_1"."ScoreOrProba_7" < 0.05) THEN ("Calibrated_Model_1"."ScoreOrProba_7" - 0.047619047619047616) * 15.436179557117065 + 0.004484304932735426 WHEN ("Calibrated_Model_1"."ScoreOrProba_7" < 0.10256410256410256) THEN ("Calibrated_Model_1"."ScoreOrProba_7" - 0.05) * 0.0 + 0.041237113402061855 WHEN ("Calibrated_Model_1"."ScoreOrProba_7" < 0.2631578947368421) THEN ("Calibrated_Model_1"."ScoreOrProba_7" - 0.10256410256410256) * 1.8188512518409425 + 0.041237113402061855 WHEN ("Calibrated_Model_1"."ScoreOrProba_7" < 0.88) THEN ("Calibrated_Model_1"."ScoreOrProba_7" - 0.2631578947368421) * 0.835143241286586 + 0.3333333333333333 WHEN ("Calibrated_Model_1"."ScoreOrProba_7" < 1.0) THEN ("Calibrated_Model_1"."ScoreOrProba_7" - 0.88) * 0.0 + 0.8484848484848485 ELSE 0.8484848484848485 END AS "Proba_7", CASE WHEN ("Calibrated_Model_1"."ScoreOrProba_8" < 0.0) THEN 0.0 WHEN ("Calibrated_Model_1"."ScoreOrProba_8" < 0.04) THEN ("Calibrated_Model_1"."ScoreOrProba_8" - 0.0) * 0.0 + 0.0 WHEN ("Calibrated_Model_1"."ScoreOrProba_8" < 0.05128205128205128) THEN ("Calibrated_Model_1"."ScoreOrProba_8" - 0.04) * 5.831339712918662 + 0.0 WHEN ("Calibrated_Model_1"."ScoreOrProba_8" < 0.14285714285714285) THEN ("Calibrated_Model_1"."ScoreOrProba_8" - 0.05128205128205128) * 0.0 + 0.06578947368421052 WHEN ("Calibrated_Model_1"."ScoreOrProba_8" < 0.3333333333333333) THEN ("Calibrated_Model_1"."ScoreOrProba_8" - 0.14285714285714285) * 1.306290656416322 + 0.06578947368421052 WHEN ("Calibrated_Model_1"."ScoreOrProba_8" < 1.0) THEN ("Calibrated_Model_1"."ScoreOrProba_8" - 0.3333333333333333) * 0.2780898876404494 + 0.3146067415730337 ELSE 0.5 END AS "Proba_8", CASE WHEN ("Calibrated_Model_1"."ScoreOrProba_9" < 0.0) THEN 0.02564102564102564 WHEN ("Calibrated_Model_1"."ScoreOrProba_9" < 0.0125) THEN ("Calibrated_Model_1"."ScoreOrProba_9" - 0.0) * 2.072429288924134 + 0.02564102564102564 WHEN ("Calibrated_Model_1"."ScoreOrProba_9" < 0.02564102564102564) THEN ("Calibrated_Model_1"."ScoreOrProba_9" - 0.0125) * 0.0 + 0.05154639175257732 WHEN ("Calibrated_Model_1"."ScoreOrProba_9" < 0.32748538011695905) THEN ("Calibrated_Model_1"."ScoreOrProba_9" - 0.02564102564102564) * 0.986137236094985 + 0.05154639175257732 WHEN ("Calibrated_Model_1"."ScoreOrProba_9" < 0.47368421052631576) THEN ("Calibrated_Model_1"."ScoreOrProba_9" - 0.32748538011695905) * 0.0 + 0.3492063492063492 WHEN ("Calibrated_Model_1"."ScoreOrProba_9" < 1.0) THEN ("Calibrated_Model_1"."ScoreOrProba_9" - 0.47368421052631576) * 1.2365079365079363 + 0.3492063492063492 ELSE 1.0 END AS "Proba_9" 
FROM "Calibrated_Model_1"), 
"Normalized_Probas_1" AS 
(SELECT isotonic_cte_1."KEY" AS "KEY", isotonic_cte_1."Proba_0" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3" + isotonic_cte_1."Proba_4" + isotonic_cte_1."Proba_5" + isotonic_cte_1."Proba_6" + isotonic_cte_1."Proba_7" + isotonic_cte_1."Proba_8" + isotonic_cte_1."Proba_9") AS "Proba_0", isotonic_cte_1."Proba_1" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3" + isotonic_cte_1."Proba_4" + isotonic_cte_1."Proba_5" + isotonic_cte_1."Proba_6" + isotonic_cte_1."Proba_7" + isotonic_cte_1."Proba_8" + isotonic_cte_1."Proba_9") AS "Proba_1", isotonic_cte_1."Proba_2" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3" + isotonic_cte_1."Proba_4" + isotonic_cte_1."Proba_5" + isotonic_cte_1."Proba_6" + isotonic_cte_1."Proba_7" + isotonic_cte_1."Proba_8" + isotonic_cte_1."Proba_9") AS "Proba_2", isotonic_cte_1."Proba_3" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3" + isotonic_cte_1."Proba_4" + isotonic_cte_1."Proba_5" + isotonic_cte_1."Proba_6" + isotonic_cte_1."Proba_7" + isotonic_cte_1."Proba_8" + isotonic_cte_1."Proba_9") AS "Proba_3", isotonic_cte_1."Proba_4" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3" + isotonic_cte_1."Proba_4" + isotonic_cte_1."Proba_5" + isotonic_cte_1."Proba_6" + isotonic_cte_1."Proba_7" + isotonic_cte_1."Proba_8" + isotonic_cte_1."Proba_9") AS "Proba_4", isotonic_cte_1."Proba_5" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3" + isotonic_cte_1."Proba_4" + isotonic_cte_1."Proba_5" + isotonic_cte_1."Proba_6" + isotonic_cte_1."Proba_7" + isotonic_cte_1."Proba_8" + isotonic_cte_1."Proba_9") AS "Proba_5", isotonic_cte_1."Proba_6" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3" + isotonic_cte_1."Proba_4" + isotonic_cte_1."Proba_5" + isotonic_cte_1."Proba_6" + isotonic_cte_1."Proba_7" + isotonic_cte_1."Proba_8" + isotonic_cte_1."Proba_9") AS "Proba_6", isotonic_cte_1."Proba_7" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3" + isotonic_cte_1."Proba_4" + isotonic_cte_1."Proba_5" + isotonic_cte_1."Proba_6" + isotonic_cte_1."Proba_7" + isotonic_cte_1."Proba_8" + isotonic_cte_1."Proba_9") AS "Proba_7", isotonic_cte_1."Proba_8" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3" + isotonic_cte_1."Proba_4" + isotonic_cte_1."Proba_5" + isotonic_cte_1."Proba_6" + isotonic_cte_1."Proba_7" + isotonic_cte_1."Proba_8" + isotonic_cte_1."Proba_9") AS "Proba_8", isotonic_cte_1."Proba_9" / (isotonic_cte_1."Proba_0" + isotonic_cte_1."Proba_1" + isotonic_cte_1."Proba_2" + isotonic_cte_1."Proba_3" + isotonic_cte_1."Proba_4" + isotonic_cte_1."Proba_5" + isotonic_cte_1."Proba_6" + isotonic_cte_1."Proba_7" + isotonic_cte_1."Proba_8" + isotonic_cte_1."Proba_9") AS "Proba_9" 
FROM isotonic_cte_1), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 9.5) THEN CASE WHEN ("ADS"."Feature_5" <= 2.5) THEN CASE WHEN ("ADS"."Feature_9" <= 3.0) THEN CASE WHEN ("ADS"."Feature_37" <= 8.0) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_52" <= 8.0) THEN 8 ELSE 9 END END ELSE CASE WHEN ("ADS"."Feature_18" <= 4.5) THEN CASE WHEN ("ADS"."Feature_29" <= 7.0) THEN 12 ELSE 13 END ELSE 14 END END ELSE CASE WHEN ("ADS"."Feature_54" <= 0.5) THEN CASE WHEN ("ADS"."Feature_37" <= 5.0) THEN CASE WHEN ("ADS"."Feature_28" <= 7.0) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS"."Feature_5" <= 14.0) THEN 21 ELSE 22 END END ELSE CASE WHEN ("ADS"."Feature_58" <= 9.0) THEN 24 ELSE 25 END END END ELSE CASE WHEN ("ADS"."Feature_28" <= 0.5) THEN CASE WHEN ("ADS"."Feature_36" <= 3.5) THEN CASE WHEN ("ADS"."Feature_62" <= 3.5) THEN CASE WHEN ("ADS"."Feature_59" <= 4.5) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS"."Feature_3" <= 8.0) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS"."Feature_10" <= 4.5) THEN 36 ELSE CASE WHEN ("ADS"."Feature_6" <= 0.5) THEN 38 ELSE 39 END END END ELSE CASE WHEN ("ADS"."Feature_43" <= 2.5) THEN CASE WHEN ("ADS"."Feature_26" <= 0.5) THEN CASE WHEN ("ADS"."Feature_19" <= 10.5) THEN 43 ELSE 44 END ELSE CASE WHEN ("ADS"."Feature_21" <= 9.5) THEN 46 ELSE 47 END END ELSE CASE WHEN ("ADS"."Feature_60" <= 7.5) THEN CASE WHEN ("ADS"."Feature_25" <= 3.5) THEN 50 ELSE 51 END ELSE CASE WHEN ("ADS"."Feature_33" <= 1.5) THEN 53 ELSE 54 END END END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."P_4" AS "P_4", "Values"."P_5" AS "P_5", "Values"."P_6" AS "P_6", "Values"."P_7" AS "P_7", "Values"."P_8" AS "P_8", "Values"."P_9" AS "P_9", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 0.0 AS "P_0", 0.8636363636363636 AS "P_1", 0.09090909090909091 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.045454545454545456 AS "P_8", 0.0 AS "P_9", 1 AS "D", 0.8636363636363636 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.1 AS "P_3", 0.4 AS "P_4", 0.2 AS "P_5", 0.2 AS "P_6", 0.1 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 0.4 AS "DP" UNION ALL SELECT 8 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.16666666666666666 AS "P_2", 0.3333333333333333 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.3333333333333333 AS "P_8", 0.16666666666666666 AS "P_9", 3 AS "D", 0.3333333333333333 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 1.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 7 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.2 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.2 AS "P_5", 0.6 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 6 AS "D", 0.6 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 1.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 6 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 1.0 AS "DP" UNION ALL SELECT 31 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 36 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 1.0 AS "DP" UNION ALL SELECT 38 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.3333333333333333 AS "P_2", 0.3333333333333333 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.3333333333333333 AS "P_9", 2 AS "D", 0.3333333333333333 AS "DP" UNION ALL SELECT 39 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 1.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 7 AS "D", 1.0 AS "DP" UNION ALL SELECT 43 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.013888888888888888 AS "P_2", 0.9861111111111112 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 3 AS "D", 0.9861111111111112 AS "DP" UNION ALL SELECT 44 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.25 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.75 AS "P_9", 9 AS "D", 0.75 AS "DP" UNION ALL SELECT 46 AS nid, 0.0 AS "P_0", 0.044444444444444446 AS "P_1", 0.0 AS "P_2", 0.35555555555555557 AS "P_3", 0.13333333333333333 AS "P_4", 0.24444444444444444 AS "P_5", 0.022222222222222223 AS "P_6", 0.044444444444444446 AS "P_7", 0.06666666666666667 AS "P_8", 0.08888888888888889 AS "P_9", 3 AS "D", 0.35555555555555557 AS "DP" UNION ALL SELECT 47 AS nid, 0.03731343283582089 AS "P_0", 0.1044776119402985 AS "P_1", 0.0 AS "P_2", 0.03731343283582089 AS "P_3", 0.007462686567164179 AS "P_4", 0.007462686567164179 AS "P_5", 0.0 AS "P_6", 0.007462686567164179 AS "P_7", 0.08955223880597014 AS "P_8", 0.7089552238805971 AS "P_9", 9 AS "D", 0.7089552238805971 AS "DP" UNION ALL SELECT 50 AS nid, 0.0 AS "P_0", 0.01904761904761905 AS "P_1", 0.02857142857142857 AS "P_2", 0.0380952380952381 AS "P_3", 0.009523809523809525 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.8666666666666667 AS "P_7", 0.02857142857142857 AS "P_8", 0.009523809523809525 AS "P_9", 7 AS "D", 0.8666666666666667 AS "DP" UNION ALL SELECT 51 AS nid, 0.0 AS "P_0", 0.09523809523809523 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.5238095238095238 AS "P_4", 0.047619047619047616 AS "P_5", 0.0 AS "P_6", 0.19047619047619047 AS "P_7", 0.047619047619047616 AS "P_8", 0.09523809523809523 AS "P_9", 4 AS "D", 0.5238095238095238 AS "DP" UNION ALL SELECT 53 AS nid, 0.0 AS "P_0", 0.23853211009174313 AS "P_1", 0.3486238532110092 AS "P_2", 0.03669724770642202 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.013761467889908258 AS "P_7", 0.3486238532110092 AS "P_8", 0.013761467889908258 AS "P_9", 2 AS "D", 0.3486238532110092 AS "DP" UNION ALL SELECT 54 AS nid, 0.013157894736842105 AS "P_0", 0.15789473684210525 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.7631578947368421 AS "P_4", 0.0 AS "P_5", 0.013157894736842105 AS "P_6", 0.0 AS "P_7", 0.05263157894736842 AS "P_8", 0.0 AS "P_9", 4 AS "D", 0.7631578947368421 AS "DP") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."P_0" AS "P_0", "DT_node_data_2"."P_1" AS "P_1", "DT_node_data_2"."P_2" AS "P_2", "DT_node_data_2"."P_3" AS "P_3", "DT_node_data_2"."P_4" AS "P_4", "DT_node_data_2"."P_5" AS "P_5", "DT_node_data_2"."P_6" AS "P_6", "DT_node_data_2"."P_7" AS "P_7", "DT_node_data_2"."P_8" AS "P_8", "DT_node_data_2"."P_9" AS "P_9", "DT_node_data_2"."D" AS "D", "DT_node_data_2"."DP" AS "DP" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"Calibrated_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", CAST(NULL AS FLOAT) AS "Score_4", CAST(NULL AS FLOAT) AS "Score_5", CAST(NULL AS FLOAT) AS "Score_6", CAST(NULL AS FLOAT) AS "Score_7", CAST(NULL AS FLOAT) AS "Score_8", CAST(NULL AS FLOAT) AS "Score_9", "DT_Output_2"."P_0" AS "Proba_0", "DT_Output_2"."P_1" AS "Proba_1", "DT_Output_2"."P_2" AS "Proba_2", "DT_Output_2"."P_3" AS "Proba_3", "DT_Output_2"."P_4" AS "Proba_4", "DT_Output_2"."P_5" AS "Proba_5", "DT_Output_2"."P_6" AS "Proba_6", "DT_Output_2"."P_7" AS "Proba_7", "DT_Output_2"."P_8" AS "Proba_8", "DT_Output_2"."P_9" AS "Proba_9", CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CASE WHEN ("DT_Output_2"."P_2" IS NULL OR "DT_Output_2"."P_2" > 0.0) THEN ln("DT_Output_2"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CASE WHEN ("DT_Output_2"."P_3" IS NULL OR "DT_Output_2"."P_3" > 0.0) THEN ln("DT_Output_2"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3", CASE WHEN ("DT_Output_2"."P_4" IS NULL OR "DT_Output_2"."P_4" > 0.0) THEN ln("DT_Output_2"."P_4") ELSE '-Infinity'::float8 END AS "LogProba_4", CASE WHEN ("DT_Output_2"."P_5" IS NULL OR "DT_Output_2"."P_5" > 0.0) THEN ln("DT_Output_2"."P_5") ELSE '-Infinity'::float8 END AS "LogProba_5", CASE WHEN ("DT_Output_2"."P_6" IS NULL OR "DT_Output_2"."P_6" > 0.0) THEN ln("DT_Output_2"."P_6") ELSE '-Infinity'::float8 END AS "LogProba_6", CASE WHEN ("DT_Output_2"."P_7" IS NULL OR "DT_Output_2"."P_7" > 0.0) THEN ln("DT_Output_2"."P_7") ELSE '-Infinity'::float8 END AS "LogProba_7", CASE WHEN ("DT_Output_2"."P_8" IS NULL OR "DT_Output_2"."P_8" > 0.0) THEN ln("DT_Output_2"."P_8") ELSE '-Infinity'::float8 END AS "LogProba_8", CASE WHEN ("DT_Output_2"."P_9" IS NULL OR "DT_Output_2"."P_9" > 0.0) THEN ln("DT_Output_2"."P_9") ELSE '-Infinity'::float8 END AS "LogProba_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."P_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."P_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."P_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."P_3") AS "ScoreOrProba_3", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."P_4") AS "ScoreOrProba_4", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."P_5") AS "ScoreOrProba_5", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."P_6") AS "ScoreOrProba_6", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."P_7") AS "ScoreOrProba_7", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."P_8") AS "ScoreOrProba_8", coalesce(CAST(NULL AS FLOAT), "DT_Output_2"."P_9") AS "ScoreOrProba_9" 
FROM "DT_Output_2"), 
isotonic_cte_2 AS 
(SELECT "Calibrated_Model_2"."KEY" AS "KEY", CASE WHEN ("Calibrated_Model_2"."ScoreOrProba_0" < 0.0) THEN 0.004016064257028112 WHEN ("Calibrated_Model_2"."ScoreOrProba_0" < 0.013157894736842105) THEN ("Calibrated_Model_2"."ScoreOrProba_0" - 0.0) * 2.0697791164658637 + 0.004016064257028112 WHEN ("Calibrated_Model_2"."ScoreOrProba_0" < 0.03731343283582089) THEN ("Calibrated_Model_2"."ScoreOrProba_0" - 0.013157894736842105) * 2.0181707317073174 + 0.03125 WHEN ("Calibrated_Model_2"."ScoreOrProba_0" < 0.2) THEN ("Calibrated_Model_2"."ScoreOrProba_0" - 0.03731343283582089) * 0.0 + 0.08 WHEN ("Calibrated_Model_2"."ScoreOrProba_0" < 1.0) THEN ("Calibrated_Model_2"."ScoreOrProba_0" - 0.2) * 1.15 + 0.08 ELSE 1.0 END AS "Proba_0", CASE WHEN ("Calibrated_Model_2"."ScoreOrProba_1" < 0.0) THEN 0.0 WHEN ("Calibrated_Model_2"."ScoreOrProba_1" < 0.01904761904761905) THEN ("Calibrated_Model_2"."ScoreOrProba_1" - 0.0) * 0.990566037735849 + 0.0 WHEN ("Calibrated_Model_2"."ScoreOrProba_1" < 0.09523809523809523) THEN ("Calibrated_Model_2"."ScoreOrProba_1" - 0.01904761904761905) * 0.0 + 0.018867924528301886 WHEN ("Calibrated_Model_2"."ScoreOrProba_1" < 0.1044776119402985) THEN ("Calibrated_Model_2"."ScoreOrProba_1" - 0.09523809523809523) * 7.169039310749467 + 0.018867924528301886 WHEN ("Calibrated_Model_2"."ScoreOrProba_1" < 0.15789473684210525) THEN ("Calibrated_Model_2"."ScoreOrProba_1" - 0.1044776119402985) * 2.3777923161527674 + 0.0851063829787234 WHEN ("Calibrated_Model_2"."ScoreOrProba_1" < 0.23853211009174313) THEN ("Calibrated_Model_2"."ScoreOrProba_1" - 0.15789473684210525) * 0.0 + 0.21212121212121213 WHEN ("Calibrated_Model_2"."ScoreOrProba_1" < 0.8636363636363636) THEN ("Calibrated_Model_2"."ScoreOrProba_1" - 0.23853211009174313) * 0.7604792083611296 + 0.21212121212121213 WHEN ("Calibrated_Model_2"."ScoreOrProba_1" < 1.0) THEN ("Calibrated_Model_2"."ScoreOrProba_1" - 0.8636363636363636) * 0.0 + 0.6875 ELSE 0.6875 END AS "Proba_1", CASE WHEN ("Calibrated_Model_2"."ScoreOrProba_2" < 0.0) THEN 0.004694835680751174 WHEN ("Calibrated_Model_2"."ScoreOrProba_2" < 0.013888888888888888) THEN ("Calibrated_Model_2"."ScoreOrProba_2" - 0.0) * 2.6619718309859155 + 0.004694835680751174 WHEN ("Calibrated_Model_2"."ScoreOrProba_2" < 0.02857142857142857) THEN ("Calibrated_Model_2"."ScoreOrProba_2" - 0.013888888888888888) * 0.0 + 0.041666666666666664 WHEN ("Calibrated_Model_2"."ScoreOrProba_2" < 0.09090909090909091) THEN ("Calibrated_Model_2"."ScoreOrProba_2" - 0.02857142857142857) * 2.769097222222222 + 0.041666666666666664 WHEN ("Calibrated_Model_2"."ScoreOrProba_2" < 0.16666666666666666) THEN ("Calibrated_Model_2"."ScoreOrProba_2" - 0.09090909090909091) * 1.1314285714285717 + 0.21428571428571427 WHEN ("Calibrated_Model_2"."ScoreOrProba_2" < 0.25) THEN ("Calibrated_Model_2"."ScoreOrProba_2" - 0.16666666666666666) * 0.0 + 0.3 WHEN ("Calibrated_Model_2"."ScoreOrProba_2" < 0.3486238532110092) THEN ("Calibrated_Model_2"."ScoreOrProba_2" - 0.25) * 0.2875390489413399 + 0.3 WHEN ("Calibrated_Model_2"."ScoreOrProba_2" < 1.0) THEN ("Calibrated_Model_2"."ScoreOrProba_2" - 0.3486238532110092) * 0.8117961500345356 + 0.3283582089552239 ELSE 0.8571428571428571 END AS "Proba_2", CASE WHEN ("Calibrated_Model_2"."ScoreOrProba_3" < 0.0) THEN 0.005847953216374269 WHEN ("Calibrated_Model_2"."ScoreOrProba_3" < 0.03669724770642202) THEN ("Calibrated_Model_2"."ScoreOrProba_3" - 0.0) * 0.6192147034252297 + 0.005847953216374269 WHEN ("Calibrated_Model_2"."ScoreOrProba_3" < 0.0380952380952381) THEN ("Calibrated_Model_2"."ScoreOrProba_3" - 0.03669724770642202) * 0.0 + 0.02857142857142857 WHEN ("Calibrated_Model_2"."ScoreOrProba_3" < 0.1) THEN ("Calibrated_Model_2"."ScoreOrProba_3" - 0.0380952380952381) * 5.7514792899408285 + 0.02857142857142857 WHEN ("Calibrated_Model_2"."ScoreOrProba_3" < 0.35555555555555557) THEN ("Calibrated_Model_2"."ScoreOrProba_3" - 0.1) * 0.0 + 0.38461538461538464 WHEN ("Calibrated_Model_2"."ScoreOrProba_3" < 0.9861111111111112) THEN ("Calibrated_Model_2"."ScoreOrProba_3" - 0.35555555555555557) * 0.9038538553957057 + 0.38461538461538464 ELSE 0.9545454545454546 END AS "Proba_3", CASE WHEN ("Calibrated_Model_2"."ScoreOrProba_4" < 0.0) THEN 0.011320754716981131 WHEN ("Calibrated_Model_2"."ScoreOrProba_4" < 0.007462686567164179) THEN ("Calibrated_Model_2"."ScoreOrProba_4" - 0.0) * 0.0 + 0.011320754716981131 WHEN ("Calibrated_Model_2"."ScoreOrProba_4" < 0.009523809523809525) THEN ("Calibrated_Model_2"."ScoreOrProba_4" - 0.007462686567164179) * 13.1679595615835 + 0.011320754716981131 WHEN ("Calibrated_Model_2"."ScoreOrProba_4" < 0.13333333333333333) THEN ("Calibrated_Model_2"."ScoreOrProba_4" - 0.009523809523809525) * 1.0355029585798816 + 0.038461538461538464 WHEN ("Calibrated_Model_2"."ScoreOrProba_4" < 0.4) THEN ("Calibrated_Model_2"."ScoreOrProba_4" - 0.13333333333333333) * 0.0 + 0.16666666666666666 WHEN ("Calibrated_Model_2"."ScoreOrProba_4" < 0.5238095238095238) THEN ("Calibrated_Model_2"."ScoreOrProba_4" - 0.4) * 3.197115384615385 + 0.16666666666666666 WHEN ("Calibrated_Model_2"."ScoreOrProba_4" < 0.7631578947368421) THEN ("Calibrated_Model_2"."ScoreOrProba_4" - 0.5238095238095238) * 0.26112565445026176 + 0.5625 WHEN ("Calibrated_Model_2"."ScoreOrProba_4" < 1.0) THEN ("Calibrated_Model_2"."ScoreOrProba_4" - 0.7631578947368421) * 1.5833333333333337 + 0.625 ELSE 1.0 END AS "Proba_4", CASE WHEN ("Calibrated_Model_2"."ScoreOrProba_5" < 0.0) THEN 0.006514657980456026 WHEN ("Calibrated_Model_2"."ScoreOrProba_5" < 0.047619047619047616) THEN ("Calibrated_Model_2"."ScoreOrProba_5" - 0.0) * 0.0 + 0.006514657980456026 WHEN ("Calibrated_Model_2"."ScoreOrProba_5" < 0.2) THEN ("Calibrated_Model_2"."ScoreOrProba_5" - 0.047619047619047616) * 0.6134975570032573 + 0.006514657980456026 WHEN ("Calibrated_Model_2"."ScoreOrProba_5" < 0.24444444444444444) THEN ("Calibrated_Model_2"."ScoreOrProba_5" - 0.2) * 3.8863636363636376 + 0.1 WHEN ("Calibrated_Model_2"."ScoreOrProba_5" < 1.0) THEN ("Calibrated_Model_2"."ScoreOrProba_5" - 0.24444444444444444) * 0.919872347766086 + 0.2727272727272727 ELSE 0.967741935483871 END AS "Proba_5", CASE WHEN ("Calibrated_Model_2"."ScoreOrProba_6" < 0.0) THEN 0.0072992700729927005 WHEN ("Calibrated_Model_2"."ScoreOrProba_6" < 0.013157894736842105) THEN ("Calibrated_Model_2"."ScoreOrProba_6" - 0.0) * 1.2126973349176713 + 0.0072992700729927005 WHEN ("Calibrated_Model_2"."ScoreOrProba_6" < 0.022222222222222223) THEN ("Calibrated_Model_2"."ScoreOrProba_6" - 0.013157894736842105) * 0.0 + 0.023255813953488372 WHEN ("Calibrated_Model_2"."ScoreOrProba_6" < 0.2) THEN ("Calibrated_Model_2"."ScoreOrProba_6" - 0.022222222222222223) * 0.6727574750830564 + 0.023255813953488372 WHEN ("Calibrated_Model_2"."ScoreOrProba_6" < 0.6) THEN ("Calibrated_Model_2"."ScoreOrProba_6" - 0.2) * 0.4761904761904762 + 0.14285714285714285 WHEN ("Calibrated_Model_2"."ScoreOrProba_6" < 1.0) THEN ("Calibrated_Model_2"."ScoreOrProba_6" - 0.6) * 1.5885416666666667 + 0.3333333333333333 ELSE 0.96875 END AS "Proba_6", CASE WHEN ("Calibrated_Model_2"."ScoreOrProba_7" < 0.0) THEN 0.01639344262295082 WHEN ("Calibrated_Model_2"."ScoreOrProba_7" < 0.007462686567164179) THEN ("Calibrated_Model_2"."ScoreOrProba_7" - 0.0) * 4.235278688524589 + 0.01639344262295082 WHEN ("Calibrated_Model_2"."ScoreOrProba_7" < 0.044444444444444446) THEN ("Calibrated_Model_2"."ScoreOrProba_7" - 0.007462686567164179) * 0.0 + 0.048 WHEN ("Calibrated_Model_2"."ScoreOrProba_7" < 0.1) THEN ("Calibrated_Model_2"."ScoreOrProba_7" - 0.044444444444444446) * 1.707428571428571 + 0.048 WHEN ("Calibrated_Model_2"."ScoreOrProba_7" < 0.19047619047619047) THEN ("Calibrated_Model_2"."ScoreOrProba_7" - 0.1) * 1.1842105263157898 + 0.14285714285714285 WHEN ("Calibrated_Model_2"."ScoreOrProba_7" < 0.8666666666666667) THEN ("Calibrated_Model_2"."ScoreOrProba_7" - 0.19047619047619047) * 0.7394366197183098 + 0.25 WHEN ("Calibrated_Model_2"."ScoreOrProba_7" < 1.0) THEN ("Calibrated_Model_2"."ScoreOrProba_7" - 0.8666666666666667) * 0.0 + 0.75 ELSE 0.75 END AS "Proba_7", CASE WHEN ("Calibrated_Model_2"."ScoreOrProba_8" < 0.0) THEN 0.007246376811594203 WHEN ("Calibrated_Model_2"."ScoreOrProba_8" < 0.02857142857142857) THEN ("Calibrated_Model_2"."ScoreOrProba_8" - 0.0) * 0.6213768115942029 + 0.007246376811594203 WHEN ("Calibrated_Model_2"."ScoreOrProba_8" < 0.045454545454545456) THEN ("Calibrated_Model_2"."ScoreOrProba_8" - 0.02857142857142857) * 0.0 + 0.025 WHEN ("Calibrated_Model_2"."ScoreOrProba_8" < 0.047619047619047616) THEN ("Calibrated_Model_2"."ScoreOrProba_8" - 0.045454545454545456) * 7.700000000000013 + 0.025 WHEN ("Calibrated_Model_2"."ScoreOrProba_8" < 0.05263157894736842) THEN ("Calibrated_Model_2"."ScoreOrProba_8" - 0.047619047619047616) * 0.0 + 0.041666666666666664 WHEN ("Calibrated_Model_2"."ScoreOrProba_8" < 0.06666666666666667) THEN ("Calibrated_Model_2"."ScoreOrProba_8" - 0.05263157894736842) * 1.3494318181818177 + 0.041666666666666664 WHEN ("Calibrated_Model_2"."ScoreOrProba_8" < 0.3333333333333333) THEN ("Calibrated_Model_2"."ScoreOrProba_8" - 0.06666666666666667) * 0.0 + 0.0606060606060606 WHEN ("Calibrated_Model_2"."ScoreOrProba_8" < 0.3486238532110092) THEN ("Calibrated_Model_2"."ScoreOrProba_8" - 0.3333333333333333) * 20.43934871099045 + 0.0606060606060606 ELSE 0.373134328358209 END AS "Proba_8", CASE WHEN ("Calibrated_Model_2"."ScoreOrProba_9" < 0.0) THEN 0.0 WHEN ("Calibrated_Model_2"."ScoreOrProba_9" < 0.009523809523809525) THEN ("Calibrated_Model_2"."ScoreOrProba_9" - 0.0) * 2.258064516129032 + 0.0 WHEN ("Calibrated_Model_2"."ScoreOrProba_9" < 0.013761467889908258) THEN ("Calibrated_Model_2"."ScoreOrProba_9" - 0.009523809523809525) * 0.0 + 0.021505376344086023 WHEN ("Calibrated_Model_2"."ScoreOrProba_9" < 0.08888888888888889) THEN ("Calibrated_Model_2"."ScoreOrProba_9" - 0.013761467889908258) * 0.8546667583740284 + 0.021505376344086023 WHEN ("Calibrated_Model_2"."ScoreOrProba_9" < 0.16666666666666666) THEN ("Calibrated_Model_2"."ScoreOrProba_9" - 0.08888888888888889) * 0.0 + 0.08571428571428572 WHEN ("Calibrated_Model_2"."ScoreOrProba_9" < 0.7089552238805971) THEN ("Calibrated_Model_2"."ScoreOrProba_9" - 0.16666666666666666) * 1.0462085751731882 + 0.08571428571428572 WHEN ("Calibrated_Model_2"."ScoreOrProba_9" < 0.75) THEN ("Calibrated_Model_2"."ScoreOrProba_9" - 0.7089552238805971) * 0.0 + 0.6530612244897959 ELSE 0.6530612244897959 END AS "Proba_9" 
FROM "Calibrated_Model_2"), 
"Normalized_Probas_2" AS 
(SELECT isotonic_cte_2."KEY" AS "KEY", isotonic_cte_2."Proba_0" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3" + isotonic_cte_2."Proba_4" + isotonic_cte_2."Proba_5" + isotonic_cte_2."Proba_6" + isotonic_cte_2."Proba_7" + isotonic_cte_2."Proba_8" + isotonic_cte_2."Proba_9") AS "Proba_0", isotonic_cte_2."Proba_1" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3" + isotonic_cte_2."Proba_4" + isotonic_cte_2."Proba_5" + isotonic_cte_2."Proba_6" + isotonic_cte_2."Proba_7" + isotonic_cte_2."Proba_8" + isotonic_cte_2."Proba_9") AS "Proba_1", isotonic_cte_2."Proba_2" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3" + isotonic_cte_2."Proba_4" + isotonic_cte_2."Proba_5" + isotonic_cte_2."Proba_6" + isotonic_cte_2."Proba_7" + isotonic_cte_2."Proba_8" + isotonic_cte_2."Proba_9") AS "Proba_2", isotonic_cte_2."Proba_3" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3" + isotonic_cte_2."Proba_4" + isotonic_cte_2."Proba_5" + isotonic_cte_2."Proba_6" + isotonic_cte_2."Proba_7" + isotonic_cte_2."Proba_8" + isotonic_cte_2."Proba_9") AS "Proba_3", isotonic_cte_2."Proba_4" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3" + isotonic_cte_2."Proba_4" + isotonic_cte_2."Proba_5" + isotonic_cte_2."Proba_6" + isotonic_cte_2."Proba_7" + isotonic_cte_2."Proba_8" + isotonic_cte_2."Proba_9") AS "Proba_4", isotonic_cte_2."Proba_5" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3" + isotonic_cte_2."Proba_4" + isotonic_cte_2."Proba_5" + isotonic_cte_2."Proba_6" + isotonic_cte_2."Proba_7" + isotonic_cte_2."Proba_8" + isotonic_cte_2."Proba_9") AS "Proba_5", isotonic_cte_2."Proba_6" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3" + isotonic_cte_2."Proba_4" + isotonic_cte_2."Proba_5" + isotonic_cte_2."Proba_6" + isotonic_cte_2."Proba_7" + isotonic_cte_2."Proba_8" + isotonic_cte_2."Proba_9") AS "Proba_6", isotonic_cte_2."Proba_7" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3" + isotonic_cte_2."Proba_4" + isotonic_cte_2."Proba_5" + isotonic_cte_2."Proba_6" + isotonic_cte_2."Proba_7" + isotonic_cte_2."Proba_8" + isotonic_cte_2."Proba_9") AS "Proba_7", isotonic_cte_2."Proba_8" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3" + isotonic_cte_2."Proba_4" + isotonic_cte_2."Proba_5" + isotonic_cte_2."Proba_6" + isotonic_cte_2."Proba_7" + isotonic_cte_2."Proba_8" + isotonic_cte_2."Proba_9") AS "Proba_8", isotonic_cte_2."Proba_9" / (isotonic_cte_2."Proba_0" + isotonic_cte_2."Proba_1" + isotonic_cte_2."Proba_2" + isotonic_cte_2."Proba_3" + isotonic_cte_2."Proba_4" + isotonic_cte_2."Proba_5" + isotonic_cte_2."Proba_6" + isotonic_cte_2."Proba_7" + isotonic_cte_2."Proba_8" + isotonic_cte_2."Proba_9") AS "Proba_9" 
FROM isotonic_cte_2), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= 0.5) THEN CASE WHEN ("ADS"."Feature_28" <= 4.5) THEN CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_6" <= 1.0) THEN CASE WHEN ("ADS"."Feature_49" <= 3.5) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_3" <= 6.0) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS"."Feature_21" <= 9.0) THEN CASE WHEN ("ADS"."Feature_5" <= 1.5) THEN CASE WHEN ("ADS"."Feature_12" <= 7.0) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS"."Feature_60" <= 4.5) THEN 17 ELSE 18 END END ELSE CASE WHEN ("ADS"."Feature_35" <= 4.5) THEN CASE WHEN ("ADS"."Feature_18" <= 2.0) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS"."Feature_35" <= 8.5) THEN 24 ELSE 25 END END END END ELSE CASE WHEN ("ADS"."Feature_21" <= 0.5) THEN CASE WHEN ("ADS"."Feature_42" <= 8.5) THEN CASE WHEN ("ADS"."Feature_5" <= 2.5) THEN CASE WHEN ("ADS"."Feature_9" <= 0.5) THEN 30 ELSE 31 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.5) THEN 33 ELSE 34 END END ELSE CASE WHEN ("ADS"."Feature_54" <= 0.5) THEN CASE WHEN ("ADS"."Feature_35" <= 15.5) THEN 37 ELSE 38 END ELSE CASE WHEN ("ADS"."Feature_58" <= 9.5) THEN 40 ELSE 41 END END END ELSE CASE WHEN ("ADS"."Feature_60" <= 7.5) THEN CASE WHEN ("ADS"."Feature_26" <= 12.5) THEN CASE WHEN ("ADS"."Feature_53" <= 7.5) THEN 45 ELSE 46 END ELSE CASE WHEN ("ADS"."Feature_42" <= 3.5) THEN 48 ELSE 49 END END ELSE CASE WHEN ("ADS"."Feature_43" <= 2.5) THEN CASE WHEN ("ADS"."Feature_26" <= 5.5) THEN 52 ELSE 53 END ELSE CASE WHEN ("ADS"."Feature_33" <= 3.5) THEN 55 ELSE 56 END END END END END AS node_id_2 
FROM digits AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."P_2" AS "P_2", "Values"."P_3" AS "P_3", "Values"."P_4" AS "P_4", "Values"."P_5" AS "P_5", "Values"."P_6" AS "P_6", "Values"."P_7" AS "P_7", "Values"."P_8" AS "P_8", "Values"."P_9" AS "P_9", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 0.5 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.5 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 0 AS "D", 0.5 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 1.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 1.0 AS "P_9", 9 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 1.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 6 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.3333333333333333 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.6666666666666666 AS "P_9", 9 AS "D", 0.6666666666666666 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 1.0 AS "P_8", 0.0 AS "P_9", 8 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 1.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 3 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 1.0 AS "P_9", 9 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 1.0 AS "P_8", 0.0 AS "P_9", 8 AS "D", 1.0 AS "DP" UNION ALL SELECT 30 AS nid, 0.0 AS "P_0", 0.7058823529411765 AS "P_1", 0.0 AS "P_2", 0.029411764705882353 AS "P_3", 0.11764705882352941 AS "P_4", 0.029411764705882353 AS "P_5", 0.08823529411764706 AS "P_6", 0.029411764705882353 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 1 AS "D", 0.7058823529411765 AS "DP" UNION ALL SELECT 31 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.6176470588235294 AS "P_2", 0.23529411764705882 AS "P_3", 0.0 AS "P_4", 0.029411764705882353 AS "P_5", 0.0 AS "P_6", 0.08823529411764706 AS "P_7", 0.029411764705882353 AS "P_8", 0.0 AS "P_9", 2 AS "D", 0.6176470588235294 AS "DP" UNION ALL SELECT 33 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.6666666666666666 AS "P_4", 0.3333333333333333 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 0.6666666666666666 AS "DP" UNION ALL SELECT 34 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 1.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 5 AS "D", 1.0 AS "DP" UNION ALL SELECT 37 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.9375 AS "P_4", 0.0 AS "P_5", 0.0625 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 0.9375 AS "DP" UNION ALL SELECT 38 AS nid, 0.0 AS "P_0", 0.6 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.4 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 1 AS "D", 0.6 AS "DP" UNION ALL SELECT 40 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.010416666666666666 AS "P_5", 0.9895833333333334 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 6 AS "D", 0.9895833333333334 AS "DP" UNION ALL SELECT 41 AS nid, 0.0 AS "P_0", 0.0 AS "P_1", 1.0 AS "P_2", 0.0 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 2 AS "D", 1.0 AS "DP" UNION ALL SELECT 45 AS nid, 0.0 AS "P_0", 0.010416666666666666 AS "P_1", 0.0 AS "P_2", 0.03125 AS "P_3", 0.020833333333333332 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.8854166666666666 AS "P_7", 0.041666666666666664 AS "P_8", 0.010416666666666666 AS "P_9", 7 AS "D", 0.8854166666666666 AS "DP" UNION ALL SELECT 46 AS nid, 0.0 AS "P_0", 0.5 AS "P_1", 0.25 AS "P_2", 0.25 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 1 AS "D", 0.5 AS "DP" UNION ALL SELECT 48 AS nid, 0.0 AS "P_0", 0.08695652173913043 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.08695652173913043 AS "P_4", 0.08695652173913043 AS "P_5", 0.0 AS "P_6", 0.34782608695652173 AS "P_7", 0.0 AS "P_8", 0.391304347826087 AS "P_9", 9 AS "D", 0.391304347826087 AS "DP" UNION ALL SELECT 49 AS nid, 0.0 AS "P_0", 0.125 AS "P_1", 0.0 AS "P_2", 0.0 AS "P_3", 0.875 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.0 AS "P_8", 0.0 AS "P_9", 4 AS "D", 0.875 AS "DP" UNION ALL SELECT 52 AS nid, 0.0 AS "P_0", 0.009900990099009901 AS "P_1", 0.0297029702970297 AS "P_2", 0.8415841584158416 AS "P_3", 0.0 AS "P_4", 0.0 AS "P_5", 0.0 AS "P_6", 0.0 AS "P_7", 0.039603960396039604 AS "P_8", 0.07920792079207921 AS "P_9", 3 AS "D", 0.8415841584158416 AS "DP" UNION ALL SELECT 53 AS nid, 0.0 AS "P_0", 0.0963855421686747 AS "P_1", 0.0 AS "P_2", 0.03614457831325301 AS "P_3", 0.08433734939759036 AS "P_4", 0.03614457831325301 AS "P_5", 0.0 AS "P_6", 0.024096385542168676 AS "P_7", 0.08433734939759036 AS "P_8", 0.6385542168674698 AS "P_9", 9 AS "D", 0.6385542168674698 AS "DP" UNION ALL SELECT 55 AS nid, 0.0 AS "P_0", 0.22807017543859648 AS "P_1", 0.34210526315789475 AS "P_2", 0.021929824561403508 AS "P_3", 0.013157894736842105 AS "P_4", 0.0 AS "P_5", 0.0043859649122807015 AS "P_6", 0.02631578947368421 AS "P_7", 0.3508771929824561 AS "P_8", 0.013157894736842105 AS "P_9", 8 AS "D", 0.3508771929824561 AS "DP" UNION ALL SELECT 56 AS nid, 0.024096385542168676 AS "P_0", 0.1686746987951807 AS "P_1", 0.012048192771084338 AS "P_2", 0.0 AS "P_3", 0.7590361445783133 AS "P_4", 0.0 AS "P_5", 0.012048192771084338 AS "P_6", 0.0 AS "P_7", 0.024096385542168676 AS "P_8", 0.0 AS "P_9", 4 AS "D", 0.7590361445783133 AS "DP") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."P_0" AS "P_0", "DT_node_data_3"."P_1" AS "P_1", "DT_node_data_3"."P_2" AS "P_2", "DT_node_data_3"."P_3" AS "P_3", "DT_node_data_3"."P_4" AS "P_4", "DT_node_data_3"."P_5" AS "P_5", "DT_node_data_3"."P_6" AS "P_6", "DT_node_data_3"."P_7" AS "P_7", "DT_node_data_3"."P_8" AS "P_8", "DT_node_data_3"."P_9" AS "P_9", "DT_node_data_3"."D" AS "D", "DT_node_data_3"."DP" AS "DP" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"Calibrated_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", CAST(NULL AS FLOAT) AS "Score_4", CAST(NULL AS FLOAT) AS "Score_5", CAST(NULL AS FLOAT) AS "Score_6", CAST(NULL AS FLOAT) AS "Score_7", CAST(NULL AS FLOAT) AS "Score_8", CAST(NULL AS FLOAT) AS "Score_9", "DT_Output_3"."P_0" AS "Proba_0", "DT_Output_3"."P_1" AS "Proba_1", "DT_Output_3"."P_2" AS "Proba_2", "DT_Output_3"."P_3" AS "Proba_3", "DT_Output_3"."P_4" AS "Proba_4", "DT_Output_3"."P_5" AS "Proba_5", "DT_Output_3"."P_6" AS "Proba_6", "DT_Output_3"."P_7" AS "Proba_7", "DT_Output_3"."P_8" AS "Proba_8", "DT_Output_3"."P_9" AS "Proba_9", CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CASE WHEN ("DT_Output_3"."P_2" IS NULL OR "DT_Output_3"."P_2" > 0.0) THEN ln("DT_Output_3"."P_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CASE WHEN ("DT_Output_3"."P_3" IS NULL OR "DT_Output_3"."P_3" > 0.0) THEN ln("DT_Output_3"."P_3") ELSE '-Infinity'::float8 END AS "LogProba_3", CASE WHEN ("DT_Output_3"."P_4" IS NULL OR "DT_Output_3"."P_4" > 0.0) THEN ln("DT_Output_3"."P_4") ELSE '-Infinity'::float8 END AS "LogProba_4", CASE WHEN ("DT_Output_3"."P_5" IS NULL OR "DT_Output_3"."P_5" > 0.0) THEN ln("DT_Output_3"."P_5") ELSE '-Infinity'::float8 END AS "LogProba_5", CASE WHEN ("DT_Output_3"."P_6" IS NULL OR "DT_Output_3"."P_6" > 0.0) THEN ln("DT_Output_3"."P_6") ELSE '-Infinity'::float8 END AS "LogProba_6", CASE WHEN ("DT_Output_3"."P_7" IS NULL OR "DT_Output_3"."P_7" > 0.0) THEN ln("DT_Output_3"."P_7") ELSE '-Infinity'::float8 END AS "LogProba_7", CASE WHEN ("DT_Output_3"."P_8" IS NULL OR "DT_Output_3"."P_8" > 0.0) THEN ln("DT_Output_3"."P_8") ELSE '-Infinity'::float8 END AS "LogProba_8", CASE WHEN ("DT_Output_3"."P_9" IS NULL OR "DT_Output_3"."P_9" > 0.0) THEN ln("DT_Output_3"."P_9") ELSE '-Infinity'::float8 END AS "LogProba_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."P_0") AS "ScoreOrProba_0", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."P_1") AS "ScoreOrProba_1", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."P_2") AS "ScoreOrProba_2", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."P_3") AS "ScoreOrProba_3", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."P_4") AS "ScoreOrProba_4", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."P_5") AS "ScoreOrProba_5", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."P_6") AS "ScoreOrProba_6", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."P_7") AS "ScoreOrProba_7", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."P_8") AS "ScoreOrProba_8", coalesce(CAST(NULL AS FLOAT), "DT_Output_3"."P_9") AS "ScoreOrProba_9" 
FROM "DT_Output_3"), 
isotonic_cte_3 AS 
(SELECT "Calibrated_Model_3"."KEY" AS "KEY", CASE WHEN ("Calibrated_Model_3"."ScoreOrProba_0" < 0.0) THEN 0.006153846153846154 WHEN ("Calibrated_Model_3"."ScoreOrProba_0" < 0.5) THEN ("Calibrated_Model_3"."ScoreOrProba_0" - 0.0) * 0.0 + 0.006153846153846154 WHEN ("Calibrated_Model_3"."ScoreOrProba_0" < 1.0) THEN ("Calibrated_Model_3"."ScoreOrProba_0" - 0.5) * 1.8700452488687782 + 0.006153846153846154 ELSE 0.9411764705882353 END AS "Proba_0", CASE WHEN ("Calibrated_Model_3"."ScoreOrProba_1" < 0.0) THEN 0.007194244604316547 WHEN ("Calibrated_Model_3"."ScoreOrProba_1" < 0.009900990099009901) THEN ("Calibrated_Model_3"."ScoreOrProba_1" - 0.0) * 0.6382461598288937 + 0.007194244604316547 WHEN ("Calibrated_Model_3"."ScoreOrProba_1" < 0.08695652173913043) THEN ("Calibrated_Model_3"."ScoreOrProba_1" - 0.009900990099009901) * 0.0 + 0.013513513513513514 WHEN ("Calibrated_Model_3"."ScoreOrProba_1" < 0.0963855421686747) THEN ("Calibrated_Model_3"."ScoreOrProba_1" - 0.08695652173913043) * 11.366625245935582 + 0.013513513513513514 WHEN ("Calibrated_Model_3"."ScoreOrProba_1" < 0.1686746987951807) THEN ("Calibrated_Model_3"."ScoreOrProba_1" - 0.0963855421686747) * 0.0 + 0.1206896551724138 WHEN ("Calibrated_Model_3"."ScoreOrProba_1" < 0.22807017543859648) THEN ("Calibrated_Model_3"."ScoreOrProba_1" - 0.1686746987951807) * 2.233228617008222 + 0.1206896551724138 WHEN ("Calibrated_Model_3"."ScoreOrProba_1" < 0.5) THEN ("Calibrated_Model_3"."ScoreOrProba_1" - 0.22807017543859648) * 0.0 + 0.25333333333333335 WHEN ("Calibrated_Model_3"."ScoreOrProba_1" < 0.6) THEN ("Calibrated_Model_3"."ScoreOrProba_1" - 0.5) * 3.6205128205128214 + 0.25333333333333335 WHEN ("Calibrated_Model_3"."ScoreOrProba_1" < 0.7058823529411765) THEN ("Calibrated_Model_3"."ScoreOrProba_1" - 0.6) * 0.0 + 0.6153846153846154 ELSE 0.6153846153846154 END AS "Proba_1", CASE WHEN ("Calibrated_Model_3"."ScoreOrProba_2" < 0.0) THEN 0.01680672268907563 WHEN ("Calibrated_Model_3"."ScoreOrProba_2" < 0.012048192771084338) THEN ("Calibrated_Model_3"."ScoreOrProba_2" - 0.0) * 0.0 + 0.01680672268907563 WHEN ("Calibrated_Model_3"."ScoreOrProba_2" < 0.0297029702970297) THEN ("Calibrated_Model_3"."ScoreOrProba_2" - 0.012048192771084338) * 2.5881536736316155 + 0.01680672268907563 WHEN ("Calibrated_Model_3"."ScoreOrProba_2" < 0.25) THEN ("Calibrated_Model_3"."ScoreOrProba_2" - 0.0297029702970297) * 1.0478277153558053 + 0.0625 WHEN ("Calibrated_Model_3"."ScoreOrProba_2" < 0.34210526315789475) THEN ("Calibrated_Model_3"."ScoreOrProba_2" - 0.25) * 0.0 + 0.29333333333333333 WHEN ("Calibrated_Model_3"."ScoreOrProba_2" < 0.6176470588235294) THEN ("Calibrated_Model_3"."ScoreOrProba_2" - 0.34210526315789475) * 0.9150017024174325 + 0.29333333333333333 WHEN ("Calibrated_Model_3"."ScoreOrProba_2" < 1.0) THEN ("Calibrated_Model_3"."ScoreOrProba_2" - 0.6176470588235294) * 1.188811188811189 + 0.5454545454545454 ELSE 1.0 END AS "Proba_2", CASE WHEN ("Calibrated_Model_3"."ScoreOrProba_3" < 0.0) THEN 0.0058823529411764705 WHEN ("Calibrated_Model_3"."ScoreOrProba_3" < 0.021929824561403508) THEN ("Calibrated_Model_3"."ScoreOrProba_3" - 0.0) * 2.6016947758124234 + 0.0058823529411764705 WHEN ("Calibrated_Model_3"."ScoreOrProba_3" < 0.03614457831325301) THEN ("Calibrated_Model_3"."ScoreOrProba_3" - 0.021929824561403508) * 0.0 + 0.06293706293706294 WHEN ("Calibrated_Model_3"."ScoreOrProba_3" < 0.23529411764705882) THEN ("Calibrated_Model_3"."ScoreOrProba_3" - 0.03614457831325301) * 0.14045740736132195 + 0.06293706293706294 WHEN ("Calibrated_Model_3"."ScoreOrProba_3" < 0.25) THEN ("Calibrated_Model_3"."ScoreOrProba_3" - 0.23529411764705882) * 16.48484848484848 + 0.09090909090909091 WHEN ("Calibrated_Model_3"."ScoreOrProba_3" < 0.8415841584158416) THEN ("Calibrated_Model_3"."ScoreOrProba_3" - 0.25) * 0.7571478382147839 + 0.3333333333333333 ELSE 0.78125 END AS "Proba_3", CASE WHEN ("Calibrated_Model_3"."ScoreOrProba_4" < 0.0) THEN 0.021505376344086023 WHEN ("Calibrated_Model_3"."ScoreOrProba_4" < 0.020833333333333332) THEN ("Calibrated_Model_3"."ScoreOrProba_4" - 0.0) * 0.0 + 0.021505376344086023 WHEN ("Calibrated_Model_3"."ScoreOrProba_4" < 0.08433734939759036) THEN ("Calibrated_Model_3"."ScoreOrProba_4" - 0.020833333333333332) * 0.6455437970164478 + 0.021505376344086023 WHEN ("Calibrated_Model_3"."ScoreOrProba_4" < 0.08695652173913043) THEN ("Calibrated_Model_3"."ScoreOrProba_4" - 0.08433734939759036) * 18.559722222222195 + 0.0625 WHEN ("Calibrated_Model_3"."ScoreOrProba_4" < 0.11764705882352941) THEN ("Calibrated_Model_3"."ScoreOrProba_4" - 0.08695652173913043) * 1.0343915343915344 + 0.1111111111111111 WHEN ("Calibrated_Model_3"."ScoreOrProba_4" < 0.6666666666666666) THEN ("Calibrated_Model_3"."ScoreOrProba_4" - 0.11764705882352941) * 0.0 + 0.14285714285714285 WHEN ("Calibrated_Model_3"."ScoreOrProba_4" < 0.7590361445783133) THEN ("Calibrated_Model_3"."ScoreOrProba_4" - 0.6666666666666666) * 7.587927018633538 + 0.14285714285714285 WHEN ("Calibrated_Model_3"."ScoreOrProba_4" < 1.0) THEN ("Calibrated_Model_3"."ScoreOrProba_4" - 0.7590361445783133) * 0.0 + 0.84375 ELSE 0.84375 END AS "Proba_4", CASE WHEN ("Calibrated_Model_3"."ScoreOrProba_5" < 0.0) THEN 0.0035460992907801418 WHEN ("Calibrated_Model_3"."ScoreOrProba_5" < 0.029411764705882353) THEN ("Calibrated_Model_3"."ScoreOrProba_5" - 0.0) * 0.0 + 0.0035460992907801418 WHEN ("Calibrated_Model_3"."ScoreOrProba_5" < 0.03614457831325301) THEN ("Calibrated_Model_3"."ScoreOrProba_5" - 0.029411764705882353) * 3.009651789047086 + 0.0035460992907801418 WHEN ("Calibrated_Model_3"."ScoreOrProba_5" < 0.3333333333333333) THEN ("Calibrated_Model_3"."ScoreOrProba_5" - 0.03614457831325301) * 0.0 + 0.023809523809523808 WHEN ("Calibrated_Model_3"."ScoreOrProba_5" < 1.0) THEN ("Calibrated_Model_3"."ScoreOrProba_5" - 0.3333333333333333) * 1.4214285714285713 + 0.023809523809523808 ELSE 0.9714285714285714 END AS "Proba_5", CASE WHEN ("Calibrated_Model_3"."ScoreOrProba_6" < 0.0) THEN 0.0032679738562091504 WHEN ("Calibrated_Model_3"."ScoreOrProba_6" < 0.012048192771084338) THEN ("Calibrated_Model_3"."ScoreOrProba_6" - 0.0) * 0.0 + 0.0032679738562091504 WHEN ("Calibrated_Model_3"."ScoreOrProba_6" < 0.0625) THEN ("Calibrated_Model_3"."ScoreOrProba_6" - 0.012048192771084338) * 1.101160862354892 + 0.0032679738562091504 WHEN ("Calibrated_Model_3"."ScoreOrProba_6" < 0.4) THEN ("Calibrated_Model_3"."ScoreOrProba_6" - 0.0625) * 0.0 + 0.058823529411764705 WHEN ("Calibrated_Model_3"."ScoreOrProba_6" < 0.5) THEN ("Calibrated_Model_3"."ScoreOrProba_6" - 0.4) * 2.7450980392156867 + 0.058823529411764705 WHEN ("Calibrated_Model_3"."ScoreOrProba_6" < 0.9895833333333334) THEN ("Calibrated_Model_3"."ScoreOrProba_6" - 0.5) * 1.3617021276595744 + 0.3333333333333333 ELSE 1.0 END AS "Proba_6", CASE WHEN ("Calibrated_Model_3"."ScoreOrProba_7" < 0.0) THEN 0.008771929824561403 WHEN ("Calibrated_Model_3"."ScoreOrProba_7" < 0.024096385542168676) THEN ("Calibrated_Model_3"."ScoreOrProba_7" - 0.0) * 0.0 + 0.008771929824561403 WHEN ("Calibrated_Model_3"."ScoreOrProba_7" < 0.02631578947368421) THEN ("Calibrated_Model_3"."ScoreOrProba_7" - 0.024096385542168676) * 1.1102193686463364 + 0.008771929824561403 WHEN ("Calibrated_Model_3"."ScoreOrProba_7" < 0.08823529411764706) THEN ("Calibrated_Model_3"."ScoreOrProba_7" - 0.02631578947368421) * 0.0 + 0.011235955056179775 WHEN ("Calibrated_Model_3"."ScoreOrProba_7" < 0.34782608695652173) THEN ("Calibrated_Model_3"."ScoreOrProba_7" - 0.08823529411764706) * 1.6688129985301625 + 0.011235955056179775 WHEN ("Calibrated_Model_3"."ScoreOrProba_7" < 0.8854166666666666) THEN ("Calibrated_Model_3"."ScoreOrProba_7" - 0.34782608695652173) * 0.7515764213321081 + 0.4444444444444444 ELSE 0.8484848484848485 END AS "Proba_7", CASE WHEN ("Calibrated_Model_3"."ScoreOrProba_8" < 0.0) THEN 0.00558659217877095 WHEN ("Calibrated_Model_3"."ScoreOrProba_8" < 0.024096385542168676) THEN ("Calibrated_Model_3"."ScoreOrProba_8" - 0.0) * 0.0 + 0.00558659217877095 WHEN ("Calibrated_Model_3"."ScoreOrProba_8" < 0.029411764705882353) THEN ("Calibrated_Model_3"."ScoreOrProba_8" - 0.024096385542168676) * 12.074557186782734 + 0.00558659217877095 WHEN ("Calibrated_Model_3"."ScoreOrProba_8" < 0.039603960396039604) THEN ("Calibrated_Model_3"."ScoreOrProba_8" - 0.029411764705882353) * 0.0 + 0.06976744186046512 WHEN ("Calibrated_Model_3"."ScoreOrProba_8" < 0.041666666666666664) THEN ("Calibrated_Model_3"."ScoreOrProba_8" - 0.039603960396039604) * 10.2494714587738 + 0.06976744186046512 WHEN ("Calibrated_Model_3"."ScoreOrProba_8" < 0.08433734939759036) THEN ("Calibrated_Model_3"."ScoreOrProba_8" - 0.041666666666666664) * 0.06657754010695181 + 0.09090909090909091 WHEN ("Calibrated_Model_3"."ScoreOrProba_8" < 0.3508771929824561) THEN ("Calibrated_Model_3"."ScoreOrProba_8" - 0.08433734939759036) * 0.8988649881046789 + 0.09375 ELSE 0.3333333333333333 END AS "Proba_8", CASE WHEN ("Calibrated_Model_3"."ScoreOrProba_9" < 0.0) THEN 0.007326007326007326 WHEN ("Calibrated_Model_3"."ScoreOrProba_9" < 0.013157894736842105) THEN ("Calibrated_Model_3"."ScoreOrProba_9" - 0.0) * 0.0 + 0.007326007326007326 WHEN ("Calibrated_Model_3"."ScoreOrProba_9" < 0.07920792079207921) THEN ("Calibrated_Model_3"."ScoreOrProba_9" - 0.013157894736842105) * 1.3084626583147292 + 0.007326007326007326 WHEN ("Calibrated_Model_3"."ScoreOrProba_9" < 0.391304347826087) THEN ("Calibrated_Model_3"."ScoreOrProba_9" - 0.07920792079207921) * 1.1236733716475096 + 0.09375 WHEN ("Calibrated_Model_3"."ScoreOrProba_9" < 0.6385542168674698) THEN ("Calibrated_Model_3"."ScoreOrProba_9" - 0.391304347826087) * 0.22469397363465177 + 0.4444444444444444 WHEN ("Calibrated_Model_3"."ScoreOrProba_9" < 1.0) THEN ("Calibrated_Model_3"."ScoreOrProba_9" - 0.6385542168674698) * 1.1705128205128206 + 0.5 ELSE 0.9230769230769231 END AS "Proba_9" 
FROM "Calibrated_Model_3"), 
"Normalized_Probas_3" AS 
(SELECT isotonic_cte_3."KEY" AS "KEY", isotonic_cte_3."Proba_0" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3" + isotonic_cte_3."Proba_4" + isotonic_cte_3."Proba_5" + isotonic_cte_3."Proba_6" + isotonic_cte_3."Proba_7" + isotonic_cte_3."Proba_8" + isotonic_cte_3."Proba_9") AS "Proba_0", isotonic_cte_3."Proba_1" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3" + isotonic_cte_3."Proba_4" + isotonic_cte_3."Proba_5" + isotonic_cte_3."Proba_6" + isotonic_cte_3."Proba_7" + isotonic_cte_3."Proba_8" + isotonic_cte_3."Proba_9") AS "Proba_1", isotonic_cte_3."Proba_2" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3" + isotonic_cte_3."Proba_4" + isotonic_cte_3."Proba_5" + isotonic_cte_3."Proba_6" + isotonic_cte_3."Proba_7" + isotonic_cte_3."Proba_8" + isotonic_cte_3."Proba_9") AS "Proba_2", isotonic_cte_3."Proba_3" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3" + isotonic_cte_3."Proba_4" + isotonic_cte_3."Proba_5" + isotonic_cte_3."Proba_6" + isotonic_cte_3."Proba_7" + isotonic_cte_3."Proba_8" + isotonic_cte_3."Proba_9") AS "Proba_3", isotonic_cte_3."Proba_4" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3" + isotonic_cte_3."Proba_4" + isotonic_cte_3."Proba_5" + isotonic_cte_3."Proba_6" + isotonic_cte_3."Proba_7" + isotonic_cte_3."Proba_8" + isotonic_cte_3."Proba_9") AS "Proba_4", isotonic_cte_3."Proba_5" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3" + isotonic_cte_3."Proba_4" + isotonic_cte_3."Proba_5" + isotonic_cte_3."Proba_6" + isotonic_cte_3."Proba_7" + isotonic_cte_3."Proba_8" + isotonic_cte_3."Proba_9") AS "Proba_5", isotonic_cte_3."Proba_6" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3" + isotonic_cte_3."Proba_4" + isotonic_cte_3."Proba_5" + isotonic_cte_3."Proba_6" + isotonic_cte_3."Proba_7" + isotonic_cte_3."Proba_8" + isotonic_cte_3."Proba_9") AS "Proba_6", isotonic_cte_3."Proba_7" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3" + isotonic_cte_3."Proba_4" + isotonic_cte_3."Proba_5" + isotonic_cte_3."Proba_6" + isotonic_cte_3."Proba_7" + isotonic_cte_3."Proba_8" + isotonic_cte_3."Proba_9") AS "Proba_7", isotonic_cte_3."Proba_8" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3" + isotonic_cte_3."Proba_4" + isotonic_cte_3."Proba_5" + isotonic_cte_3."Proba_6" + isotonic_cte_3."Proba_7" + isotonic_cte_3."Proba_8" + isotonic_cte_3."Proba_9") AS "Proba_8", isotonic_cte_3."Proba_9" / (isotonic_cte_3."Proba_0" + isotonic_cte_3."Proba_1" + isotonic_cte_3."Proba_2" + isotonic_cte_3."Proba_3" + isotonic_cte_3."Proba_4" + isotonic_cte_3."Proba_5" + isotonic_cte_3."Proba_6" + isotonic_cte_3."Proba_7" + isotonic_cte_3."Proba_8" + isotonic_cte_3."Proba_9") AS "Proba_9" 
FROM isotonic_cte_3)
 INSERT INTO "TMP_20221018185932_J8O3WHU_CalProb_B0" ("KEY", "Proba_0", "Proba_1", "Proba_2", "Proba_3", "Proba_4", "Proba_5", "Proba_6", "Proba_7", "Proba_8", "Proba_9") SELECT "T"."KEY", "T"."Proba_0", "T"."Proba_1", "T"."Proba_2", "T"."Proba_3", "T"."Proba_4", "T"."Proba_5", "T"."Proba_6", "T"."Proba_7", "T"."Proba_8", "T"."Proba_9" 
FROM (SELECT "CalProb_B0"."KEY" AS "KEY", "CalProb_B0"."Proba_0" AS "Proba_0", "CalProb_B0"."Proba_1" AS "Proba_1", "CalProb_B0"."Proba_2" AS "Proba_2", "CalProb_B0"."Proba_3" AS "Proba_3", "CalProb_B0"."Proba_4" AS "Proba_4", "CalProb_B0"."Proba_5" AS "Proba_5", "CalProb_B0"."Proba_6" AS "Proba_6", "CalProb_B0"."Proba_7" AS "Proba_7", "CalProb_B0"."Proba_8" AS "Proba_8", "CalProb_B0"."Proba_9" AS "Proba_9" 
FROM (SELECT "CalProb_esu_0"."KEY" AS "KEY", "CalProb_esu_0"."Proba_0" AS "Proba_0", "CalProb_esu_0"."Proba_1" AS "Proba_1", "CalProb_esu_0"."Proba_2" AS "Proba_2", "CalProb_esu_0"."Proba_3" AS "Proba_3", "CalProb_esu_0"."Proba_4" AS "Proba_4", "CalProb_esu_0"."Proba_5" AS "Proba_5", "CalProb_esu_0"."Proba_6" AS "Proba_6", "CalProb_esu_0"."Proba_7" AS "Proba_7", "CalProb_esu_0"."Proba_8" AS "Proba_8", "CalProb_esu_0"."Proba_9" AS "Proba_9" 
FROM (SELECT "Normalized_Probas"."KEY" AS "KEY", "Normalized_Probas"."Proba_0" AS "Proba_0", "Normalized_Probas"."Proba_1" AS "Proba_1", "Normalized_Probas"."Proba_2" AS "Proba_2", "Normalized_Probas"."Proba_3" AS "Proba_3", "Normalized_Probas"."Proba_4" AS "Proba_4", "Normalized_Probas"."Proba_5" AS "Proba_5", "Normalized_Probas"."Proba_6" AS "Proba_6", "Normalized_Probas"."Proba_7" AS "Proba_7", "Normalized_Probas"."Proba_8" AS "Proba_8", "Normalized_Probas"."Proba_9" AS "Proba_9" 
FROM "Normalized_Probas" UNION ALL SELECT "Normalized_Probas_1"."KEY" AS "KEY", "Normalized_Probas_1"."Proba_0" AS "Proba_0", "Normalized_Probas_1"."Proba_1" AS "Proba_1", "Normalized_Probas_1"."Proba_2" AS "Proba_2", "Normalized_Probas_1"."Proba_3" AS "Proba_3", "Normalized_Probas_1"."Proba_4" AS "Proba_4", "Normalized_Probas_1"."Proba_5" AS "Proba_5", "Normalized_Probas_1"."Proba_6" AS "Proba_6", "Normalized_Probas_1"."Proba_7" AS "Proba_7", "Normalized_Probas_1"."Proba_8" AS "Proba_8", "Normalized_Probas_1"."Proba_9" AS "Proba_9" 
FROM "Normalized_Probas_1" UNION ALL SELECT "Normalized_Probas_2"."KEY" AS "KEY", "Normalized_Probas_2"."Proba_0" AS "Proba_0", "Normalized_Probas_2"."Proba_1" AS "Proba_1", "Normalized_Probas_2"."Proba_2" AS "Proba_2", "Normalized_Probas_2"."Proba_3" AS "Proba_3", "Normalized_Probas_2"."Proba_4" AS "Proba_4", "Normalized_Probas_2"."Proba_5" AS "Proba_5", "Normalized_Probas_2"."Proba_6" AS "Proba_6", "Normalized_Probas_2"."Proba_7" AS "Proba_7", "Normalized_Probas_2"."Proba_8" AS "Proba_8", "Normalized_Probas_2"."Proba_9" AS "Proba_9" 
FROM "Normalized_Probas_2" UNION ALL SELECT "Normalized_Probas_3"."KEY" AS "KEY", "Normalized_Probas_3"."Proba_0" AS "Proba_0", "Normalized_Probas_3"."Proba_1" AS "Proba_1", "Normalized_Probas_3"."Proba_2" AS "Proba_2", "Normalized_Probas_3"."Proba_3" AS "Proba_3", "Normalized_Probas_3"."Proba_4" AS "Proba_4", "Normalized_Probas_3"."Proba_5" AS "Proba_5", "Normalized_Probas_3"."Proba_6" AS "Proba_6", "Normalized_Probas_3"."Proba_7" AS "Proba_7", "Normalized_Probas_3"."Proba_8" AS "Proba_8", "Normalized_Probas_3"."Proba_9" AS "Proba_9" 
FROM "Normalized_Probas_3") AS "CalProb_esu_0") AS "CalProb_B0") AS "T"

-- Code For temporary table TMP_20221018185932_2SPPJHA_CalProb_avg part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185932_2SPPJHA_CalProb_avg" (
	"KEY" BIGINT NOT NULL, 
	"Proba_0" FLOAT, 
	"Proba_1" FLOAT, 
	"Proba_2" FLOAT, 
	"Proba_3" FLOAT, 
	"Proba_4" FLOAT, 
	"Proba_5" FLOAT, 
	"Proba_6" FLOAT, 
	"Proba_7" FLOAT, 
	"Proba_8" FLOAT, 
	"Proba_9" FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185932_2SPPJHA_CalProb_avg part 2. Populate

WITH "CalProb_Union" AS 
(SELECT "CalProb_EnsembleUnion"."KEY" AS "KEY", "CalProb_EnsembleUnion"."Proba_0" AS "Proba_0", "CalProb_EnsembleUnion"."Proba_1" AS "Proba_1", "CalProb_EnsembleUnion"."Proba_2" AS "Proba_2", "CalProb_EnsembleUnion"."Proba_3" AS "Proba_3", "CalProb_EnsembleUnion"."Proba_4" AS "Proba_4", "CalProb_EnsembleUnion"."Proba_5" AS "Proba_5", "CalProb_EnsembleUnion"."Proba_6" AS "Proba_6", "CalProb_EnsembleUnion"."Proba_7" AS "Proba_7", "CalProb_EnsembleUnion"."Proba_8" AS "Proba_8", "CalProb_EnsembleUnion"."Proba_9" AS "Proba_9" 
FROM (SELECT "CalProb_B0"."KEY" AS "KEY", "CalProb_B0"."Proba_0" AS "Proba_0", "CalProb_B0"."Proba_1" AS "Proba_1", "CalProb_B0"."Proba_2" AS "Proba_2", "CalProb_B0"."Proba_3" AS "Proba_3", "CalProb_B0"."Proba_4" AS "Proba_4", "CalProb_B0"."Proba_5" AS "Proba_5", "CalProb_B0"."Proba_6" AS "Proba_6", "CalProb_B0"."Proba_7" AS "Proba_7", "CalProb_B0"."Proba_8" AS "Proba_8", "CalProb_B0"."Proba_9" AS "Proba_9" 
FROM "TMP_20221018185932_J8O3WHU_CalProb_B0" AS "CalProb_B0") AS "CalProb_EnsembleUnion")
 INSERT INTO "TMP_20221018185932_2SPPJHA_CalProb_avg" ("KEY", "Proba_0", "Proba_1", "Proba_2", "Proba_3", "Proba_4", "Proba_5", "Proba_6", "Proba_7", "Proba_8", "Proba_9") SELECT "T"."KEY", "T"."Proba_0", "T"."Proba_1", "T"."Proba_2", "T"."Proba_3", "T"."Proba_4", "T"."Proba_5", "T"."Proba_6", "T"."Proba_7", "T"."Proba_8", "T"."Proba_9" 
FROM (SELECT "CalProb_avg"."KEY" AS "KEY", "CalProb_avg"."Proba_0" AS "Proba_0", "CalProb_avg"."Proba_1" AS "Proba_1", "CalProb_avg"."Proba_2" AS "Proba_2", "CalProb_avg"."Proba_3" AS "Proba_3", "CalProb_avg"."Proba_4" AS "Proba_4", "CalProb_avg"."Proba_5" AS "Proba_5", "CalProb_avg"."Proba_6" AS "Proba_6", "CalProb_avg"."Proba_7" AS "Proba_7", "CalProb_avg"."Proba_8" AS "Proba_8", "CalProb_avg"."Proba_9" AS "Proba_9" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Proba_0" AS FLOAT) AS "Proba_0", CAST("T"."Proba_1" AS FLOAT) AS "Proba_1", CAST("T"."Proba_2" AS FLOAT) AS "Proba_2", CAST("T"."Proba_3" AS FLOAT) AS "Proba_3", CAST("T"."Proba_4" AS FLOAT) AS "Proba_4", CAST("T"."Proba_5" AS FLOAT) AS "Proba_5", CAST("T"."Proba_6" AS FLOAT) AS "Proba_6", CAST("T"."Proba_7" AS FLOAT) AS "Proba_7", CAST("T"."Proba_8" AS FLOAT) AS "Proba_8", CAST("T"."Proba_9" AS FLOAT) AS "Proba_9" 
FROM (SELECT "CalProb_Union"."KEY" AS "KEY", avg(CAST("CalProb_Union"."Proba_0" AS FLOAT)) AS "Proba_0", avg(CAST("CalProb_Union"."Proba_1" AS FLOAT)) AS "Proba_1", avg(CAST("CalProb_Union"."Proba_2" AS FLOAT)) AS "Proba_2", avg(CAST("CalProb_Union"."Proba_3" AS FLOAT)) AS "Proba_3", avg(CAST("CalProb_Union"."Proba_4" AS FLOAT)) AS "Proba_4", avg(CAST("CalProb_Union"."Proba_5" AS FLOAT)) AS "Proba_5", avg(CAST("CalProb_Union"."Proba_6" AS FLOAT)) AS "Proba_6", avg(CAST("CalProb_Union"."Proba_7" AS FLOAT)) AS "Proba_7", avg(CAST("CalProb_Union"."Proba_8" AS FLOAT)) AS "Proba_8", avg(CAST("CalProb_Union"."Proba_9" AS FLOAT)) AS "Proba_9" 
FROM "CalProb_Union" GROUP BY "CalProb_Union"."KEY") AS "T") AS "CalProb_avg") AS "T"

-- Code For temporary table TMP_20221018185932_2SPPJHA_CalProb_avg part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185932_2SPPJHA_CalProb_avg_KEY" ON "TMP_20221018185932_2SPPJHA_CalProb_avg" ("KEY")

-- Model deployment code

WITH orig_cte AS 
(SELECT "CalProb_avg"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", CAST(NULL AS FLOAT) AS "Score_4", CAST(NULL AS FLOAT) AS "Score_5", CAST(NULL AS FLOAT) AS "Score_6", CAST(NULL AS FLOAT) AS "Score_7", CAST(NULL AS FLOAT) AS "Score_8", CAST(NULL AS FLOAT) AS "Score_9", "CalProb_avg"."Proba_0" AS "Proba_0", "CalProb_avg"."Proba_1" AS "Proba_1", "CalProb_avg"."Proba_2" AS "Proba_2", "CalProb_avg"."Proba_3" AS "Proba_3", "CalProb_avg"."Proba_4" AS "Proba_4", "CalProb_avg"."Proba_5" AS "Proba_5", "CalProb_avg"."Proba_6" AS "Proba_6", "CalProb_avg"."Proba_7" AS "Proba_7", "CalProb_avg"."Proba_8" AS "Proba_8", "CalProb_avg"."Proba_9" AS "Proba_9", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "LogProba_4", CAST(NULL AS FLOAT) AS "LogProba_5", CAST(NULL AS FLOAT) AS "LogProba_6", CAST(NULL AS FLOAT) AS "LogProba_7", CAST(NULL AS FLOAT) AS "LogProba_8", CAST(NULL AS FLOAT) AS "LogProba_9", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "TMP_20221018185932_2SPPJHA_CalProb_avg" AS "CalProb_avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 4 AS class, orig_cte."LogProba_4" AS "LogProba", orig_cte."Proba_4" AS "Proba", orig_cte."Score_4" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 5 AS class, orig_cte."LogProba_5" AS "LogProba", orig_cte."Proba_5" AS "Proba", orig_cte."Score_5" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 6 AS class, orig_cte."LogProba_6" AS "LogProba", orig_cte."Proba_6" AS "Proba", orig_cte."Score_6" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 7 AS class, orig_cte."LogProba_7" AS "LogProba", orig_cte."Proba_7" AS "Proba", orig_cte."Score_7" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 8 AS class, orig_cte."LogProba_8" AS "LogProba", orig_cte."Proba_8" AS "Proba", orig_cte."Score_8" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 9 AS class, orig_cte."LogProba_9" AS "LogProba", orig_cte."Proba_9" AS "Proba", orig_cte."Score_9" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Score_4" AS "Score_4", orig_cte."Score_5" AS "Score_5", orig_cte."Score_6" AS "Score_6", orig_cte."Score_7" AS "Score_7", orig_cte."Score_8" AS "Score_8", orig_cte."Score_9" AS "Score_9", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."Proba_4" AS "Proba_4", orig_cte."Proba_5" AS "Proba_5", orig_cte."Proba_6" AS "Proba_6", orig_cte."Proba_7" AS "Proba_7", orig_cte."Proba_8" AS "Proba_8", orig_cte."Proba_9" AS "Proba_9", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."LogProba_4" AS "LogProba_4", orig_cte."LogProba_5" AS "LogProba_5", orig_cte."LogProba_6" AS "LogProba_6", orig_cte."LogProba_7" AS "LogProba_7", orig_cte."LogProba_8" AS "LogProba_8", orig_cte."LogProba_9" AS "LogProba_9", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", max(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."Proba" >= union_with_max."max_Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Score_4" AS "Score_4", arg_max_cte."Score_5" AS "Score_5", arg_max_cte."Score_6" AS "Score_6", arg_max_cte."Score_7" AS "Score_7", arg_max_cte."Score_8" AS "Score_8", arg_max_cte."Score_9" AS "Score_9", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", arg_max_cte."Proba_4" AS "Proba_4", arg_max_cte."Proba_5" AS "Proba_5", arg_max_cte."Proba_6" AS "Proba_6", arg_max_cte."Proba_7" AS "Proba_7", arg_max_cte."Proba_8" AS "Proba_8", arg_max_cte."Proba_9" AS "Proba_9", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE '-Infinity'::float8 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE '-Infinity'::float8 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE '-Infinity'::float8 END AS "LogProba_3", CASE WHEN (arg_max_cte."Proba_4" IS NULL OR arg_max_cte."Proba_4" > 0.0) THEN ln(arg_max_cte."Proba_4") ELSE '-Infinity'::float8 END AS "LogProba_4", CASE WHEN (arg_max_cte."Proba_5" IS NULL OR arg_max_cte."Proba_5" > 0.0) THEN ln(arg_max_cte."Proba_5") ELSE '-Infinity'::float8 END AS "LogProba_5", CASE WHEN (arg_max_cte."Proba_6" IS NULL OR arg_max_cte."Proba_6" > 0.0) THEN ln(arg_max_cte."Proba_6") ELSE '-Infinity'::float8 END AS "LogProba_6", CASE WHEN (arg_max_cte."Proba_7" IS NULL OR arg_max_cte."Proba_7" > 0.0) THEN ln(arg_max_cte."Proba_7") ELSE '-Infinity'::float8 END AS "LogProba_7", CASE WHEN (arg_max_cte."Proba_8" IS NULL OR arg_max_cte."Proba_8" > 0.0) THEN ln(arg_max_cte."Proba_8") ELSE '-Infinity'::float8 END AS "LogProba_8", CASE WHEN (arg_max_cte."Proba_9" IS NULL OR arg_max_cte."Proba_9" > 0.0) THEN ln(arg_max_cte."Proba_9") ELSE '-Infinity'::float8 END AS "LogProba_9", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte