-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : BaggingClassifier
-- Dataset : BreastCancer
-- Database : pgsql


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018185023_C98780D_BAG_B0 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185023_C98780D_BAG_B0" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Proba_0" FLOAT, 
	"LogProba_0" FLOAT, 
	"Score_1" FLOAT, 
	"Proba_1" FLOAT, 
	"LogProba_1" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185023_C98780D_BAG_B0 part 2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.1454000025987625) THEN CASE WHEN ("ADS"."Feature_22" <= 124.25) THEN CASE WHEN ("ADS"."Feature_18" <= 0.010335000231862068) THEN 3 ELSE CASE WHEN ("ADS"."Feature_26" <= 0.334649994969368) THEN CASE WHEN ("ADS"."Feature_10" <= 0.6034500002861023) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_28" <= 0.3012999892234802) THEN 9 ELSE 10 END END END ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.13565000146627426) THEN CASE WHEN ("ADS"."Feature_10" <= 0.246799997985363) THEN CASE WHEN ("ADS"."Feature_27" <= 0.16029999405145645) THEN 15 ELSE 16 END ELSE 17 END ELSE 18 END END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.2 AS "P_0", 0.8 AS "P_1", 1 AS "D", 0.8 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."P_0" AS "P_0", "DT_node_data"."P_1" AS "P_1", "DT_node_data"."D" AS "D", "DT_node_data"."DP" AS "DP" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"BAG_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output"."P_0" AS "Proba_0", CASE WHEN ("DT_Output"."P_0" IS NULL OR "DT_Output"."P_0" > 0.0) THEN ln("DT_Output"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output"."P_1" AS "Proba_1", CASE WHEN ("DT_Output"."P_1" IS NULL OR "DT_Output"."P_1" > 0.0) THEN ln("DT_Output"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= 0.055800000205636024) THEN CASE WHEN ("ADS"."Feature_13" <= 39.96999931335449) THEN CASE WHEN ("ADS"."Feature_23" <= 1019.5) THEN CASE WHEN ("ADS"."Feature_28" <= 0.3469499945640564) THEN 4 ELSE CASE WHEN ("ADS"."Feature_22" <= 107.54999923706055) THEN 6 ELSE 7 END END ELSE 8 END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.16565000265836716) THEN 10 ELSE CASE WHEN ("ADS"."Feature_16" <= 0.03630500007420778) THEN 12 ELSE 13 END END END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.13565000146627426) THEN CASE WHEN ("ADS"."Feature_21" <= 16.65499973297119) THEN 16 ELSE 17 END ELSE 18 END END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."P_0" AS "P_0", "DT_node_data_1"."P_1" AS "P_1", "DT_node_data_1"."D" AS "D", "DT_node_data_1"."DP" AS "DP" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"BAG_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_1"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_1"."P_0" IS NULL OR "DT_Output_1"."P_0" > 0.0) THEN ln("DT_Output_1"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_1"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_1"."P_1" IS NULL OR "DT_Output_1"."P_1" > 0.0) THEN ln("DT_Output_1"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_22" <= 113.14999771118164) THEN CASE WHEN ("ADS"."Feature_13" <= 48.70000076293945) THEN CASE WHEN ("ADS"."Feature_28" <= 0.3593499958515167) THEN CASE WHEN ("ADS"."Feature_13" <= 38.35000038146973) THEN 4 ELSE CASE WHEN ("ADS"."Feature_21" <= 28.130000114440918) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_18" <= 0.031700000166893005) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS"."Feature_18" <= 0.03031000029295683) THEN 12 ELSE 13 END END ELSE CASE WHEN ("ADS"."Feature_11" <= 0.5234500020742416) THEN 15 ELSE CASE WHEN ("ADS"."Feature_8" <= 0.15004999935626984) THEN 17 ELSE CASE WHEN ("ADS"."Feature_7" <= 0.02804000023752451) THEN 19 ELSE CASE WHEN ("ADS"."Feature_19" <= 0.0016249999753199518) THEN 21 ELSE 22 END END END END END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.8333333333333334 AS "P_0", 0.16666666666666666 AS "P_1", 0 AS "D", 0.8333333333333334 AS "DP" UNION ALL SELECT 22 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."P_0" AS "P_0", "DT_node_data_2"."P_1" AS "P_1", "DT_node_data_2"."D" AS "D", "DT_node_data_2"."DP" AS "DP" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"BAG_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_2"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_2"."P_0" IS NULL OR "DT_Output_2"."P_0" > 0.0) THEN ln("DT_Output_2"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_2"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_2"."P_1" IS NULL OR "DT_Output_2"."P_1" > 0.0) THEN ln("DT_Output_2"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.1464499980211258) THEN CASE WHEN ("ADS"."Feature_20" <= 17.719999313354492) THEN CASE WHEN ("ADS"."Feature_27" <= 0.12230000272393227) THEN CASE WHEN ("ADS"."Feature_10" <= 1.047549992799759) THEN CASE WHEN ("ADS"."Feature_13" <= 48.97500038146973) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_9" <= 0.05646499991416931) THEN 9 ELSE CASE WHEN ("ADS"."Feature_1" <= 24.565000534057617) THEN 11 ELSE 12 END END END ELSE CASE WHEN ("ADS"."Feature_13" <= 37.045000076293945) THEN CASE WHEN ("ADS"."Feature_6" <= 0.047554999589920044) THEN 15 ELSE 16 END ELSE 17 END END ELSE CASE WHEN ("ADS"."Feature_19" <= 0.012910000048577785) THEN CASE WHEN ("ADS"."Feature_6" <= 0.08588500320911407) THEN CASE WHEN ("ADS"."Feature_16" <= 0.025559999980032444) THEN 21 ELSE 22 END ELSE 23 END ELSE 24 END END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.25 AS "P_0", 0.75 AS "P_1", 1 AS "D", 0.75 AS "DP" UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."P_0" AS "P_0", "DT_node_data_3"."P_1" AS "P_1", "DT_node_data_3"."D" AS "D", "DT_node_data_3"."DP" AS "DP" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"BAG_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_3"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_3"."P_0" IS NULL OR "DT_Output_3"."P_0" > 0.0) THEN ln("DT_Output_3"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_3"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_3"."P_1" IS NULL OR "DT_Output_3"."P_1" > 0.0) THEN ln("DT_Output_3"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14559999853372574) THEN CASE WHEN ("ADS"."Feature_22" <= 122.05000305175781) THEN CASE WHEN ("ADS"."Feature_14" <= 0.002832000027410686) THEN 3 ELSE CASE WHEN ("ADS"."Feature_6" <= 0.1197499968111515) THEN CASE WHEN ("ADS"."Feature_21" <= 35.635000228881836) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_9" <= 0.0652099996805191) THEN 9 ELSE 10 END END END ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.12629999965429306) THEN CASE WHEN ("ADS"."Feature_26" <= 0.20340000092983246) THEN 14 ELSE 15 END ELSE 16 END END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.125 AS "P_0", 0.875 AS "P_1", 1 AS "D", 0.875 AS "DP" UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."P_0" AS "P_0", "DT_node_data_4"."P_1" AS "P_1", "DT_node_data_4"."D" AS "D", "DT_node_data_4"."DP" AS "DP" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"BAG_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_4"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_4"."P_0" IS NULL OR "DT_Output_4"."P_0" > 0.0) THEN ln("DT_Output_4"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_4"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_4"."P_1" IS NULL OR "DT_Output_4"."P_1" > 0.0) THEN ln("DT_Output_4"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14429999887943268) THEN CASE WHEN ("ADS"."Feature_20" <= 17.524999618530273) THEN CASE WHEN ("ADS"."Feature_18" <= 0.009211000055074692) THEN 3 ELSE CASE WHEN ("ADS"."Feature_27" <= 0.1318499967455864) THEN 5 ELSE CASE WHEN ("ADS"."Feature_1" <= 21.910000801086426) THEN 7 ELSE 8 END END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.07642500102519989) THEN 10 ELSE 11 END END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.13565000146627426) THEN CASE WHEN ("ADS"."Feature_26" <= 0.20509999990463257) THEN 14 ELSE CASE WHEN ("ADS"."Feature_10" <= 0.24755000323057175) THEN CASE WHEN ("ADS"."Feature_29" <= 0.08650499954819679) THEN 17 ELSE 18 END ELSE 19 END END ELSE 20 END END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 5 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.1111111111111111 AS "P_0", 0.8888888888888888 AS "P_1", 1 AS "D", 0.8888888888888888 AS "DP" UNION ALL SELECT 8 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."P_0" AS "P_0", "DT_node_data_5"."P_1" AS "P_1", "DT_node_data_5"."D" AS "D", "DT_node_data_5"."DP" AS "DP" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"BAG_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_5"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_5"."P_0" IS NULL OR "DT_Output_5"."P_0" > 0.0) THEN ln("DT_Output_5"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_5"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_5"."P_1" IS NULL OR "DT_Output_5"."P_1" > 0.0) THEN ln("DT_Output_5"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.13580000400543213) THEN CASE WHEN ("ADS"."Feature_20" <= 16.829999923706055) THEN CASE WHEN ("ADS"."Feature_13" <= 48.97500038146973) THEN CASE WHEN ("ADS"."Feature_6" <= 0.11534999683499336) THEN 4 ELSE CASE WHEN ("ADS"."Feature_22" <= 103.11000061035156) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_20" <= 13.554999828338623) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS"."Feature_26" <= 0.1956000030040741) THEN 12 ELSE 13 END END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.13565000146627426) THEN CASE WHEN ("ADS"."Feature_6" <= 0.06266500055789948) THEN CASE WHEN ("ADS"."Feature_25" <= 0.2543499991297722) THEN 17 ELSE 18 END ELSE CASE WHEN ("ADS"."Feature_10" <= 0.17840000241994858) THEN 20 ELSE 21 END END ELSE 22 END END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."P_0" AS "P_0", "DT_node_data_6"."P_1" AS "P_1", "DT_node_data_6"."D" AS "D", "DT_node_data_6"."DP" AS "DP" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"BAG_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_6"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_6"."P_0" IS NULL OR "DT_Output_6"."P_0" > 0.0) THEN ln("DT_Output_6"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_6"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_6"."P_1" IS NULL OR "DT_Output_6"."P_1" > 0.0) THEN ln("DT_Output_6"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14545000344514847) THEN CASE WHEN ("ADS"."Feature_23" <= 961.5500183105469) THEN CASE WHEN ("ADS"."Feature_13" <= 48.97500038146973) THEN CASE WHEN ("ADS"."Feature_7" <= 0.04891999997198582) THEN 4 ELSE CASE WHEN ("ADS"."Feature_28" <= 0.29874999821186066) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.16565000265836716) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS"."Feature_24" <= 0.1326500028371811) THEN 12 ELSE CASE WHEN ("ADS"."Feature_27" <= 0.09796499833464622) THEN 14 ELSE 15 END END END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.13565000146627426) THEN CASE WHEN ("ADS"."Feature_26" <= 0.20509999990463257) THEN 18 ELSE CASE WHEN ("ADS"."Feature_10" <= 0.24755000323057175) THEN CASE WHEN ("ADS"."Feature_3" <= 609.1999816894531) THEN 21 ELSE 22 END ELSE 23 END END ELSE 24 END END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."P_0" AS "P_0", "DT_node_data_7"."P_1" AS "P_1", "DT_node_data_7"."D" AS "D", "DT_node_data_7"."DP" AS "DP" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"BAG_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_7"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_7"."P_0" IS NULL OR "DT_Output_7"."P_0" > 0.0) THEN ln("DT_Output_7"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_7"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_7"."P_1" IS NULL OR "DT_Output_7"."P_1" > 0.0) THEN ln("DT_Output_7"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_22" <= 113.14999771118164) THEN CASE WHEN ("ADS"."Feature_27" <= 0.15129999816417694) THEN CASE WHEN ("ADS"."Feature_13" <= 48.97500038146973) THEN CASE WHEN ("ADS"."Feature_27" <= 0.13490000367164612) THEN 4 ELSE CASE WHEN ("ADS"."Feature_13" <= 31.1299991607666) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_9" <= 0.06739500164985657) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS"."Feature_11" <= 2.096000015735626) THEN 12 ELSE 13 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 0.11569999903440475) THEN CASE WHEN ("ADS"."Feature_1" <= 19.2450008392334) THEN 16 ELSE 17 END ELSE 18 END END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."P_0" AS "P_0", "DT_node_data_8"."P_1" AS "P_1", "DT_node_data_8"."D" AS "D", "DT_node_data_8"."DP" AS "DP" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"BAG_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_8"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_8"."P_0" IS NULL OR "DT_Output_8"."P_0" > 0.0) THEN ln("DT_Output_8"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_8"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_8"."P_1" IS NULL OR "DT_Output_8"."P_1" > 0.0) THEN ln("DT_Output_8"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14339999854564667) THEN CASE WHEN ("ADS"."Feature_2" <= 106.8499984741211) THEN CASE WHEN ("ADS"."Feature_13" <= 35.290000915527344) THEN CASE WHEN ("ADS"."Feature_27" <= 0.13580000400543213) THEN 4 ELSE CASE WHEN ("ADS"."Feature_15" <= 0.02397499978542328) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_11" <= 2.0070000290870667) THEN CASE WHEN ("ADS"."Feature_26" <= 0.2854499965906143) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 0.08586500212550163) THEN 14 ELSE 15 END END ELSE CASE WHEN ("ADS"."Feature_6" <= 0.08635000139474869) THEN CASE WHEN ("ADS"."Feature_21" <= 26.244999885559082) THEN 18 ELSE CASE WHEN ("ADS"."Feature_22" <= 101.41500091552734) THEN 20 ELSE 21 END END ELSE CASE WHEN ("ADS"."Feature_22" <= 84.13500213623047) THEN 23 ELSE 24 END END END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."P_0" AS "P_0", "DT_node_data_9"."P_1" AS "P_1", "DT_node_data_9"."D" AS "D", "DT_node_data_9"."DP" AS "DP" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"BAG_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_9"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_9"."P_0" IS NULL OR "DT_Output_9"."P_0" > 0.0) THEN ln("DT_Output_9"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_9"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_9"."P_1" IS NULL OR "DT_Output_9"."P_1" > 0.0) THEN ln("DT_Output_9"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1" 
FROM "DT_Output_9")
 INSERT INTO "TMP_20221018185023_C98780D_BAG_B0" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1") SELECT "T"."KEY", "T"."Score_0", "T"."Proba_0", "T"."LogProba_0", "T"."Score_1", "T"."Proba_1", "T"."LogProba_1" 
FROM (SELECT "BAG_B0"."KEY" AS "KEY", "BAG_B0"."Score_0" AS "Score_0", "BAG_B0"."Proba_0" AS "Proba_0", "BAG_B0"."LogProba_0" AS "LogProba_0", "BAG_B0"."Score_1" AS "Score_1", "BAG_B0"."Proba_1" AS "Proba_1", "BAG_B0"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "BAG_esu_0"."KEY" AS "KEY", "BAG_esu_0"."Score_0" AS "Score_0", "BAG_esu_0"."Proba_0" AS "Proba_0", "BAG_esu_0"."LogProba_0" AS "LogProba_0", "BAG_esu_0"."Score_1" AS "Score_1", "BAG_esu_0"."Proba_1" AS "Proba_1", "BAG_esu_0"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "BAG_Model_0"."KEY" AS "KEY", "BAG_Model_0"."Score_0" AS "Score_0", "BAG_Model_0"."Proba_0" AS "Proba_0", "BAG_Model_0"."LogProba_0" AS "LogProba_0", "BAG_Model_0"."Score_1" AS "Score_1", "BAG_Model_0"."Proba_1" AS "Proba_1", "BAG_Model_0"."LogProba_1" AS "LogProba_1" 
FROM "BAG_Model_0" UNION ALL SELECT "BAG_Model_1"."KEY" AS "KEY", "BAG_Model_1"."Score_0" AS "Score_0", "BAG_Model_1"."Proba_0" AS "Proba_0", "BAG_Model_1"."LogProba_0" AS "LogProba_0", "BAG_Model_1"."Score_1" AS "Score_1", "BAG_Model_1"."Proba_1" AS "Proba_1", "BAG_Model_1"."LogProba_1" AS "LogProba_1" 
FROM "BAG_Model_1" UNION ALL SELECT "BAG_Model_2"."KEY" AS "KEY", "BAG_Model_2"."Score_0" AS "Score_0", "BAG_Model_2"."Proba_0" AS "Proba_0", "BAG_Model_2"."LogProba_0" AS "LogProba_0", "BAG_Model_2"."Score_1" AS "Score_1", "BAG_Model_2"."Proba_1" AS "Proba_1", "BAG_Model_2"."LogProba_1" AS "LogProba_1" 
FROM "BAG_Model_2" UNION ALL SELECT "BAG_Model_3"."KEY" AS "KEY", "BAG_Model_3"."Score_0" AS "Score_0", "BAG_Model_3"."Proba_0" AS "Proba_0", "BAG_Model_3"."LogProba_0" AS "LogProba_0", "BAG_Model_3"."Score_1" AS "Score_1", "BAG_Model_3"."Proba_1" AS "Proba_1", "BAG_Model_3"."LogProba_1" AS "LogProba_1" 
FROM "BAG_Model_3" UNION ALL SELECT "BAG_Model_4"."KEY" AS "KEY", "BAG_Model_4"."Score_0" AS "Score_0", "BAG_Model_4"."Proba_0" AS "Proba_0", "BAG_Model_4"."LogProba_0" AS "LogProba_0", "BAG_Model_4"."Score_1" AS "Score_1", "BAG_Model_4"."Proba_1" AS "Proba_1", "BAG_Model_4"."LogProba_1" AS "LogProba_1" 
FROM "BAG_Model_4" UNION ALL SELECT "BAG_Model_5"."KEY" AS "KEY", "BAG_Model_5"."Score_0" AS "Score_0", "BAG_Model_5"."Proba_0" AS "Proba_0", "BAG_Model_5"."LogProba_0" AS "LogProba_0", "BAG_Model_5"."Score_1" AS "Score_1", "BAG_Model_5"."Proba_1" AS "Proba_1", "BAG_Model_5"."LogProba_1" AS "LogProba_1" 
FROM "BAG_Model_5" UNION ALL SELECT "BAG_Model_6"."KEY" AS "KEY", "BAG_Model_6"."Score_0" AS "Score_0", "BAG_Model_6"."Proba_0" AS "Proba_0", "BAG_Model_6"."LogProba_0" AS "LogProba_0", "BAG_Model_6"."Score_1" AS "Score_1", "BAG_Model_6"."Proba_1" AS "Proba_1", "BAG_Model_6"."LogProba_1" AS "LogProba_1" 
FROM "BAG_Model_6" UNION ALL SELECT "BAG_Model_7"."KEY" AS "KEY", "BAG_Model_7"."Score_0" AS "Score_0", "BAG_Model_7"."Proba_0" AS "Proba_0", "BAG_Model_7"."LogProba_0" AS "LogProba_0", "BAG_Model_7"."Score_1" AS "Score_1", "BAG_Model_7"."Proba_1" AS "Proba_1", "BAG_Model_7"."LogProba_1" AS "LogProba_1" 
FROM "BAG_Model_7" UNION ALL SELECT "BAG_Model_8"."KEY" AS "KEY", "BAG_Model_8"."Score_0" AS "Score_0", "BAG_Model_8"."Proba_0" AS "Proba_0", "BAG_Model_8"."LogProba_0" AS "LogProba_0", "BAG_Model_8"."Score_1" AS "Score_1", "BAG_Model_8"."Proba_1" AS "Proba_1", "BAG_Model_8"."LogProba_1" AS "LogProba_1" 
FROM "BAG_Model_8" UNION ALL SELECT "BAG_Model_9"."KEY" AS "KEY", "BAG_Model_9"."Score_0" AS "Score_0", "BAG_Model_9"."Proba_0" AS "Proba_0", "BAG_Model_9"."LogProba_0" AS "LogProba_0", "BAG_Model_9"."Score_1" AS "Score_1", "BAG_Model_9"."Proba_1" AS "Proba_1", "BAG_Model_9"."LogProba_1" AS "LogProba_1" 
FROM "BAG_Model_9") AS "BAG_esu_0") AS "BAG_B0") AS "T"

-- Code For temporary table TMP_20221018185023_8KZF6R9_BAG_B1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185023_8KZF6R9_BAG_B1" (
	"KEY" BIGINT, 
	"Score_0" FLOAT, 
	"Proba_0" FLOAT, 
	"LogProba_0" FLOAT, 
	"Score_1" FLOAT, 
	"Proba_1" FLOAT, 
	"LogProba_1" FLOAT
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185023_8KZF6R9_BAG_B1 part 2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_22" <= 114.39999771118164) THEN CASE WHEN ("ADS"."Feature_27" <= 0.14785000681877136) THEN CASE WHEN ("ADS"."Feature_23" <= 953.9500122070312) THEN CASE WHEN ("ADS"."Feature_13" <= 48.70000076293945) THEN CASE WHEN ("ADS"."Feature_9" <= 0.05432000011205673) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_2" <= 78.5099983215332) THEN 8 ELSE 9 END END ELSE 10 END ELSE CASE WHEN ("ADS"."Feature_17" <= 0.02175999991595745) THEN 12 ELSE 13 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 1.7519999742507935) THEN 15 ELSE 16 END END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 0.1111111111111111 AS "P_0", 0.8888888888888888 AS "P_1", 1 AS "D", 0.8888888888888888 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."P_0" AS "P_0", "DT_node_data_10"."P_1" AS "P_1", "DT_node_data_10"."D" AS "D", "DT_node_data_10"."DP" AS "DP" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"BAG_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_10"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_10"."P_0" IS NULL OR "DT_Output_10"."P_0" > 0.0) THEN ln("DT_Output_10"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_10"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_10"."P_1" IS NULL OR "DT_Output_10"."P_1" > 0.0) THEN ln("DT_Output_10"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_22" <= 112.79999923706055) THEN CASE WHEN ("ADS"."Feature_25" <= 0.3761499971151352) THEN CASE WHEN ("ADS"."Feature_12" <= 6.341999769210815) THEN CASE WHEN ("ADS"."Feature_6" <= 0.11185000091791153) THEN CASE WHEN ("ADS"."Feature_13" <= 48.97500038146973) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_29" <= 0.07312500104308128) THEN 8 ELSE 9 END END ELSE 10 END ELSE CASE WHEN ("ADS"."Feature_15" <= 0.05231500044465065) THEN CASE WHEN ("ADS"."Feature_27" <= 0.12924999743700027) THEN 13 ELSE 14 END ELSE 15 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 0.1132499985396862) THEN CASE WHEN ("ADS"."Feature_1" <= 19.829999923706055) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS"."Feature_20" <= 15.759999752044678) THEN 21 ELSE 22 END END END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."P_0" AS "P_0", "DT_node_data_11"."P_1" AS "P_1", "DT_node_data_11"."D" AS "D", "DT_node_data_11"."DP" AS "DP" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"BAG_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_11"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_11"."P_0" IS NULL OR "DT_Output_11"."P_0" > 0.0) THEN ln("DT_Output_11"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_11"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_11"."P_1" IS NULL OR "DT_Output_11"."P_1" > 0.0) THEN ln("DT_Output_11"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.1454000025987625) THEN CASE WHEN ("ADS"."Feature_23" <= 961.5500183105469) THEN CASE WHEN ("ADS"."Feature_27" <= 0.1318499967455864) THEN 3 ELSE CASE WHEN ("ADS"."Feature_21" <= 21.789999961853027) THEN 5 ELSE CASE WHEN ("ADS"."Feature_24" <= 0.12325000017881393) THEN 7 ELSE 8 END END END ELSE CASE WHEN ("ADS"."Feature_7" <= 0.02804000023752451) THEN 10 ELSE 11 END END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.2157999947667122) THEN CASE WHEN ("ADS"."Feature_26" <= 0.2110000029206276) THEN 14 ELSE CASE WHEN ("ADS"."Feature_6" <= 0.08588500320911407) THEN CASE WHEN ("ADS"."Feature_13" <= 25.0600004196167) THEN 17 ELSE 18 END ELSE 19 END END ELSE 20 END END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 5 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 18 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 20 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."P_0" AS "P_0", "DT_node_data_12"."P_1" AS "P_1", "DT_node_data_12"."D" AS "D", "DT_node_data_12"."DP" AS "DP" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"BAG_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_12"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_12"."P_0" IS NULL OR "DT_Output_12"."P_0" > 0.0) THEN ln("DT_Output_12"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_12"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_12"."P_1" IS NULL OR "DT_Output_12"."P_1" > 0.0) THEN ln("DT_Output_12"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= 0.055800000205636024) THEN CASE WHEN ("ADS"."Feature_22" <= 117.44999694824219) THEN CASE WHEN ("ADS"."Feature_13" <= 32.98499870300293) THEN CASE WHEN ("ADS"."Feature_27" <= 0.1928499937057495) THEN CASE WHEN ("ADS"."Feature_28" <= 0.3439500033855438) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_26" <= 0.2587500065565109) THEN CASE WHEN ("ADS"."Feature_11" <= 2.0070000290870667) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.07471000030636787) THEN 14 ELSE 15 END END ELSE CASE WHEN ("ADS"."Feature_26" <= 0.21045000106096268) THEN 17 ELSE CASE WHEN ("ADS"."Feature_21" <= 16.324999809265137) THEN 19 ELSE CASE WHEN ("ADS"."Feature_1" <= 14.15999984741211) THEN CASE WHEN ("ADS"."Feature_19" <= 0.005818499950692058) THEN 22 ELSE 23 END ELSE 24 END END END END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 5 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.16666666666666666 AS "P_0", 0.8333333333333334 AS "P_1", 1 AS "D", 0.8333333333333334 AS "DP" UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.6666666666666666 AS "P_0", 0.3333333333333333 AS "P_1", 0 AS "D", 0.6666666666666666 AS "DP" UNION ALL SELECT 12 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 22 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 23 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."P_0" AS "P_0", "DT_node_data_13"."P_1" AS "P_1", "DT_node_data_13"."D" AS "D", "DT_node_data_13"."DP" AS "DP" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"BAG_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_13"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_13"."P_0" IS NULL OR "DT_Output_13"."P_0" > 0.0) THEN ln("DT_Output_13"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_13"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_13"."P_1" IS NULL OR "DT_Output_13"."P_1" > 0.0) THEN ln("DT_Output_13"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14239999651908875) THEN CASE WHEN ("ADS"."Feature_22" <= 123.80000305175781) THEN CASE WHEN ("ADS"."Feature_18" <= 0.010335000231862068) THEN 3 ELSE CASE WHEN ("ADS"."Feature_6" <= 0.11709999665617943) THEN 5 ELSE CASE WHEN ("ADS"."Feature_17" <= 0.016704999841749668) THEN 7 ELSE 8 END END END ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_20" <= 15.420000076293945) THEN CASE WHEN ("ADS"."Feature_25" <= 0.6513999998569489) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS"."Feature_26" <= 0.20340000092983246) THEN 15 ELSE 16 END END END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 3 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 5 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 8 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 9 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 12 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 15 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."P_0" AS "P_0", "DT_node_data_14"."P_1" AS "P_1", "DT_node_data_14"."D" AS "D", "DT_node_data_14"."DP" AS "DP" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"BAG_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_14"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_14"."P_0" IS NULL OR "DT_Output_14"."P_0" > 0.0) THEN ln("DT_Output_14"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_14"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_14"."P_1" IS NULL OR "DT_Output_14"."P_1" > 0.0) THEN ln("DT_Output_14"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_23" <= 884.75) THEN CASE WHEN ("ADS"."Feature_27" <= 0.16029999405145645) THEN CASE WHEN ("ADS"."Feature_13" <= 34.404998779296875) THEN CASE WHEN ("ADS"."Feature_22" <= 113.14999771118164) THEN 4 ELSE CASE WHEN ("ADS"."Feature_4" <= 0.09066499769687653) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 0.11560000106692314) THEN CASE WHEN ("ADS"."Feature_28" <= 0.20024999976158142) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.24114999920129776) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS"."Feature_22" <= 78.63000106811523) THEN 16 ELSE 17 END END ELSE CASE WHEN ("ADS"."Feature_11" <= 0.5105499923229218) THEN 19 ELSE CASE WHEN ("ADS"."Feature_24" <= 0.0879799984395504) THEN 21 ELSE CASE WHEN ("ADS"."Feature_13" <= 22.005000114440918) THEN CASE WHEN ("ADS"."Feature_29" <= 0.08571000024676323) THEN 24 ELSE 25 END ELSE 26 END END END END AS node_id_2 
FROM "BreastCancer" AS "ADS"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, "Values"."P_0" AS "P_0", "Values"."P_1" AS "P_1", "Values"."D" AS "D", "Values"."DP" AS "DP" 
FROM (SELECT 4 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 6 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 7 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 10 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 11 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 13 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 14 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 16 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 17 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 19 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 21 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 24 AS nid, 0.0 AS "P_0", 1.0 AS "P_1", 1 AS "D", 1.0 AS "DP" UNION ALL SELECT 25 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP" UNION ALL SELECT 26 AS nid, 1.0 AS "P_0", 0.0 AS "P_1", 0 AS "D", 1.0 AS "DP") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."P_0" AS "P_0", "DT_node_data_15"."P_1" AS "P_1", "DT_node_data_15"."D" AS "D", "DT_node_data_15"."DP" AS "DP" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"BAG_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", "DT_Output_15"."P_0" AS "Proba_0", CASE WHEN ("DT_Output_15"."P_0" IS NULL OR "DT_Output_15"."P_0" > 0.0) THEN ln("DT_Output_15"."P_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_15"."P_1" AS "Proba_1", CASE WHEN ("DT_Output_15"."P_1" IS NULL OR "DT_Output_15"."P_1" > 0.0) THEN ln("DT_Output_15"."P_1") ELSE '-Infinity'::float8 END AS "LogProba_1" 
FROM "DT_Output_15")
 INSERT INTO "TMP_20221018185023_8KZF6R9_BAG_B1" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1") SELECT "T"."KEY", "T"."Score_0", "T"."Proba_0", "T"."LogProba_0", "T"."Score_1", "T"."Proba_1", "T"."LogProba_1" 
FROM (SELECT "BAG_B1"."KEY" AS "KEY", "BAG_B1"."Score_0" AS "Score_0", "BAG_B1"."Proba_0" AS "Proba_0", "BAG_B1"."LogProba_0" AS "LogProba_0", "BAG_B1"."Score_1" AS "Score_1", "BAG_B1"."Proba_1" AS "Proba_1", "BAG_B1"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "BAG_esu_1"."KEY" AS "KEY", "BAG_esu_1"."Score_0" AS "Score_0", "BAG_esu_1"."Proba_0" AS "Proba_0", "BAG_esu_1"."LogProba_0" AS "LogProba_0", "BAG_esu_1"."Score_1" AS "Score_1", "BAG_esu_1"."Proba_1" AS "Proba_1", "BAG_esu_1"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "BAG_Model_10"."KEY" AS "KEY", "BAG_Model_10"."Score_0" AS "Score_0", "BAG_Model_10"."Proba_0" AS "Proba_0", "BAG_Model_10"."LogProba_0" AS "LogProba_0", "BAG_Model_10"."Score_1" AS "Score_1", "BAG_Model_10"."Proba_1" AS "Proba_1", "BAG_Model_10"."LogProba_1" AS "LogProba_1" 
FROM "BAG_Model_10" UNION ALL SELECT "BAG_Model_11"."KEY" AS "KEY", "BAG_Model_11"."Score_0" AS "Score_0", "BAG_Model_11"."Proba_0" AS "Proba_0", "BAG_Model_11"."LogProba_0" AS "LogProba_0", "BAG_Model_11"."Score_1" AS "Score_1", "BAG_Model_11"."Proba_1" AS "Proba_1", "BAG_Model_11"."LogProba_1" AS "LogProba_1" 
FROM "BAG_Model_11" UNION ALL SELECT "BAG_Model_12"."KEY" AS "KEY", "BAG_Model_12"."Score_0" AS "Score_0", "BAG_Model_12"."Proba_0" AS "Proba_0", "BAG_Model_12"."LogProba_0" AS "LogProba_0", "BAG_Model_12"."Score_1" AS "Score_1", "BAG_Model_12"."Proba_1" AS "Proba_1", "BAG_Model_12"."LogProba_1" AS "LogProba_1" 
FROM "BAG_Model_12" UNION ALL SELECT "BAG_Model_13"."KEY" AS "KEY", "BAG_Model_13"."Score_0" AS "Score_0", "BAG_Model_13"."Proba_0" AS "Proba_0", "BAG_Model_13"."LogProba_0" AS "LogProba_0", "BAG_Model_13"."Score_1" AS "Score_1", "BAG_Model_13"."Proba_1" AS "Proba_1", "BAG_Model_13"."LogProba_1" AS "LogProba_1" 
FROM "BAG_Model_13" UNION ALL SELECT "BAG_Model_14"."KEY" AS "KEY", "BAG_Model_14"."Score_0" AS "Score_0", "BAG_Model_14"."Proba_0" AS "Proba_0", "BAG_Model_14"."LogProba_0" AS "LogProba_0", "BAG_Model_14"."Score_1" AS "Score_1", "BAG_Model_14"."Proba_1" AS "Proba_1", "BAG_Model_14"."LogProba_1" AS "LogProba_1" 
FROM "BAG_Model_14" UNION ALL SELECT "BAG_Model_15"."KEY" AS "KEY", "BAG_Model_15"."Score_0" AS "Score_0", "BAG_Model_15"."Proba_0" AS "Proba_0", "BAG_Model_15"."LogProba_0" AS "LogProba_0", "BAG_Model_15"."Score_1" AS "Score_1", "BAG_Model_15"."Proba_1" AS "Proba_1", "BAG_Model_15"."LogProba_1" AS "LogProba_1" 
FROM "BAG_Model_15") AS "BAG_esu_1") AS "BAG_B1") AS "T"

-- Code For temporary table TMP_20221018185023_DUFF51C_BAG_avg part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185023_DUFF51C_BAG_avg" (
	"KEY" BIGINT NOT NULL, 
	"Score_0" FLOAT, 
	"Proba_0" FLOAT, 
	"LogProba_0" FLOAT, 
	"Score_1" FLOAT, 
	"Proba_1" FLOAT, 
	"LogProba_1" FLOAT, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185023_DUFF51C_BAG_avg part 2. Populate

WITH "BAG_Union" AS 
(SELECT "BAG_EnsembleUnion"."KEY" AS "KEY", "BAG_EnsembleUnion"."Score_0" AS "Score_0", "BAG_EnsembleUnion"."Proba_0" AS "Proba_0", "BAG_EnsembleUnion"."LogProba_0" AS "LogProba_0", "BAG_EnsembleUnion"."Score_1" AS "Score_1", "BAG_EnsembleUnion"."Proba_1" AS "Proba_1", "BAG_EnsembleUnion"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "BAG_B0"."KEY" AS "KEY", "BAG_B0"."Score_0" AS "Score_0", "BAG_B0"."Proba_0" AS "Proba_0", "BAG_B0"."LogProba_0" AS "LogProba_0", "BAG_B0"."Score_1" AS "Score_1", "BAG_B0"."Proba_1" AS "Proba_1", "BAG_B0"."LogProba_1" AS "LogProba_1" 
FROM "TMP_20221018185023_C98780D_BAG_B0" AS "BAG_B0" UNION ALL SELECT "BAG_B1"."KEY" AS "KEY", "BAG_B1"."Score_0" AS "Score_0", "BAG_B1"."Proba_0" AS "Proba_0", "BAG_B1"."LogProba_0" AS "LogProba_0", "BAG_B1"."Score_1" AS "Score_1", "BAG_B1"."Proba_1" AS "Proba_1", "BAG_B1"."LogProba_1" AS "LogProba_1" 
FROM "TMP_20221018185023_8KZF6R9_BAG_B1" AS "BAG_B1") AS "BAG_EnsembleUnion")
 INSERT INTO "TMP_20221018185023_DUFF51C_BAG_avg" ("KEY", "Score_0", "Proba_0", "LogProba_0", "Score_1", "Proba_1", "LogProba_1") SELECT "T"."KEY", "T"."Score_0", "T"."Proba_0", "T"."LogProba_0", "T"."Score_1", "T"."Proba_1", "T"."LogProba_1" 
FROM (SELECT "BAG_avg"."KEY" AS "KEY", "BAG_avg"."Score_0" AS "Score_0", "BAG_avg"."Proba_0" AS "Proba_0", "BAG_avg"."LogProba_0" AS "LogProba_0", "BAG_avg"."Score_1" AS "Score_1", "BAG_avg"."Proba_1" AS "Proba_1", "BAG_avg"."LogProba_1" AS "LogProba_1" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Score_0" AS FLOAT) AS "Score_0", CAST("T"."Proba_0" AS FLOAT) AS "Proba_0", CAST("T"."LogProba_0" AS FLOAT) AS "LogProba_0", CAST("T"."Score_1" AS FLOAT) AS "Score_1", CAST("T"."Proba_1" AS FLOAT) AS "Proba_1", CAST("T"."LogProba_1" AS FLOAT) AS "LogProba_1" 
FROM (SELECT "BAG_Union"."KEY" AS "KEY", avg(CAST("BAG_Union"."Score_0" AS FLOAT)) AS "Score_0", avg(CAST("BAG_Union"."Proba_0" AS FLOAT)) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0", avg(CAST("BAG_Union"."Score_1" AS FLOAT)) AS "Score_1", avg(CAST("BAG_Union"."Proba_1" AS FLOAT)) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1" 
FROM "BAG_Union" GROUP BY "BAG_Union"."KEY") AS "T") AS "BAG_avg") AS "T"

-- Code For temporary table TMP_20221018185023_DUFF51C_BAG_avg part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185023_DUFF51C_BAG_avg_KEY" ON "TMP_20221018185023_DUFF51C_BAG_avg" ("KEY")

-- Model deployment code

WITH orig_cte AS 
(SELECT "BAG_avg"."KEY" AS "KEY", "BAG_avg"."Score_0" AS "Score_0", "BAG_avg"."Score_1" AS "Score_1", "BAG_avg"."Proba_0" AS "Proba_0", "BAG_avg"."Proba_1" AS "Proba_1", "BAG_avg"."LogProba_0" AS "LogProba_0", "BAG_avg"."LogProba_1" AS "LogProba_1", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "TMP_20221018185023_DUFF51C_BAG_avg" AS "BAG_avg"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", max(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."Proba" >= union_with_max."max_Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE '-Infinity'::float8 END AS "LogProba_1", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte