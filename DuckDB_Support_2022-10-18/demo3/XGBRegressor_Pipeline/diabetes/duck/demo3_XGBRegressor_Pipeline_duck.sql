-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : XGBRegressor_Pipeline
-- Dataset : diabetes
-- Database : duck


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018185916_8A4QNBE_ADS_imp_1_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185916_8A4QNBE_ADS_imp_1_OUT" (
	"KEY" BIGINT NOT NULL, 
	imputer_output_2 DOUBLE, 
	imputer_output_3 DOUBLE, 
	imputer_output_4 DOUBLE, 
	imputer_output_5 DOUBLE, 
	imputer_output_6 DOUBLE, 
	imputer_output_7 DOUBLE, 
	imputer_output_8 DOUBLE, 
	imputer_output_9 DOUBLE, 
	imputer_output_10 DOUBLE, 
	imputer_output_11 DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185916_8A4QNBE_ADS_imp_1_OUT part 2. Populate

INSERT INTO "TMP_20221018185916_8A4QNBE_ADS_imp_1_OUT" ("KEY", imputer_output_2, imputer_output_3, imputer_output_4, imputer_output_5, imputer_output_6, imputer_output_7, imputer_output_8, imputer_output_9, imputer_output_10, imputer_output_11) SELECT "T"."KEY", "T".imputer_output_2, "T".imputer_output_3, "T".imputer_output_4, "T".imputer_output_5, "T".imputer_output_6, "T".imputer_output_7, "T".imputer_output_8, "T".imputer_output_9, "T".imputer_output_10, "T".imputer_output_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".imputer_output_2 AS imputer_output_2, "ADS_imp_1_OUT".imputer_output_3 AS imputer_output_3, "ADS_imp_1_OUT".imputer_output_4 AS imputer_output_4, "ADS_imp_1_OUT".imputer_output_5 AS imputer_output_5, "ADS_imp_1_OUT".imputer_output_6 AS imputer_output_6, "ADS_imp_1_OUT".imputer_output_7 AS imputer_output_7, "ADS_imp_1_OUT".imputer_output_8 AS imputer_output_8, "ADS_imp_1_OUT".imputer_output_9 AS imputer_output_9, "ADS_imp_1_OUT".imputer_output_10 AS imputer_output_10, "ADS_imp_1_OUT".imputer_output_11 AS imputer_output_11 
FROM (SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0002686932066656524 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.0007239580580638301 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.0007280719825591873 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.0010135851598460544 ELSE "ADS"."Feature_3" END AS imputer_output_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0009763580732882766 ELSE "ADS"."Feature_4" END AS imputer_output_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.0017643808242336471 ELSE "ADS"."Feature_5" END AS imputer_output_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.0016512815450559991 ELSE "ADS"."Feature_6" END AS imputer_output_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.001390550198338443 ELSE "ADS"."Feature_7" END AS imputer_output_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.0012727412281983582 ELSE "ADS"."Feature_8" END AS imputer_output_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.0010344250056819138 ELSE "ADS"."Feature_9" END AS imputer_output_11 
FROM diabetes AS "ADS") AS "ADS_imp_1_OUT") AS "T"

-- Code For temporary table TMP_20221018185916_8A4QNBE_ADS_imp_1_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185916_8A4QNBE_ADS_imp_1_OUT_KEY" ON "TMP_20221018185916_8A4QNBE_ADS_imp_1_OUT" ("KEY")

-- Code For temporary table TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT" (
	"KEY" BIGINT NOT NULL, 
	scaler_output_2 DOUBLE, 
	scaler_output_3 DOUBLE, 
	scaler_output_4 DOUBLE, 
	scaler_output_5 DOUBLE, 
	scaler_output_6 DOUBLE, 
	scaler_output_7 DOUBLE, 
	scaler_output_8 DOUBLE, 
	scaler_output_9 DOUBLE, 
	scaler_output_10 DOUBLE, 
	scaler_output_11 DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT part 2. Populate

INSERT INTO "TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT" ("KEY", scaler_output_2, scaler_output_3, scaler_output_4, scaler_output_5, scaler_output_6, scaler_output_7, scaler_output_8, scaler_output_9, scaler_output_10, scaler_output_11) SELECT "T"."KEY", "T".scaler_output_2, "T".scaler_output_3, "T".scaler_output_4, "T".scaler_output_5, "T".scaler_output_6, "T".scaler_output_7, "T".scaler_output_8, "T".scaler_output_9, "T".scaler_output_10, "T".scaler_output_11 
FROM (SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", "ADS_sca_2_OUT".scaler_output_2 AS scaler_output_2, "ADS_sca_2_OUT".scaler_output_3 AS scaler_output_3, "ADS_sca_2_OUT".scaler_output_4 AS scaler_output_4, "ADS_sca_2_OUT".scaler_output_5 AS scaler_output_5, "ADS_sca_2_OUT".scaler_output_6 AS scaler_output_6, "ADS_sca_2_OUT".scaler_output_7 AS scaler_output_7, "ADS_sca_2_OUT".scaler_output_8 AS scaler_output_8, "ADS_sca_2_OUT".scaler_output_9 AS scaler_output_9, "ADS_sca_2_OUT".scaler_output_10 AS scaler_output_10, "ADS_sca_2_OUT".scaler_output_11 AS scaler_output_11 
FROM (SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS DOUBLE) - 0.0002686932066656524) / 0.047242095836536116 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS DOUBLE) - 0.0007239580580638301) / 0.047605576685039 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS DOUBLE) - 0.0007280719825591873) / 0.04693591143936429 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS DOUBLE) - 0.0010135851598460544) / 0.04833530116894073 AS scaler_output_5, (CAST("ADS_imp_1_OUT".imputer_output_6 AS DOUBLE) - 0.0009763580732882766) / 0.04805076200970219 AS scaler_output_6, (CAST("ADS_imp_1_OUT".imputer_output_7 AS DOUBLE) - 0.0017643808242336471) / 0.048060808731544384 AS scaler_output_7, (CAST("ADS_imp_1_OUT".imputer_output_8 AS DOUBLE) - -0.0016512815450559991) / 0.04620240378042887 AS scaler_output_8, (CAST("ADS_imp_1_OUT".imputer_output_9 AS DOUBLE) - 0.001390550198338443) / 0.047363093040532836 AS scaler_output_9, (CAST("ADS_imp_1_OUT".imputer_output_10 AS DOUBLE) - 0.0012727412281983582) / 0.045892845781363927 AS scaler_output_10, (CAST("ADS_imp_1_OUT".imputer_output_11 AS DOUBLE) - 0.0010344250056819138) / 0.04776158519570336 AS scaler_output_11 
FROM "TMP_20221018185916_8A4QNBE_ADS_imp_1_OUT" AS "ADS_imp_1_OUT") AS "ADS_sca_2_OUT") AS "T"

-- Code For temporary table TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT_KEY" ON "TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT" ("KEY")

-- Code For temporary table TMP_20221018185916_9C5CLAA_XGB_B0 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185916_9C5CLAA_XGB_B0" (
	"KEY" BIGINT, 
	"Estimator" DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185916_9C5CLAA_XGB_B0 part 2. Populate

WITH "DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 < -0.0122614792) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < 0.116346151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 < 0.490864038) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < 0.988958597) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < -0.480704427) THEN 9 ELSE 10 END ELSE 6 END END AS node_id_2 
FROM "TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".nid AS nid, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 4 AS nid, 47.3307686 AS "Estimator" UNION ALL SELECT 6 AS nid, 72.1650009 AS "Estimator" UNION ALL SELECT 7 AS nid, 32.7912178 AS "Estimator" UNION ALL SELECT 8 AS nid, 25.0432854 AS "Estimator" UNION ALL SELECT 9 AS nid, 40.8636398 AS "Estimator" UNION ALL SELECT 10 AS nid, 55.7953148 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".nid AS nid, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".nid), 
"XGB_Model_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 < -0.233235091) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < 0.116346151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 < -0.970740736) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 < 0.291651547) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 < 0.740319371) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < 1.47119164) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < 0.265608788) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".nid AS nid, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 7 AS nid, 16.0559273 AS "Estimator" UNION ALL SELECT 8 AS nid, 21.3245411 AS "Estimator" UNION ALL SELECT 9 AS nid, 36.0484657 AS "Estimator" UNION ALL SELECT 10 AS nid, 24.1965389 AS "Estimator" UNION ALL SELECT 11 AS nid, 33.424736 AS "Estimator" UNION ALL SELECT 12 AS nid, 50.9043312 AS "Estimator" UNION ALL SELECT 13 AS nid, 38.5202789 AS "Estimator" UNION ALL SELECT 14 AS nid, 54.1237755 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".nid AS nid, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".nid), 
"XGB_Model_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", "DT_Output_1"."Estimator" AS "Estimator" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 < -0.233235091) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < 0.931549847) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 < 0.490864038) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < 1.44822824) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 < -1.01688778) THEN 9 ELSE 10 END ELSE 6 END END AS node_id_2 
FROM "TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".nid AS nid, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 4 AS nid, 29.1890068 AS "Estimator" UNION ALL SELECT 6 AS nid, 40.8768272 AS "Estimator" UNION ALL SELECT 7 AS nid, 16.7941055 AS "Estimator" UNION ALL SELECT 8 AS nid, 11.6862469 AS "Estimator" UNION ALL SELECT 9 AS nid, 13.0551643 AS "Estimator" UNION ALL SELECT 10 AS nid, 27.8063469 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".nid AS nid, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".nid), 
"XGB_Model_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", "DT_Output_2"."Estimator" AS "Estimator" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 < 0.467158079) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 < 0.561475396) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < 0.0482145846) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 < -0.94346571) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < 0.265608788) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 < 1.03983593) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < 0.977476835) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".nid AS nid, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 7 AS nid, 13.3512716 AS "Estimator" UNION ALL SELECT 8 AS nid, 7.39359045 AS "Estimator" UNION ALL SELECT 9 AS nid, 27.2915421 AS "Estimator" UNION ALL SELECT 10 AS nid, 15.9785185 AS "Estimator" UNION ALL SELECT 11 AS nid, 12.7315283 AS "Estimator" UNION ALL SELECT 12 AS nid, 29.9689713 AS "Estimator" UNION ALL SELECT 13 AS nid, 23.8492203 AS "Estimator" UNION ALL SELECT 14 AS nid, 31.482975 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".nid AS nid, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".nid), 
"XGB_Model_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", "DT_Output_3"."Estimator" AS "Estimator" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 < 0.335536093) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < 0.0933826715) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < -0.113288686) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 < -0.852457762) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 < -0.622215152) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 < -0.304396152) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 < 0.863361418) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".nid AS nid, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 7 AS nid, 7.4774704 AS "Estimator" UNION ALL SELECT 8 AS nid, -1.26417553 AS "Estimator" UNION ALL SELECT 9 AS nid, 5.53232384 AS "Estimator" UNION ALL SELECT 10 AS nid, 16.1991215 AS "Estimator" UNION ALL SELECT 11 AS nid, 1.09114909 AS "Estimator" UNION ALL SELECT 12 AS nid, 11.2923231 AS "Estimator" UNION ALL SELECT 13 AS nid, 21.7519341 AS "Estimator" UNION ALL SELECT 14 AS nid, 11.7026758 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".nid AS nid, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".nid), 
"XGB_Model_4" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Estimator" AS "Estimator" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 < 0.775933623) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 < 0.632691383) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < 0.0482145846) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 < 0.936106443) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 < -0.684418559) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 < 0.570549011) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".nid AS nid, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS nid, 3.09344578 AS "Estimator" UNION ALL SELECT 7 AS nid, 6.31106567 AS "Estimator" UNION ALL SELECT 8 AS nid, 1.18327892 AS "Estimator" UNION ALL SELECT 9 AS nid, 14.1853552 AS "Estimator" UNION ALL SELECT 10 AS nid, 6.07719088 AS "Estimator" UNION ALL SELECT 11 AS nid, 16.0243092 AS "Estimator" UNION ALL SELECT 12 AS nid, 6.42888021 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".nid AS nid, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".nid), 
"XGB_Model_5" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", "DT_Output_5"."Estimator" AS "Estimator" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 < 0.692937374) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 < 0.752072096) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 < -1.85248685) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 < -0.261033833) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 < 0.85157156) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 < 1.024068) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 < -0.94346571) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".nid AS nid, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 7 AS nid, 10.2437897 AS "Estimator" UNION ALL SELECT 8 AS nid, 2.78286409 AS "Estimator" UNION ALL SELECT 9 AS nid, 15.604084 AS "Estimator" UNION ALL SELECT 10 AS nid, 5.64384747 AS "Estimator" UNION ALL SELECT 11 AS nid, 9.58685303 AS "Estimator" UNION ALL SELECT 12 AS nid, -4.5974474 AS "Estimator" UNION ALL SELECT 13 AS nid, 19.0128231 AS "Estimator" UNION ALL SELECT 14 AS nid, 10.9579182 AS "Estimator") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".nid AS nid, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".nid), 
"XGB_Model_6" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", "DT_Output_6"."Estimator" AS "Estimator" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 < -1.00182605) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 < -0.814445138) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 < -0.907828748) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 < -0.993026137) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 < -1.02511084) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < -0.652930617) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < 1.54008222) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".nid AS nid, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 7 AS nid, -2.06364274 AS "Estimator" UNION ALL SELECT 8 AS nid, 8.12841606 AS "Estimator" UNION ALL SELECT 9 AS nid, -7.55602026 AS "Estimator" UNION ALL SELECT 10 AS nid, -1.02092493 AS "Estimator" UNION ALL SELECT 11 AS nid, 7.72178316 AS "Estimator" UNION ALL SELECT 12 AS nid, 14.4965839 AS "Estimator" UNION ALL SELECT 13 AS nid, 3.3205142 AS "Estimator" UNION ALL SELECT 14 AS nid, 11.7138109 AS "Estimator") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".nid AS nid, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".nid), 
"XGB_Model_7" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", "DT_Output_7"."Estimator" AS "Estimator" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < -1.26146293) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 < -1.54491901) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 < -0.944819808) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 < -1.02511084) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 < -1.32808959) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < 2.0108335) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".nid AS nid, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS nid, 0.745050728 AS "Estimator" UNION ALL SELECT 7 AS nid, -6.65224695 AS "Estimator" UNION ALL SELECT 8 AS nid, -2.22730994 AS "Estimator" UNION ALL SELECT 9 AS nid, 4.5168047 AS "Estimator" UNION ALL SELECT 10 AS nid, 12.1962242 AS "Estimator" UNION ALL SELECT 11 AS nid, 2.47078609 AS "Estimator" UNION ALL SELECT 12 AS nid, 10.8678408 AS "Estimator") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".nid AS nid, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".nid), 
"XGB_Model_8" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Estimator" AS "Estimator" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 < 1.32755637) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 < 1.74927104) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 < 0.146704674) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 < 0.0313667022) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 < -0.173898429) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".nid AS nid, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 4 AS nid, 8.93603802 AS "Estimator" UNION ALL SELECT 5 AS nid, -6.66671753 AS "Estimator" UNION ALL SELECT 7 AS nid, 0.73345089 AS "Estimator" UNION ALL SELECT 8 AS nid, 3.78975797 AS "Estimator" UNION ALL SELECT 9 AS nid, -2.16524982 AS "Estimator" UNION ALL SELECT 10 AS nid, 3.01621294 AS "Estimator") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".nid AS nid, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".nid), 
"XGB_Model_9" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", "DT_Output_9"."Estimator" AS "Estimator" 
FROM "DT_Output_9")
 INSERT INTO "TMP_20221018185916_9C5CLAA_XGB_B0" ("KEY", "Estimator") SELECT "T"."KEY", "T"."Estimator" 
FROM (SELECT "XGB_B0"."KEY" AS "KEY", "XGB_B0"."Estimator" AS "Estimator" 
FROM (SELECT "XGB_esu_0"."KEY" AS "KEY", "XGB_esu_0"."Estimator" AS "Estimator" 
FROM (SELECT "XGB_Model_0"."KEY" AS "KEY", "XGB_Model_0"."Estimator" AS "Estimator" 
FROM "XGB_Model_0" UNION ALL SELECT "XGB_Model_1"."KEY" AS "KEY", "XGB_Model_1"."Estimator" AS "Estimator" 
FROM "XGB_Model_1" UNION ALL SELECT "XGB_Model_2"."KEY" AS "KEY", "XGB_Model_2"."Estimator" AS "Estimator" 
FROM "XGB_Model_2" UNION ALL SELECT "XGB_Model_3"."KEY" AS "KEY", "XGB_Model_3"."Estimator" AS "Estimator" 
FROM "XGB_Model_3" UNION ALL SELECT "XGB_Model_4"."KEY" AS "KEY", "XGB_Model_4"."Estimator" AS "Estimator" 
FROM "XGB_Model_4" UNION ALL SELECT "XGB_Model_5"."KEY" AS "KEY", "XGB_Model_5"."Estimator" AS "Estimator" 
FROM "XGB_Model_5" UNION ALL SELECT "XGB_Model_6"."KEY" AS "KEY", "XGB_Model_6"."Estimator" AS "Estimator" 
FROM "XGB_Model_6" UNION ALL SELECT "XGB_Model_7"."KEY" AS "KEY", "XGB_Model_7"."Estimator" AS "Estimator" 
FROM "XGB_Model_7" UNION ALL SELECT "XGB_Model_8"."KEY" AS "KEY", "XGB_Model_8"."Estimator" AS "Estimator" 
FROM "XGB_Model_8" UNION ALL SELECT "XGB_Model_9"."KEY" AS "KEY", "XGB_Model_9"."Estimator" AS "Estimator" 
FROM "XGB_Model_9") AS "XGB_esu_0") AS "XGB_B0") AS "T"

-- Code For temporary table TMP_20221018185916_GL06CUW_XGB_B1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185916_GL06CUW_XGB_B1" (
	"KEY" BIGINT, 
	"Estimator" DOUBLE
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185916_GL06CUW_XGB_B1 part 2. Populate

WITH "DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 < -1.01688778) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 < -0.929783106) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < 0.104864411) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 < -0.00707929023) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < 0.0482145846) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 < 0.882756114) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".nid AS nid, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS nid, 4.79011345 AS "Estimator" UNION ALL SELECT 7 AS nid, -6.50414324 AS "Estimator" UNION ALL SELECT 8 AS nid, -0.248437151 AS "Estimator" UNION ALL SELECT 9 AS nid, 2.66225314 AS "Estimator" UNION ALL SELECT 10 AS nid, -2.88444853 AS "Estimator" UNION ALL SELECT 11 AS nid, 1.98906565 AS "Estimator" UNION ALL SELECT 12 AS nid, 7.35178375 AS "Estimator") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".nid AS nid, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".nid), 
"XGB_Model_10" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", "DT_Output_10"."Estimator" AS "Estimator" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 < 0.61710912) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 < -0.010075476) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < 0.185236603) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 < 0.333606482) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 < 0.779662013) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < 0.0244922154) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".nid AS nid, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 4 AS nid, -7.22377062 AS "Estimator" UNION ALL SELECT 7 AS nid, -0.451518029 AS "Estimator" UNION ALL SELECT 8 AS nid, 3.44791818 AS "Estimator" UNION ALL SELECT 9 AS nid, 2.92550421 AS "Estimator" UNION ALL SELECT 10 AS nid, 13.9541512 AS "Estimator" UNION ALL SELECT 11 AS nid, 6.37584877 AS "Estimator" UNION ALL SELECT 12 AS nid, -2.16465616 AS "Estimator") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".nid AS nid, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".nid), 
"XGB_Model_11" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", "DT_Output_11"."Estimator" AS "Estimator" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < 1.47119176) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < 1.26452041) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < 0.988958597) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 < -0.109658942) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_6 < 0.419512689) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".nid AS nid, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 4 AS nid, -5.7543993 AS "Estimator" UNION ALL SELECT 5 AS nid, 8.70550632 AS "Estimator" UNION ALL SELECT 7 AS nid, 0.287918448 AS "Estimator" UNION ALL SELECT 8 AS nid, 6.23695803 AS "Estimator" UNION ALL SELECT 9 AS nid, -0.130111843 AS "Estimator" UNION ALL SELECT 10 AS nid, 3.33191538 AS "Estimator") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".nid AS nid, "DT_node_data_12"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".nid), 
"XGB_Model_12" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."Estimator" AS "Estimator" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 < 1.32755637) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < 0.0482145846) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_8 < -0.94346571) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 < -0.69910717) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_10 < -0.658298969) THEN 5 ELSE 6 END END AS node_id_2 
FROM "TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".nid AS nid, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 5 AS nid, 0.150791645 AS "Estimator" UNION ALL SELECT 6 AS nid, -5.30117369 AS "Estimator" UNION ALL SELECT 7 AS nid, 11.0594749 AS "Estimator" UNION ALL SELECT 8 AS nid, 1.40020001 AS "Estimator" UNION ALL SELECT 9 AS nid, -4.49235201 AS "Estimator" UNION ALL SELECT 10 AS nid, 0.712508082 AS "Estimator") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".nid AS nid, "DT_node_data_13"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".nid), 
"XGB_Model_13" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", "DT_Output_13"."Estimator" AS "Estimator" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 < -1.02511084) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < -1.26146293) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_4 < -0.124770433) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 < -0.933891416) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_3 < 0.0482145846) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".nid AS nid, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 3 AS nid, -2.60941529 AS "Estimator" UNION ALL SELECT 5 AS nid, -7.54619551 AS "Estimator" UNION ALL SELECT 7 AS nid, 6.34051228 AS "Estimator" UNION ALL SELECT 8 AS nid, 1.19930243 AS "Estimator" UNION ALL SELECT 9 AS nid, 1.38017106 AS "Estimator" UNION ALL SELECT 10 AS nid, -0.863725424 AS "Estimator") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".nid AS nid, "DT_node_data_14"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".nid), 
"XGB_Model_14" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", "DT_Output_14"."Estimator" AS "Estimator" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_output_9 < 1.11963582) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_2 < -1.23735094) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 < -0.340216994) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_11 < 0.866386652) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_output_7 < 1.28795266) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_output_5 < -0.304602742) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM "TMP_20221018185916_3WNQQ4S_ADS_sca_2_OUT" AS "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".nid AS nid, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 6 AS nid, -1.90002573 AS "Estimator" UNION ALL SELECT 7 AS nid, 4.89133883 AS "Estimator" UNION ALL SELECT 8 AS nid, -1.31797743 AS "Estimator" UNION ALL SELECT 9 AS nid, -1.25068009 AS "Estimator" UNION ALL SELECT 10 AS nid, 2.21164227 AS "Estimator" UNION ALL SELECT 11 AS nid, -0.467651397 AS "Estimator" UNION ALL SELECT 12 AS nid, 9.40733624 AS "Estimator") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".nid AS nid, "DT_node_data_15"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".nid), 
"XGB_Model_15" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", "DT_Output_15"."Estimator" AS "Estimator" 
FROM "DT_Output_15")
 INSERT INTO "TMP_20221018185916_GL06CUW_XGB_B1" ("KEY", "Estimator") SELECT "T"."KEY", "T"."Estimator" 
FROM (SELECT "XGB_B1"."KEY" AS "KEY", "XGB_B1"."Estimator" AS "Estimator" 
FROM (SELECT "XGB_esu_1"."KEY" AS "KEY", "XGB_esu_1"."Estimator" AS "Estimator" 
FROM (SELECT "XGB_Model_10"."KEY" AS "KEY", "XGB_Model_10"."Estimator" AS "Estimator" 
FROM "XGB_Model_10" UNION ALL SELECT "XGB_Model_11"."KEY" AS "KEY", "XGB_Model_11"."Estimator" AS "Estimator" 
FROM "XGB_Model_11" UNION ALL SELECT "XGB_Model_12"."KEY" AS "KEY", "XGB_Model_12"."Estimator" AS "Estimator" 
FROM "XGB_Model_12" UNION ALL SELECT "XGB_Model_13"."KEY" AS "KEY", "XGB_Model_13"."Estimator" AS "Estimator" 
FROM "XGB_Model_13" UNION ALL SELECT "XGB_Model_14"."KEY" AS "KEY", "XGB_Model_14"."Estimator" AS "Estimator" 
FROM "XGB_Model_14" UNION ALL SELECT "XGB_Model_15"."KEY" AS "KEY", "XGB_Model_15"."Estimator" AS "Estimator" 
FROM "XGB_Model_15") AS "XGB_esu_1") AS "XGB_B1") AS "T"

-- Code For temporary table TMP_20221018185916_UWUUSJV_XGB_sum part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018185916_UWUUSJV_XGB_sum" (
	"KEY" BIGINT NOT NULL, 
	"Estimator" DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018185916_UWUUSJV_XGB_sum part 2. Populate

WITH "XGB_Union" AS 
(SELECT "XGB_EnsembleUnion"."KEY" AS "KEY", "XGB_EnsembleUnion"."Estimator" AS "Estimator" 
FROM (SELECT "XGB_B0"."KEY" AS "KEY", "XGB_B0"."Estimator" AS "Estimator" 
FROM "TMP_20221018185916_9C5CLAA_XGB_B0" AS "XGB_B0" UNION ALL SELECT "XGB_B1"."KEY" AS "KEY", "XGB_B1"."Estimator" AS "Estimator" 
FROM "TMP_20221018185916_GL06CUW_XGB_B1" AS "XGB_B1") AS "XGB_EnsembleUnion")
 INSERT INTO "TMP_20221018185916_UWUUSJV_XGB_sum" ("KEY", "Estimator") SELECT "T"."KEY", "T"."Estimator" 
FROM (SELECT "XGB_sum"."KEY" AS "KEY", "XGB_sum"."Estimator" AS "Estimator" 
FROM (SELECT "T"."KEY" AS "KEY", CAST("T"."Estimator" AS DOUBLE) AS "Estimator" 
FROM (SELECT "XGB_Union"."KEY" AS "KEY", sum("XGB_Union"."Estimator") AS "Estimator" 
FROM "XGB_Union" GROUP BY "XGB_Union"."KEY") AS "T") AS "XGB_sum") AS "T"

-- Code For temporary table TMP_20221018185916_UWUUSJV_XGB_sum part 3. Create Index 

CREATE INDEX "ix_TMP_20221018185916_UWUUSJV_XGB_sum_KEY" ON "TMP_20221018185916_UWUUSJV_XGB_sum" ("KEY")

-- Model deployment code

SELECT "XGB_sum"."KEY" AS "KEY", "XGB_sum"."Estimator" + 0.5 AS "Estimator" 
FROM "TMP_20221018185916_UWUUSJV_XGB_sum" AS "XGB_sum"