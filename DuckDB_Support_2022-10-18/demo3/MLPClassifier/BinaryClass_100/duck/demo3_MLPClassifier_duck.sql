-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : MLPClassifier
-- Dataset : BinaryClass_100
-- Database : duck


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018184946_SU3RX5D_HL_1_relu_1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018184946_SU3RX5D_HL_1_relu_1" (
	"KEY" BIGINT NOT NULL, 
	"NEUR_1_1" DOUBLE, 
	"NEUR_1_2" DOUBLE, 
	"NEUR_1_3" DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018184946_SU3RX5D_HL_1_relu_1 part 2. Populate

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", CAST("ADS"."Feature_0" AS DOUBLE) AS "Feature_0", CAST("ADS"."Feature_1" AS DOUBLE) AS "Feature_1", CAST("ADS"."Feature_2" AS DOUBLE) AS "Feature_2", CAST("ADS"."Feature_3" AS DOUBLE) AS "Feature_3", CAST("ADS"."Feature_4" AS DOUBLE) AS "Feature_4", CAST("ADS"."Feature_5" AS DOUBLE) AS "Feature_5", CAST("ADS"."Feature_6" AS DOUBLE) AS "Feature_6", CAST("ADS"."Feature_7" AS DOUBLE) AS "Feature_7", CAST("ADS"."Feature_8" AS DOUBLE) AS "Feature_8", CAST("ADS"."Feature_9" AS DOUBLE) AS "Feature_9", CAST("ADS"."Feature_10" AS DOUBLE) AS "Feature_10", CAST("ADS"."Feature_11" AS DOUBLE) AS "Feature_11", CAST("ADS"."Feature_12" AS DOUBLE) AS "Feature_12", CAST("ADS"."Feature_13" AS DOUBLE) AS "Feature_13", CAST("ADS"."Feature_14" AS DOUBLE) AS "Feature_14", CAST("ADS"."Feature_15" AS DOUBLE) AS "Feature_15", CAST("ADS"."Feature_16" AS DOUBLE) AS "Feature_16", CAST("ADS"."Feature_17" AS DOUBLE) AS "Feature_17", CAST("ADS"."Feature_18" AS DOUBLE) AS "Feature_18", CAST("ADS"."Feature_19" AS DOUBLE) AS "Feature_19", CAST("ADS"."Feature_20" AS DOUBLE) AS "Feature_20", CAST("ADS"."Feature_21" AS DOUBLE) AS "Feature_21", CAST("ADS"."Feature_22" AS DOUBLE) AS "Feature_22", CAST("ADS"."Feature_23" AS DOUBLE) AS "Feature_23", CAST("ADS"."Feature_24" AS DOUBLE) AS "Feature_24", CAST("ADS"."Feature_25" AS DOUBLE) AS "Feature_25", CAST("ADS"."Feature_26" AS DOUBLE) AS "Feature_26", CAST("ADS"."Feature_27" AS DOUBLE) AS "Feature_27", CAST("ADS"."Feature_28" AS DOUBLE) AS "Feature_28", CAST("ADS"."Feature_29" AS DOUBLE) AS "Feature_29", CAST("ADS"."Feature_30" AS DOUBLE) AS "Feature_30", CAST("ADS"."Feature_31" AS DOUBLE) AS "Feature_31", CAST("ADS"."Feature_32" AS DOUBLE) AS "Feature_32", CAST("ADS"."Feature_33" AS DOUBLE) AS "Feature_33", CAST("ADS"."Feature_34" AS DOUBLE) AS "Feature_34", CAST("ADS"."Feature_35" AS DOUBLE) AS "Feature_35", CAST("ADS"."Feature_36" AS DOUBLE) AS "Feature_36", CAST("ADS"."Feature_37" AS DOUBLE) AS "Feature_37", CAST("ADS"."Feature_38" AS DOUBLE) AS "Feature_38", CAST("ADS"."Feature_39" AS DOUBLE) AS "Feature_39", CAST("ADS"."Feature_40" AS DOUBLE) AS "Feature_40", CAST("ADS"."Feature_41" AS DOUBLE) AS "Feature_41", CAST("ADS"."Feature_42" AS DOUBLE) AS "Feature_42", CAST("ADS"."Feature_43" AS DOUBLE) AS "Feature_43", CAST("ADS"."Feature_44" AS DOUBLE) AS "Feature_44", CAST("ADS"."Feature_45" AS DOUBLE) AS "Feature_45", CAST("ADS"."Feature_46" AS DOUBLE) AS "Feature_46", CAST("ADS"."Feature_47" AS DOUBLE) AS "Feature_47", CAST("ADS"."Feature_48" AS DOUBLE) AS "Feature_48", CAST("ADS"."Feature_49" AS DOUBLE) AS "Feature_49", CAST("ADS"."Feature_50" AS DOUBLE) AS "Feature_50", CAST("ADS"."Feature_51" AS DOUBLE) AS "Feature_51", CAST("ADS"."Feature_52" AS DOUBLE) AS "Feature_52", CAST("ADS"."Feature_53" AS DOUBLE) AS "Feature_53", CAST("ADS"."Feature_54" AS DOUBLE) AS "Feature_54", CAST("ADS"."Feature_55" AS DOUBLE) AS "Feature_55", CAST("ADS"."Feature_56" AS DOUBLE) AS "Feature_56", CAST("ADS"."Feature_57" AS DOUBLE) AS "Feature_57", CAST("ADS"."Feature_58" AS DOUBLE) AS "Feature_58", CAST("ADS"."Feature_59" AS DOUBLE) AS "Feature_59", CAST("ADS"."Feature_60" AS DOUBLE) AS "Feature_60", CAST("ADS"."Feature_61" AS DOUBLE) AS "Feature_61", CAST("ADS"."Feature_62" AS DOUBLE) AS "Feature_62", CAST("ADS"."Feature_63" AS DOUBLE) AS "Feature_63", CAST("ADS"."Feature_64" AS DOUBLE) AS "Feature_64", CAST("ADS"."Feature_65" AS DOUBLE) AS "Feature_65", CAST("ADS"."Feature_66" AS DOUBLE) AS "Feature_66", CAST("ADS"."Feature_67" AS DOUBLE) AS "Feature_67", CAST("ADS"."Feature_68" AS DOUBLE) AS "Feature_68", CAST("ADS"."Feature_69" AS DOUBLE) AS "Feature_69", CAST("ADS"."Feature_70" AS DOUBLE) AS "Feature_70", CAST("ADS"."Feature_71" AS DOUBLE) AS "Feature_71", CAST("ADS"."Feature_72" AS DOUBLE) AS "Feature_72", CAST("ADS"."Feature_73" AS DOUBLE) AS "Feature_73", CAST("ADS"."Feature_74" AS DOUBLE) AS "Feature_74", CAST("ADS"."Feature_75" AS DOUBLE) AS "Feature_75", CAST("ADS"."Feature_76" AS DOUBLE) AS "Feature_76", CAST("ADS"."Feature_77" AS DOUBLE) AS "Feature_77", CAST("ADS"."Feature_78" AS DOUBLE) AS "Feature_78", CAST("ADS"."Feature_79" AS DOUBLE) AS "Feature_79", CAST("ADS"."Feature_80" AS DOUBLE) AS "Feature_80", CAST("ADS"."Feature_81" AS DOUBLE) AS "Feature_81", CAST("ADS"."Feature_82" AS DOUBLE) AS "Feature_82", CAST("ADS"."Feature_83" AS DOUBLE) AS "Feature_83", CAST("ADS"."Feature_84" AS DOUBLE) AS "Feature_84", CAST("ADS"."Feature_85" AS DOUBLE) AS "Feature_85", CAST("ADS"."Feature_86" AS DOUBLE) AS "Feature_86", CAST("ADS"."Feature_87" AS DOUBLE) AS "Feature_87", CAST("ADS"."Feature_88" AS DOUBLE) AS "Feature_88", CAST("ADS"."Feature_89" AS DOUBLE) AS "Feature_89", CAST("ADS"."Feature_90" AS DOUBLE) AS "Feature_90", CAST("ADS"."Feature_91" AS DOUBLE) AS "Feature_91", CAST("ADS"."Feature_92" AS DOUBLE) AS "Feature_92", CAST("ADS"."Feature_93" AS DOUBLE) AS "Feature_93", CAST("ADS"."Feature_94" AS DOUBLE) AS "Feature_94", CAST("ADS"."Feature_95" AS DOUBLE) AS "Feature_95", CAST("ADS"."Feature_96" AS DOUBLE) AS "Feature_96", CAST("ADS"."Feature_97" AS DOUBLE) AS "Feature_97", CAST("ADS"."Feature_98" AS DOUBLE) AS "Feature_98", CAST("ADS"."Feature_99" AS DOUBLE) AS "Feature_99" 
FROM "BinaryClass_100" AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 0.543810525860687 * "IL"."Feature_0" + -0.04852096927525504 * "IL"."Feature_1" + -0.14262030884457827 * "IL"."Feature_2" + -0.09163054751929905 * "IL"."Feature_3" + -0.9978439954378284 * "IL"."Feature_4" + -0.149460967041053 * "IL"."Feature_5" + 0.21061060369065587 * "IL"."Feature_6" + 0.07345820774114714 * "IL"."Feature_7" + 0.035172965676475765 * "IL"."Feature_8" + -0.06881778082904835 * "IL"."Feature_9" + -0.22549395218055662 * "IL"."Feature_10" + 0.2651805102835758 * "IL"."Feature_11" + 0.20234323886818742 * "IL"."Feature_12" + 0.03594125296454148 * "IL"."Feature_13" + 0.2736694506522273 * "IL"."Feature_14" + -0.4329177900903054 * "IL"."Feature_15" + 0.19528365911731912 * "IL"."Feature_16" + -0.24907653131568844 * "IL"."Feature_17" + -0.00040502183795895416 * "IL"."Feature_18" + 0.42226261145150784 * "IL"."Feature_19" + -0.4865142486997401 * "IL"."Feature_20" + 0.0077865394031594835 * "IL"."Feature_21" + -0.16973952456581054 * "IL"."Feature_22" + -0.8881016326056683 * "IL"."Feature_23" + 0.5333213556688471 * "IL"."Feature_24" + -0.11221543387905611 * "IL"."Feature_25" + 0.11198230555278148 * "IL"."Feature_26" + 0.015461518009028754 * "IL"."Feature_27" + -0.3321586095042153 * "IL"."Feature_28" + 0.189817724669241 * "IL"."Feature_29" + 0.15815784410736686 * "IL"."Feature_30" + -0.01496809562423067 * "IL"."Feature_31" + -0.43433054155998435 * "IL"."Feature_32" + -0.5657044222217801 * "IL"."Feature_33" + -1.1123386933102009 * "IL"."Feature_34" + 0.11457459264111887 * "IL"."Feature_35" + -0.7404728627547167 * "IL"."Feature_36" + 0.3744659425267289 * "IL"."Feature_37" + -0.8255021667933562 * "IL"."Feature_38" + 0.6066402598339451 * "IL"."Feature_39" + 0.1510389184515071 * "IL"."Feature_40" + -0.9989115735784112 * "IL"."Feature_41" + -0.3327273017316719 * "IL"."Feature_42" + 0.09426111262232308 * "IL"."Feature_43" + -0.24173047072680864 * "IL"."Feature_44" + -0.4310468010645568 * "IL"."Feature_45" + 0.7436812646963842 * "IL"."Feature_46" + 0.07321964010998941 * "IL"."Feature_47" + -0.4084472703620792 * "IL"."Feature_48" + -0.32210815477768373 * "IL"."Feature_49" + -0.21149722092554976 * "IL"."Feature_50" + 0.49568661216377924 * "IL"."Feature_51" + -0.28628215847390215 * "IL"."Feature_52" + -0.1498441971067827 * "IL"."Feature_53" + -0.1623856458484922 * "IL"."Feature_54" + -0.3566817801716291 * "IL"."Feature_55" + 0.4522744059990111 * "IL"."Feature_56" + 0.9108017918702592 * "IL"."Feature_57" + -0.18357696956190286 * "IL"."Feature_58" + 0.4442244444371001 * "IL"."Feature_59" + -0.10579897361649414 * "IL"."Feature_60" + -0.2180909332516961 * "IL"."Feature_61" + 0.23111765002784138 * "IL"."Feature_62" + 0.38421689780779816 * "IL"."Feature_63" + -0.35299400896266564 * "IL"."Feature_64" + -0.01458981097183798 * "IL"."Feature_65" + -0.2981639769827525 * "IL"."Feature_66" + 0.9698382092978435 * "IL"."Feature_67" + -0.2134035517513693 * "IL"."Feature_68" + -0.5846150736150643 * "IL"."Feature_69" + -0.23022223247672238 * "IL"."Feature_70" + -0.4785758690839616 * "IL"."Feature_71" + -0.05831705204560102 * "IL"."Feature_72" + -0.30537026253080657 * "IL"."Feature_73" + 0.7311241940077982 * "IL"."Feature_74" + -0.5718132983349934 * "IL"."Feature_75" + 0.9235303445210189 * "IL"."Feature_76" + -0.6525206358061376 * "IL"."Feature_77" + -0.06020959361463291 * "IL"."Feature_78" + 0.2179856734625397 * "IL"."Feature_79" + 0.28544494263065495 * "IL"."Feature_80" + -0.1183101164529961 * "IL"."Feature_81" + -0.575364869693445 * "IL"."Feature_82" + 0.1896485415103828 * "IL"."Feature_83" + -0.11689014617020436 * "IL"."Feature_84" + 0.04455756783041817 * "IL"."Feature_85" + -0.6626056092850019 * "IL"."Feature_86" + 0.15300307134596322 * "IL"."Feature_87" + 0.08995311053182942 * "IL"."Feature_88" + -0.04158373159381238 * "IL"."Feature_89" + -0.7608349828482045 * "IL"."Feature_90" + -0.6747981540464478 * "IL"."Feature_91" + 0.8340078843103533 * "IL"."Feature_92" + -0.46809491362025857 * "IL"."Feature_93" + -0.5146419094813103 * "IL"."Feature_94" + -0.15985878684134333 * "IL"."Feature_95" + -0.4035854884570722 * "IL"."Feature_96" + -0.7956484198202035 * "IL"."Feature_97" + 0.5215457854523394 * "IL"."Feature_98" + -0.05123866522940705 * "IL"."Feature_99" + -1.3044503037004063 AS "NEUR_1_1", 0.08992955432017144 * "IL"."Feature_0" + 0.05093083093954969 * "IL"."Feature_1" + -0.10004078097573486 * "IL"."Feature_2" + 0.1567291001968712 * "IL"."Feature_3" + -0.6625129611579725 * "IL"."Feature_4" + 0.12477296724359564 * "IL"."Feature_5" + -0.14300036893698959 * "IL"."Feature_6" + -0.35538394764066716 * "IL"."Feature_7" + 0.34602107966453455 * "IL"."Feature_8" + -0.20058052746591534 * "IL"."Feature_9" + -0.26673565375464314 * "IL"."Feature_10" + -0.10760701052174601 * "IL"."Feature_11" + -0.3305217803375303 * "IL"."Feature_12" + 0.37773503464006314 * "IL"."Feature_13" + 0.034713302778784386 * "IL"."Feature_14" + -0.24210471165300196 * "IL"."Feature_15" + 0.1632249156355702 * "IL"."Feature_16" + -0.115860457111214 * "IL"."Feature_17" + -0.11497783064058337 * "IL"."Feature_18" + 0.3119783033067137 * "IL"."Feature_19" + -0.08020802432258292 * "IL"."Feature_20" + -0.14477288056745888 * "IL"."Feature_21" + -0.3119263213716549 * "IL"."Feature_22" + -0.23609196107156794 * "IL"."Feature_23" + -0.049948422006820224 * "IL"."Feature_24" + -0.16254816212799145 * "IL"."Feature_25" + 0.02645709640197634 * "IL"."Feature_26" + 0.17245228120079636 * "IL"."Feature_27" + -0.07259861769667698 * "IL"."Feature_28" + -0.28734939580859037 * "IL"."Feature_29" + -0.24481582263645443 * "IL"."Feature_30" + -0.3607261166561894 * "IL"."Feature_31" + -0.002602057537684084 * "IL"."Feature_32" + -0.2178659395445215 * "IL"."Feature_33" + -0.34625254896690405 * "IL"."Feature_34" + 0.06444833076703713 * "IL"."Feature_35" + 0.21058239991179883 * "IL"."Feature_36" + -0.20375379360884663 * "IL"."Feature_37" + 0.28460715017765176 * "IL"."Feature_38" + -0.02743287326846342 * "IL"."Feature_39" + 0.322587567598531 * "IL"."Feature_40" + -0.04511443370847278 * "IL"."Feature_41" + 0.11424134035099852 * "IL"."Feature_42" + 0.03269119204566265 * "IL"."Feature_43" + 0.03834909737037348 * "IL"."Feature_44" + -0.1523771841511081 * "IL"."Feature_45" + 0.3499643193598687 * "IL"."Feature_46" + 0.09398336799879052 * "IL"."Feature_47" + -0.20205332847586288 * "IL"."Feature_48" + -0.23347979577188882 * "IL"."Feature_49" + -0.11008405587425345 * "IL"."Feature_50" + -0.2788660986951055 * "IL"."Feature_51" + -0.1585683663176496 * "IL"."Feature_52" + -0.018083483226455956 * "IL"."Feature_53" + 0.11581279548609384 * "IL"."Feature_54" + -0.1802241538110935 * "IL"."Feature_55" + -0.011067659303487071 * "IL"."Feature_56" + 0.8441462401945611 * "IL"."Feature_57" + 0.1250777590283959 * "IL"."Feature_58" + -0.11859692350109835 * "IL"."Feature_59" + -0.5894880069249632 * "IL"."Feature_60" + 0.2766724676208747 * "IL"."Feature_61" + 0.002831717306130189 * "IL"."Feature_62" + 0.17791545590532665 * "IL"."Feature_63" + 0.4278962671884324 * "IL"."Feature_64" + 0.2299111562740447 * "IL"."Feature_65" + 0.5454087324787119 * "IL"."Feature_66" + 0.5144680115405664 * "IL"."Feature_67" + 0.028586710317724 * "IL"."Feature_68" + -0.30414601097570887 * "IL"."Feature_69" + -0.23554955376208267 * "IL"."Feature_70" + 0.4496746150832621 * "IL"."Feature_71" + -0.10151038288524371 * "IL"."Feature_72" + -0.004811065621353673 * "IL"."Feature_73" + 0.0302463346454095 * "IL"."Feature_74" + 0.32157278871134287 * "IL"."Feature_75" + 0.12099874960116636 * "IL"."Feature_76" + -0.20294917425420667 * "IL"."Feature_77" + 0.06799501778207304 * "IL"."Feature_78" + 0.23459986681634484 * "IL"."Feature_79" + 0.10131288559265529 * "IL"."Feature_80" + 0.12518218709891604 * "IL"."Feature_81" + -0.02544466563026247 * "IL"."Feature_82" + 0.12736415970304113 * "IL"."Feature_83" + -0.05986678006907387 * "IL"."Feature_84" + 0.000639001907764873 * "IL"."Feature_85" + -0.04821315833129754 * "IL"."Feature_86" + -0.29378759175884006 * "IL"."Feature_87" + -0.2390234362021259 * "IL"."Feature_88" + -0.11092433843121169 * "IL"."Feature_89" + -0.18632326590627926 * "IL"."Feature_90" + -0.39765918158400543 * "IL"."Feature_91" + 0.45681367659574607 * "IL"."Feature_92" + 0.3235590228873254 * "IL"."Feature_93" + -0.33910665338480894 * "IL"."Feature_94" + 0.0009555225047109517 * "IL"."Feature_95" + 0.002346457656170437 * "IL"."Feature_96" + -0.07998250273867684 * "IL"."Feature_97" + 0.28892349617380453 * "IL"."Feature_98" + -0.23627131301631413 * "IL"."Feature_99" + -0.11555282605467496 AS "NEUR_1_2", 0.41936445030257213 * "IL"."Feature_0" + -0.06484336421919307 * "IL"."Feature_1" + 0.022221252035526173 * "IL"."Feature_2" + -0.13502352411623914 * "IL"."Feature_3" + -1.1984848496272773 * "IL"."Feature_4" + 0.5717129211150893 * "IL"."Feature_5" + -0.071088117686517 * "IL"."Feature_6" + -0.25098544846280957 * "IL"."Feature_7" + -0.15604722621905104 * "IL"."Feature_8" + 0.49029941191382304 * "IL"."Feature_9" + 0.008412074461839666 * "IL"."Feature_10" + -0.03394601331005423 * "IL"."Feature_11" + 0.3294974874754326 * "IL"."Feature_12" + 0.03426590540651518 * "IL"."Feature_13" + -0.3234436410832219 * "IL"."Feature_14" + -0.41004761133131046 * "IL"."Feature_15" + -0.2983671380266931 * "IL"."Feature_16" + 0.07162411979671746 * "IL"."Feature_17" + -0.323196218447009 * "IL"."Feature_18" + -0.36569399113298184 * "IL"."Feature_19" + 0.06614820601501596 * "IL"."Feature_20" + 0.08448025279784818 * "IL"."Feature_21" + -0.2940273229237407 * "IL"."Feature_22" + 0.09925489339717805 * "IL"."Feature_23" + -0.06868656771691518 * "IL"."Feature_24" + 0.03290636658539591 * "IL"."Feature_25" + -0.027595425504570475 * "IL"."Feature_26" + 0.45699465092394664 * "IL"."Feature_27" + -0.1342096018612784 * "IL"."Feature_28" + 0.08504952564793222 * "IL"."Feature_29" + -0.2349420186942931 * "IL"."Feature_30" + -0.2080855909266685 * "IL"."Feature_31" + 0.0204106966832582 * "IL"."Feature_32" + -0.16456541030106828 * "IL"."Feature_33" + -0.07366010202730212 * "IL"."Feature_34" + -0.2113382779368426 * "IL"."Feature_35" + -0.1411488055839813 * "IL"."Feature_36" + 0.4365019887402887 * "IL"."Feature_37" + -0.10849772480044156 * "IL"."Feature_38" + -0.4796648810652232 * "IL"."Feature_39" + 0.042510264048507926 * "IL"."Feature_40" + -0.2002365013612989 * "IL"."Feature_41" + -0.4529483219678608 * "IL"."Feature_42" + 0.06286055513247184 * "IL"."Feature_43" + -0.6082817796445588 * "IL"."Feature_44" + -0.41778589517824527 * "IL"."Feature_45" + 0.36253134931804526 * "IL"."Feature_46" + 0.0706078921993932 * "IL"."Feature_47" + -0.6070585344782657 * "IL"."Feature_48" + -0.21914874543792662 * "IL"."Feature_49" + 0.23299909867543153 * "IL"."Feature_50" + 0.015165253906121678 * "IL"."Feature_51" + 0.0779415383298949 * "IL"."Feature_52" + 0.08341895187474296 * "IL"."Feature_53" + -0.016334238950146757 * "IL"."Feature_54" + -0.1806804411618514 * "IL"."Feature_55" + 0.005690845816861113 * "IL"."Feature_56" + 1.1530397436236353 * "IL"."Feature_57" + -0.1984950735402984 * "IL"."Feature_58" + 0.17584745916729083 * "IL"."Feature_59" + -0.3553647898926366 * "IL"."Feature_60" + 0.12553252886769126 * "IL"."Feature_61" + -0.3040375931720334 * "IL"."Feature_62" + 0.36225006330904796 * "IL"."Feature_63" + -0.008517266917602555 * "IL"."Feature_64" + 0.11205126330026167 * "IL"."Feature_65" + -0.24076922668366219 * "IL"."Feature_66" + 0.12211446002406817 * "IL"."Feature_67" + -0.6531832045945959 * "IL"."Feature_68" + 0.02339686759302242 * "IL"."Feature_69" + -0.023607609361693437 * "IL"."Feature_70" + -0.4212539627055139 * "IL"."Feature_71" + -0.09748051722223221 * "IL"."Feature_72" + -0.403652763238829 * "IL"."Feature_73" + 0.3965798314717786 * "IL"."Feature_74" + -0.018973644842765904 * "IL"."Feature_75" + 0.5574683127864203 * "IL"."Feature_76" + -0.22956014227573038 * "IL"."Feature_77" + -0.1721118168295215 * "IL"."Feature_78" + -0.13023932728602466 * "IL"."Feature_79" + 0.004613096183594519 * "IL"."Feature_80" + 0.3089640961135833 * "IL"."Feature_81" + 0.6762277567460623 * "IL"."Feature_82" + -0.004971598347427018 * "IL"."Feature_83" + 0.15264643950595677 * "IL"."Feature_84" + -0.18273581182604706 * "IL"."Feature_85" + -0.3062934515722914 * "IL"."Feature_86" + 0.024381395149659337 * "IL"."Feature_87" + 0.12597893573326446 * "IL"."Feature_88" + -0.3886042812870403 * "IL"."Feature_89" + -0.22757770660704402 * "IL"."Feature_90" + -0.013858592376785129 * "IL"."Feature_91" + 0.08841882463073814 * "IL"."Feature_92" + -0.575633660676903 * "IL"."Feature_93" + -0.10930665370696216 * "IL"."Feature_94" + -0.3106982713537746 * "IL"."Feature_95" + -0.25220869672951823 * "IL"."Feature_96" + 0.04973118894928505 * "IL"."Feature_97" + 0.15397823559300736 * "IL"."Feature_98" + 0.005408193887217164 * "IL"."Feature_99" + 0.5944271117905863 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", greatest("HL_BA_1"."NEUR_1_1", 0) AS "NEUR_1_1", greatest("HL_BA_1"."NEUR_1_2", 0) AS "NEUR_1_2", greatest("HL_BA_1"."NEUR_1_3", 0) AS "NEUR_1_3" 
FROM "HL_BA_1")
 INSERT INTO "TMP_20221018184946_SU3RX5D_HL_1_relu_1" ("KEY", "NEUR_1_1", "NEUR_1_2", "NEUR_1_3") SELECT "T"."KEY", "T"."NEUR_1_1", "T"."NEUR_1_2", "T"."NEUR_1_3" 
FROM (SELECT "HL_1_relu_1"."KEY" AS "KEY", "HL_1_relu_1"."NEUR_1_1" AS "NEUR_1_1", "HL_1_relu_1"."NEUR_1_2" AS "NEUR_1_2", "HL_1_relu_1"."NEUR_1_3" AS "NEUR_1_3" 
FROM (SELECT "HL_1_relu"."KEY" AS "KEY", "HL_1_relu"."NEUR_1_1" AS "NEUR_1_1", "HL_1_relu"."NEUR_1_2" AS "NEUR_1_2", "HL_1_relu"."NEUR_1_3" AS "NEUR_1_3" 
FROM "HL_1_relu") AS "HL_1_relu_1") AS "T"

-- Code For temporary table TMP_20221018184946_SU3RX5D_HL_1_relu_1 part 3. Create Index 

CREATE INDEX "ix_TMP_20221018184946_SU3RX5D_HL_1_relu_1_KEY" ON "TMP_20221018184946_SU3RX5D_HL_1_relu_1" ("KEY")

-- Code For temporary table TMP_20221018184946_MNVFW4O_OL_logistic_1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018184946_MNVFW4O_OL_logistic_1" (
	"KEY" BIGINT NOT NULL, 
	"NEUR_3_1" DOUBLE, 
	PRIMARY KEY ("KEY")
)

 ON COMMIT PRESERVE ROWS

-- Code For temporary table TMP_20221018184946_MNVFW4O_OL_logistic_1 part 2. Populate

WITH "HL_BA_2" AS 
(SELECT "HL_1_relu_1"."KEY" AS "KEY", 0.5148409453667069 * "HL_1_relu_1"."NEUR_1_1" + 0.7209597763633812 * "HL_1_relu_1"."NEUR_1_2" + 1.3969268364446992 * "HL_1_relu_1"."NEUR_1_3" + -0.41953977635607664 AS "NEUR_2_1", -0.19391915396251286 * "HL_1_relu_1"."NEUR_1_1" + -0.09655908916193838 * "HL_1_relu_1"."NEUR_1_2" + 0.19259226774058893 * "HL_1_relu_1"."NEUR_1_3" + 2.7845322715200167 AS "NEUR_2_2", -0.3797843945549639 * "HL_1_relu_1"."NEUR_1_1" + 1.3297100048276367 * "HL_1_relu_1"."NEUR_1_2" + 1.066264454265268 * "HL_1_relu_1"."NEUR_1_3" + -0.2089967964829117 AS "NEUR_2_3", -0.46741652319735755 * "HL_1_relu_1"."NEUR_1_1" + 0.22611398743632646 * "HL_1_relu_1"."NEUR_1_2" + -0.6019270477229552 * "HL_1_relu_1"."NEUR_1_3" + 0.8638999706787276 AS "NEUR_2_4", -0.6091648738986585 * "HL_1_relu_1"."NEUR_1_1" + -0.37755573349605265 * "HL_1_relu_1"."NEUR_1_2" + -0.6728007362203826 * "HL_1_relu_1"."NEUR_1_3" + -0.01807831622698608 AS "NEUR_2_5" 
FROM "TMP_20221018184946_SU3RX5D_HL_1_relu_1" AS "HL_1_relu_1"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", greatest("HL_BA_2"."NEUR_2_1", 0) AS "NEUR_2_1", greatest("HL_BA_2"."NEUR_2_2", 0) AS "NEUR_2_2", greatest("HL_BA_2"."NEUR_2_3", 0) AS "NEUR_2_3", greatest("HL_BA_2"."NEUR_2_4", 0) AS "NEUR_2_4", greatest("HL_BA_2"."NEUR_2_5", 0) AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", 1.5273833487475024 * "HL_2_relu"."NEUR_2_1" + -1.054810753920572 * "HL_2_relu"."NEUR_2_2" + 1.4796920204963708 * "HL_2_relu"."NEUR_2_3" + -0.06512358824392589 * "HL_2_relu"."NEUR_2_4" + -0.27339348216398346 * "HL_2_relu"."NEUR_2_5" + -0.7434028116477166 AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_logistic" AS 
(SELECT "OL_BA"."KEY" AS "KEY", 1.0 / (1.0 + exp(least(100.0, greatest(-100.0, -"OL_BA"."NEUR_3_1")))) AS "NEUR_3_1" 
FROM "OL_BA")
 INSERT INTO "TMP_20221018184946_MNVFW4O_OL_logistic_1" ("KEY", "NEUR_3_1") SELECT "T"."KEY", "T"."NEUR_3_1" 
FROM (SELECT "OL_logistic_1"."KEY" AS "KEY", "OL_logistic_1"."NEUR_3_1" AS "NEUR_3_1" 
FROM (SELECT "OL_logistic"."KEY" AS "KEY", "OL_logistic"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_logistic") AS "OL_logistic_1") AS "T"

-- Code For temporary table TMP_20221018184946_MNVFW4O_OL_logistic_1 part 3. Create Index 

CREATE INDEX "ix_TMP_20221018184946_MNVFW4O_OL_logistic_1_KEY" ON "TMP_20221018184946_MNVFW4O_OL_logistic_1" ("KEY")

-- Model deployment code

WITH orig_cte AS 
(SELECT "OL_logistic_1"."KEY" AS "KEY", CAST(NULL AS DOUBLE) AS "Score_0", CAST(NULL AS DOUBLE) AS "Score_1", 1.0 - "OL_logistic_1"."NEUR_3_1" AS "Proba_0", "OL_logistic_1"."NEUR_3_1" AS "Proba_1", CAST(NULL AS DOUBLE) AS "LogProba_0", CAST(NULL AS DOUBLE) AS "LogProba_1", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS DOUBLE) AS "DecisionProba" 
FROM "TMP_20221018184946_MNVFW4O_OL_logistic_1" AS "OL_logistic_1"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", max(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE '-Infinity'::float8 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE '-Infinity'::float8 END AS "LogProba_1", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte