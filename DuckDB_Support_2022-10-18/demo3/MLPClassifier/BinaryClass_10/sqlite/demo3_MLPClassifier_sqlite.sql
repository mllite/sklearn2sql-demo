-- This SQL code was generated by sklearn2sql (development version).
-- Copyright 2018

-- Model : MLPClassifier
-- Dataset : BinaryClass_10
-- Database : sqlite


-- This SQL code can contain one or more statements, to be executed in the order they appear in this file.



-- Code For temporary table TMP_20221018184835_SM8BGJO_HL_1_relu_1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018184835_SM8BGJO_HL_1_relu_1" (
	"KEY" BIGINT NOT NULL, 
	"NEUR_1_1" FLOAT, 
	"NEUR_1_2" FLOAT, 
	"NEUR_1_3" FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20221018184835_SM8BGJO_HL_1_relu_1 part 2. Populate

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", CAST("ADS"."Feature_0" AS FLOAT) AS "Feature_0", CAST("ADS"."Feature_1" AS FLOAT) AS "Feature_1", CAST("ADS"."Feature_2" AS FLOAT) AS "Feature_2", CAST("ADS"."Feature_3" AS FLOAT) AS "Feature_3", CAST("ADS"."Feature_4" AS FLOAT) AS "Feature_4", CAST("ADS"."Feature_5" AS FLOAT) AS "Feature_5", CAST("ADS"."Feature_6" AS FLOAT) AS "Feature_6", CAST("ADS"."Feature_7" AS FLOAT) AS "Feature_7", CAST("ADS"."Feature_8" AS FLOAT) AS "Feature_8", CAST("ADS"."Feature_9" AS FLOAT) AS "Feature_9" 
FROM "BinaryClass_10" AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", -1.1336645153991405 * "IL"."Feature_0" + -0.7967072220454992 * "IL"."Feature_1" + -2.4532840822284245 * "IL"."Feature_2" + 0.4496197433712063 * "IL"."Feature_3" + -1.44911188214198 * "IL"."Feature_4" + 1.1301693060704945 * "IL"."Feature_5" + -0.809962194333091 * "IL"."Feature_6" + -0.43454612528436265 * "IL"."Feature_7" + 1.0205047420048479 * "IL"."Feature_8" + 0.6931503139958658 * "IL"."Feature_9" + -1.7800543691559358 AS "NEUR_1_1", 6.554577870098814 * "IL"."Feature_0" + 2.18981897047543 * "IL"."Feature_1" + 3.277320239759719 * "IL"."Feature_2" + 4.456965966725077 * "IL"."Feature_3" + 0.5545703446948508 * "IL"."Feature_4" + -3.87437075045264 * "IL"."Feature_5" + -0.164664321168003 * "IL"."Feature_6" + 1.6776674747569897 * "IL"."Feature_7" + 3.7509608136500177 * "IL"."Feature_8" + -5.715264060805492 * "IL"."Feature_9" + -2.6703394413589128 AS "NEUR_1_2", -3.6104972093391825 * "IL"."Feature_0" + -0.23492562635353653 * "IL"."Feature_1" + -0.5527134444146933 * "IL"."Feature_2" + 0.4604689725153715 * "IL"."Feature_3" + -0.24571780834057333 * "IL"."Feature_4" + -2.356395940299958 * "IL"."Feature_5" + -2.2445145545825733 * "IL"."Feature_6" + -2.2040578678008282 * "IL"."Feature_7" + 0.3588784468763537 * "IL"."Feature_8" + 5.440776472378545 * "IL"."Feature_9" + 2.292907117923293 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", max("HL_BA_1"."NEUR_1_1", 0) AS "NEUR_1_1", max("HL_BA_1"."NEUR_1_2", 0) AS "NEUR_1_2", max("HL_BA_1"."NEUR_1_3", 0) AS "NEUR_1_3" 
FROM "HL_BA_1")
 INSERT INTO "TMP_20221018184835_SM8BGJO_HL_1_relu_1" ("KEY", "NEUR_1_1", "NEUR_1_2", "NEUR_1_3") SELECT "T"."KEY", "T"."NEUR_1_1", "T"."NEUR_1_2", "T"."NEUR_1_3" 
FROM (SELECT "HL_1_relu_1"."KEY" AS "KEY", "HL_1_relu_1"."NEUR_1_1" AS "NEUR_1_1", "HL_1_relu_1"."NEUR_1_2" AS "NEUR_1_2", "HL_1_relu_1"."NEUR_1_3" AS "NEUR_1_3" 
FROM (SELECT "HL_1_relu"."KEY" AS "KEY", "HL_1_relu"."NEUR_1_1" AS "NEUR_1_1", "HL_1_relu"."NEUR_1_2" AS "NEUR_1_2", "HL_1_relu"."NEUR_1_3" AS "NEUR_1_3" 
FROM "HL_1_relu") AS "HL_1_relu_1") AS "T"

-- Code For temporary table TMP_20221018184835_SM8BGJO_HL_1_relu_1 part 3. Create Index 

CREATE INDEX "ix_TMP_20221018184835_SM8BGJO_HL_1_relu_1_KEY" ON "TMP_20221018184835_SM8BGJO_HL_1_relu_1" ("KEY")

-- Code For temporary table TMP_20221018184835_6G5XO82_OL_logistic_1 part 1. Create 


CREATE TEMPORARY TABLE "TMP_20221018184835_6G5XO82_OL_logistic_1" (
	"KEY" BIGINT NOT NULL, 
	"NEUR_3_1" FLOAT, 
	PRIMARY KEY ("KEY")
)



-- Code For temporary table TMP_20221018184835_6G5XO82_OL_logistic_1 part 2. Populate

WITH "HL_BA_2" AS 
(SELECT "HL_1_relu_1"."KEY" AS "KEY", -0.6497803299694318 * "HL_1_relu_1"."NEUR_1_1" + 0.7202639668286965 * "HL_1_relu_1"."NEUR_1_2" + -0.41591466989523723 * "HL_1_relu_1"."NEUR_1_3" + -13.348550510525751 AS "NEUR_2_1", -2.0656500390392742 * "HL_1_relu_1"."NEUR_1_1" + 0.17880948763208898 * "HL_1_relu_1"."NEUR_1_2" + -1.6640691029397932 * "HL_1_relu_1"."NEUR_1_3" + 6.301826088851817 AS "NEUR_2_2", 1.4238163904385697 * "HL_1_relu_1"."NEUR_1_1" + 1.5321777922343112 * "HL_1_relu_1"."NEUR_1_2" + 2.6569869072827723 * "HL_1_relu_1"."NEUR_1_3" + -3.659018984018653 AS "NEUR_2_3", 0.11102906374332755 * "HL_1_relu_1"."NEUR_1_1" + -0.5044641701775674 * "HL_1_relu_1"."NEUR_1_2" + -0.40640732798651896 * "HL_1_relu_1"."NEUR_1_3" + -0.7964330424336139 AS "NEUR_2_4", -0.5438955611047671 * "HL_1_relu_1"."NEUR_1_1" + 1.0523745824430386 * "HL_1_relu_1"."NEUR_1_2" + -0.601205987370633 * "HL_1_relu_1"."NEUR_1_3" + -3.8346008555482354 AS "NEUR_2_5" 
FROM "TMP_20221018184835_SM8BGJO_HL_1_relu_1" AS "HL_1_relu_1"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", max("HL_BA_2"."NEUR_2_1", 0) AS "NEUR_2_1", max("HL_BA_2"."NEUR_2_2", 0) AS "NEUR_2_2", max("HL_BA_2"."NEUR_2_3", 0) AS "NEUR_2_3", max("HL_BA_2"."NEUR_2_4", 0) AS "NEUR_2_4", max("HL_BA_2"."NEUR_2_5", 0) AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", -5.8044559721964 * "HL_2_relu"."NEUR_2_1" + -6.2242309505655005 * "HL_2_relu"."NEUR_2_2" + 4.531923468416393 * "HL_2_relu"."NEUR_2_3" + 0.7004551908179469 * "HL_2_relu"."NEUR_2_4" + -3.3191199208766085 * "HL_2_relu"."NEUR_2_5" + 2.219787400586847 AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_logistic" AS 
(SELECT "OL_BA"."KEY" AS "KEY", 1.0 / (1.0 + exp(min(100.0, max(-100.0, -"OL_BA"."NEUR_3_1")))) AS "NEUR_3_1" 
FROM "OL_BA")
 INSERT INTO "TMP_20221018184835_6G5XO82_OL_logistic_1" ("KEY", "NEUR_3_1") SELECT "T"."KEY", "T"."NEUR_3_1" 
FROM (SELECT "OL_logistic_1"."KEY" AS "KEY", "OL_logistic_1"."NEUR_3_1" AS "NEUR_3_1" 
FROM (SELECT "OL_logistic"."KEY" AS "KEY", "OL_logistic"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_logistic") AS "OL_logistic_1") AS "T"

-- Code For temporary table TMP_20221018184835_6G5XO82_OL_logistic_1 part 3. Create Index 

CREATE INDEX "ix_TMP_20221018184835_6G5XO82_OL_logistic_1_KEY" ON "TMP_20221018184835_6G5XO82_OL_logistic_1" ("KEY")

-- Model deployment code

WITH orig_cte AS 
(SELECT "OL_logistic_1"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", 1.0 - "OL_logistic_1"."NEUR_3_1" AS "Proba_0", "OL_logistic_1"."NEUR_3_1" AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS BIGINT) AS "Decision", CAST(NULL AS FLOAT) AS "DecisionProba" 
FROM "TMP_20221018184835_6G5XO82_OL_logistic_1" AS "OL_logistic_1"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", orig_cte."DecisionProba" AS "DecisionProba", max_select."KEY_m" AS "KEY_m", max_select."max_Proba" AS "max_Proba" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Proba") AS "max_Proba" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba" 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union."KEY_u" = score_max."KEY"), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."DecisionProba" AS "DecisionProba", score_max."KEY_m" AS "KEY_m", score_max."max_Proba" AS "max_Proba", "arg_max_t_Proba"."KEY_Proba" AS "KEY_Proba", "arg_max_t_Proba"."arg_max_Proba" AS "arg_max_Proba" 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Proba", max(union_with_max.class) AS "arg_max_Proba" 
FROM union_with_max 
WHERE union_with_max."max_Proba" <= union_with_max."Proba" GROUP BY union_with_max."KEY") AS "arg_max_t_Proba" ON score_max."KEY" = "arg_max_t_Proba"."KEY_Proba")
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", arg_max_cte."arg_max_Proba" AS "Decision", arg_max_cte."max_Proba" AS "DecisionProba" 
FROM arg_max_cte